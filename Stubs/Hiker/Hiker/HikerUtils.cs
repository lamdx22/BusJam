// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using UnityEngine;
using System;
using System.Collections.Generic;
using UnityEngine.AI;

namespace Hiker {
    public static class HikerUtils {

        public static UnityEngine.Coroutine DoAction( UnityEngine.MonoBehaviour go, System.Action action, float wait, bool ignoreTimeScale ) {
            return default( UnityEngine.Coroutine );
        }
        public static string GetActiveSceneName() {
            return default( string );
        }
        public static bool CheckLayerMask( UnityEngine.LayerMask mask, int layer ) {
            return default( bool );
        }
        public static void SetLayer( this UnityEngine.Transform t, int layer, bool recursive ) { }
        public static bool IsOutOfRange( UnityEngine.Vector3 originalPos, UnityEngine.Vector3 checkPos, float range ) {
            return default( bool );
        }
        public static bool IsOutOfRange( UnityEngine.BoxCollider boxCollider, UnityEngine.Vector3 pos, float range, out UnityEngine.Vector3 _closestPoint ) {
            _closestPoint = default( UnityEngine.Vector3 ); 
            
            return default( bool );
        }
        public static bool IsInSideOfRange( UnityEngine.Vector3 originalPos, UnityEngine.Vector3 checkPos, float range, bool ignoreHigh ) {
            return default( bool );
        }
        public static System.Collections.Generic.List<int> GetRandomListIndex( int maxIndex, int n ) {
            return default( System.Collections.Generic.List<int> );
        }
        public static bool GetPath( UnityEngine.AI.NavMeshPath path, UnityEngine.Vector3 fromPos, UnityEngine.Vector3 toPos, int passableMask ) {
            return default( bool );
        }
        public static float GetPathLength( UnityEngine.AI.NavMeshPath path ) {
            return default( float );
        }
        public static UnityEngine.Vector2 GetRandomInRect( UnityEngine.Rect rect, UnityEngine.Vector2 rSize ) {
            return default( UnityEngine.Vector2 );
        }
    }
}