%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: -777816280, guid: d3b540462db772b4e977a3cfa5367cb7, type: 3}
  m_Name: SVC_Luna
  m_EditorClassIdentifier: 
  _svcLunaVersion: 3
  _shaderVariants:
  - shaderCompilerPlatform: 5
    shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - DR_RIM_ON
    - LIGHTPROBE_SH
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - DR_RIM_ON
    - LIGHTPROBE_SH
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - DR_RIM_ON
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - DR_RIM_ON
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - DR_RIM_ON
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - DR_RIM_ON
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 0
    passId: 3
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 0
    passId: 3
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNDERLAY_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNDERLAY_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNDERLAY_ON
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNDERLAY_ON
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNDERLAY_ON
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNDERLAY_ON
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNDERLAY_ON
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNDERLAY_ON
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: eb6605f85df3a8149a1db68382da2c36, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: eb6605f85df3a8149a1db68382da2c36, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 10752, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10752, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10721, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10721, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: b68b99c2e57cef4419465c63c527201b, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: b68b99c2e57cef4419465c63c527201b, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _STRAIGHT_ALPHA_INPUT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _STRAIGHT_ALPHA_INPUT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - _STRAIGHT_ALPHA_INPUT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - _STRAIGHT_ALPHA_INPUT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _STRAIGHT_ALPHA_INPUT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _STRAIGHT_ALPHA_INPUT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - PIXELSNAP_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - PIXELSNAP_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHAPREMULTIPLY_ON
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 39ef0b8c9be96494d9f8b2f2c54a28c5, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 39ef0b8c9be96494d9f8b2f2c54a28c5, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f0e778543e4d8a34295b7995426495da, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f0e778543e4d8a34295b7995426495da, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_DISSOLVE
    - _FADING_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_DISSOLVE
    - _FADING_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHABLEND_ON
    - _FADING_ON
    - _
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHABLEND_ON
    - _FADING_ON
    - _
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_DISSOLVE
    - _FADING_ON
    - _ALPHABLEND_ON
    - _
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_DISSOLVE
    - _FADING_ON
    - _ALPHABLEND_ON
    - _
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHATEST_ON
    - _CFXR_ADDITIVE
    - _FADING_ON
    - _
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHATEST_ON
    - _CFXR_ADDITIVE
    - _FADING_ON
    - _
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_DISSOLVE
    - _FADING_ON
    - _ALPHATEST_ON
    - _CFXR_ADDITIVE
    - _
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_DISSOLVE
    - _FADING_ON
    - _ALPHATEST_ON
    - _CFXR_ADDITIVE
    - _
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHABLEND_ON
    - _
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHABLEND_ON
    - _
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_ADDITIVE
    - _FADING_ON
    - _
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_ADDITIVE
    - _FADING_ON
    - _
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_DISSOLVE
    - _FADING_ON
    - _CFXR_ADDITIVE
    - _
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_DISSOLVE
    - _FADING_ON
    - _CFXR_ADDITIVE
    - _
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_ADDITIVE
    - _CFXR_DISSOLVE
    - _
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_ADDITIVE
    - _CFXR_DISSOLVE
    - _
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 947afae4d36f1274ea2e4098262ceef6, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 947afae4d36f1274ea2e4098262ceef6, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 65bbb789ada58ab44aaedbe09687f089, type: 3}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 65bbb789ada58ab44aaedbe09687f089, type: 3}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 20fb5fa09d4675a4e94314a228763c23, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 20fb5fa09d4675a4e94314a228763c23, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: ccf5a0c8f87d3c547aff3daecb3164a4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: ccf5a0c8f87d3c547aff3daecb3164a4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c3c3af59790cf3749ba49fe1c838c94e, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c3c3af59790cf3749ba49fe1c838c94e, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: d287872ca8fd776418c28d332df585c3, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: d287872ca8fd776418c28d332df585c3, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: cf73a0a4b5ea8994f916cd18a97c564b, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: cf73a0a4b5ea8994f916cd18a97c564b, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 227ac21f7763c00489cc458e3938e326, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 227ac21f7763c00489cc458e3938e326, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fb2e16a3d1280334a9e05394e1890f09, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fb2e16a3d1280334a9e05394e1890f09, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_WORLD_SPACE_RING
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_WORLD_SPACE_RING
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
    - _CFXR_WORLD_SPACE_RING
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
    - _CFXR_WORLD_SPACE_RING
  _usedByLunaBuild:
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNDERLAY_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
    - UNDERLAY_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 0
    passId: 3
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 0
    passId: 3
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - DR_RIM_ON
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - DR_RIM_ON
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - OUTLINE_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHAPREMULTIPLY_ON
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _STRAIGHT_ALPHA_INPUT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _STRAIGHT_ALPHA_INPUT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _CELPRIMARYMODE_SINGLE
    - _TEXTUREBLENDINGMODE_MULTIPLY
  - shaderCompilerPlatform: 5
    shader: {fileID: 10752, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10752, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: b68b99c2e57cef4419465c63c527201b, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: b68b99c2e57cef4419465c63c527201b, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10721, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10721, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - OUTLINE_ON
    - UNDERLAY_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - OUTLINE_ON
    - UNDERLAY_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  _includedShaderVariants: []
  _excludedShaderVariants: []
  version: 2133
  _shaderParsedShaders:
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _RingTopOffset;\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD2;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0.xy = in_TEXCOORD0.yy * (-in_TEXCOORD0.zw);\n   
            u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_MatrixV[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixV[0] * in_POSITION0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixV[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixV[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat6
            = min(in_TEXCOORD2.x, in_TEXCOORD2.w);\n    u_xlat0.xy = u_xlat0.xy *
            vec2(u_xlat6) + u_xlat1.xy;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4glstate_matrix_projection[1];\n   
            u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[0] * u_xlat0.xxxx +
            u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[2] * u_xlat1.zzzz
            + u_xlat2;\n    gl_Position = hlslcc_mtx4x4glstate_matrix_projection[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0;\n    u_xlat0.x = u_xlat6 / in_TEXCOORD2.w;\n    u_xlat0.x
            = (-u_xlat0.x) + 1.0;\n    vs_TEXCOORD1.x = u_xlat0.x * u_xlat0.x;\n   
            vs_TEXCOORD1.z = in_TEXCOORD2.y / in_TEXCOORD2.w;\n    vs_TEXCOORD1.y
            = (-_RingTopOffset) + 1.0;\n    vs_TEXCOORD1.w = in_TEXCOORD2.z;\n   
            u_xlat0.xy = in_TEXCOORD0.yy * in_TEXCOORD0.zw;\n    u_xlat0.xy = vec2(u_xlat6)
            * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy / in_TEXCOORD2.ww;\n    vs_TEXCOORD2.zw
            = (-u_xlat0.xy) + in_TEXCOORD0.zw;\n    u_xlat0.x = in_TEXCOORD2.z;\n   
            u_xlat0.y = 0.0;\n    u_xlat0.xy = u_xlat0.xy + in_TEXCOORD0.xy;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD2.xy
            = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _SingleChannel;\nuniform \tmediump
            float _HdrMultiply;\nuniform lowp sampler2D _MainTex;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nfloat u_xlat1;\nlowp vec4 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec4 u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0.x = (-vs_TEXCOORD1.z) + vs_TEXCOORD1.y;\n    u_xlat3
            = (-u_xlat0.x) + vs_TEXCOORD1.y;\n    u_xlat3 = float(1.0) / u_xlat3;\n   
            u_xlat6 = dot(vs_TEXCOORD2.zw, vs_TEXCOORD2.zw);\n    u_xlat0.x = (-u_xlat0.x)
            + u_xlat6;\n    u_xlat6 = u_xlat6 + (-vs_TEXCOORD1.x);\n    u_xlat0.x
            = u_xlat3 * u_xlat0.x;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat3 = u_xlat0.x * -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat3;\n    u_xlat3 = float(1.0) / vs_TEXCOORD1.z;\n   
            u_xlat3 = u_xlat3 * u_xlat6;\n    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);\n   
            u_xlat6 = u_xlat3 * -2.0 + 3.0;\n    u_xlat3 = u_xlat3 * u_xlat3;\n   
            u_xlat0.x = u_xlat6 * u_xlat3 + (-u_xlat0.x);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD2.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_2;\n   
            u_xlat16_0 = u_xlat0 * vs_COLOR0;\n    u_xlat1 = log2(_HdrMultiply);\n   
            u_xlat1 = u_xlat1 * 0.416666657;\n    u_xlat1 = exp2(u_xlat1);\n    u_xlat1
            = u_xlat1 * 1.05499995 + -0.0549999997;\n    u_xlat1 = max(u_xlat1, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat1);\n    u_xlatb1 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_0.xyz;\n   
            SV_Target0.w = min(u_xlat16_0.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tfloat _RingTopOffset;\nin highp vec4 in_POSITION0;\nin
            mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin highp vec4 in_TEXCOORD2;\nout
            mediump vec4 vs_COLOR0;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.xy = in_TEXCOORD0.yy
            * (-in_TEXCOORD0.zw);\n    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_MatrixV[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_MatrixV[0] * in_POSITION0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_MatrixV[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_MatrixV[3] * in_POSITION0.wwww + u_xlat1;\n   
            u_xlat6 = min(in_TEXCOORD2.x, in_TEXCOORD2.w);\n    u_xlat0.xy = u_xlat0.xy
            * vec2(u_xlat6) + u_xlat1.xy;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4glstate_matrix_projection[1];\n   
            u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[0] * u_xlat0.xxxx +
            u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[2] * u_xlat1.zzzz
            + u_xlat2;\n    gl_Position = hlslcc_mtx4x4glstate_matrix_projection[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0;\n    u_xlat0.x = u_xlat6 / in_TEXCOORD2.w;\n    u_xlat0.x
            = (-u_xlat0.x) + 1.0;\n    vs_TEXCOORD1.x = u_xlat0.x * u_xlat0.x;\n   
            vs_TEXCOORD1.z = in_TEXCOORD2.y / in_TEXCOORD2.w;\n    vs_TEXCOORD1.y
            = (-_RingTopOffset) + 1.0;\n    vs_TEXCOORD1.w = in_TEXCOORD2.z;\n   
            u_xlat0.xy = in_TEXCOORD0.yy * in_TEXCOORD0.zw;\n    u_xlat0.xy = vec2(u_xlat6)
            * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy / in_TEXCOORD2.ww;\n    vs_TEXCOORD2.zw
            = (-u_xlat0.xy) + in_TEXCOORD0.zw;\n    u_xlat0.x = in_TEXCOORD2.z;\n   
            u_xlat0.y = 0.0;\n    u_xlat0.xy = u_xlat0.xy + in_TEXCOORD0.xy;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD2.xy
            = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nfloat u_xlat1;\nmediump vec4 u_xlat16_1;\nbool
            u_xlatb1;\nmediump vec4 u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0.x = (-vs_TEXCOORD1.z) + vs_TEXCOORD1.y;\n   
            u_xlat3 = (-u_xlat0.x) + vs_TEXCOORD1.y;\n    u_xlat3 = float(1.0) /
            u_xlat3;\n    u_xlat6 = dot(vs_TEXCOORD2.zw, vs_TEXCOORD2.zw);\n    u_xlat0.x
            = (-u_xlat0.x) + u_xlat6;\n    u_xlat6 = u_xlat6 + (-vs_TEXCOORD1.x);\n   
            u_xlat0.x = u_xlat3 * u_xlat0.x;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat3 = u_xlat0.x * -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat3;\n    u_xlat3 = float(1.0)
            / vs_TEXCOORD1.z;\n    u_xlat3 = u_xlat3 * u_xlat6;\n    u_xlat3 = clamp(u_xlat3,
            0.0, 1.0);\n    u_xlat6 = u_xlat3 * -2.0 + 3.0;\n    u_xlat3 = u_xlat3
            * u_xlat3;\n    u_xlat0.x = u_xlat6 * u_xlat3 + (-u_xlat0.x);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat16_1.x : u_xlat16_1.w;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_2;\n   
            u_xlat16_0 = u_xlat0 * vs_COLOR0;\n    u_xlat1 = log2(_HdrMultiply);\n   
            u_xlat1 = u_xlat1 * 0.416666657;\n    u_xlat1 = exp2(u_xlat1);\n    u_xlat1
            = u_xlat1 * 1.05499995 + -0.0549999997;\n    u_xlat1 = max(u_xlat1, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat1);\n    u_xlatb1 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_0.xyz;\n   
            SV_Target0.w = min(u_xlat16_0.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _RingTopOffset;\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD2;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0.xy = in_TEXCOORD0.yy * (-in_TEXCOORD0.zw);\n   
            u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_MatrixV[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixV[0] * in_POSITION0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixV[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixV[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat6
            = min(in_TEXCOORD2.x, in_TEXCOORD2.w);\n    u_xlat0.xy = u_xlat0.xy *
            vec2(u_xlat6) + u_xlat1.xy;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4glstate_matrix_projection[1];\n   
            u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[0] * u_xlat0.xxxx +
            u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[2] * u_xlat1.zzzz
            + u_xlat2;\n    gl_Position = hlslcc_mtx4x4glstate_matrix_projection[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0;\n    u_xlat0.x = u_xlat6 / in_TEXCOORD2.w;\n    u_xlat0.x
            = (-u_xlat0.x) + 1.0;\n    vs_TEXCOORD1.x = u_xlat0.x * u_xlat0.x;\n   
            vs_TEXCOORD1.z = in_TEXCOORD2.y / in_TEXCOORD2.w;\n    vs_TEXCOORD1.y
            = (-_RingTopOffset) + 1.0;\n    vs_TEXCOORD1.w = in_TEXCOORD2.z;\n   
            u_xlat0.xy = in_TEXCOORD0.yy * in_TEXCOORD0.zw;\n    u_xlat0.xy = vec2(u_xlat6)
            * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy / in_TEXCOORD2.ww;\n    vs_TEXCOORD2.zw
            = (-u_xlat0.xy) + in_TEXCOORD0.zw;\n    u_xlat0.x = in_TEXCOORD2.z;\n   
            u_xlat0.y = 0.0;\n    u_xlat0.xy = u_xlat0.xy + in_TEXCOORD0.xy;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD2.xy
            = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _SingleChannel;\nuniform \tmediump
            float _HdrMultiply;\nuniform lowp sampler2D _MainTex;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nfloat u_xlat1;\nlowp vec4 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec4 u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0.x = (-vs_TEXCOORD1.z) + vs_TEXCOORD1.y;\n    u_xlat3
            = (-u_xlat0.x) + vs_TEXCOORD1.y;\n    u_xlat3 = float(1.0) / u_xlat3;\n   
            u_xlat6 = dot(vs_TEXCOORD2.zw, vs_TEXCOORD2.zw);\n    u_xlat0.x = (-u_xlat0.x)
            + u_xlat6;\n    u_xlat6 = u_xlat6 + (-vs_TEXCOORD1.x);\n    u_xlat0.x
            = u_xlat3 * u_xlat0.x;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat3 = u_xlat0.x * -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat3;\n    u_xlat3 = float(1.0) / vs_TEXCOORD1.z;\n   
            u_xlat3 = u_xlat3 * u_xlat6;\n    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);\n   
            u_xlat6 = u_xlat3 * -2.0 + 3.0;\n    u_xlat3 = u_xlat3 * u_xlat3;\n   
            u_xlat0.x = u_xlat6 * u_xlat3 + (-u_xlat0.x);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD2.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_2;\n   
            u_xlat16_0 = u_xlat0 * vs_COLOR0;\n    u_xlat1 = log2(_HdrMultiply);\n   
            u_xlat1 = u_xlat1 * 0.416666657;\n    u_xlat1 = exp2(u_xlat1);\n    u_xlat1
            = u_xlat1 * 1.05499995 + -0.0549999997;\n    u_xlat1 = max(u_xlat1, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat1);\n    u_xlatb1 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_0.xyz;\n   
            SV_Target0.w = min(u_xlat16_0.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tfloat _RingTopOffset;\nin highp vec4 in_POSITION0;\nin
            mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin highp vec4 in_TEXCOORD2;\nout
            mediump vec4 vs_COLOR0;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.xy = in_TEXCOORD0.yy
            * (-in_TEXCOORD0.zw);\n    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_MatrixV[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_MatrixV[0] * in_POSITION0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_MatrixV[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_MatrixV[3] * in_POSITION0.wwww + u_xlat1;\n   
            u_xlat6 = min(in_TEXCOORD2.x, in_TEXCOORD2.w);\n    u_xlat0.xy = u_xlat0.xy
            * vec2(u_xlat6) + u_xlat1.xy;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4glstate_matrix_projection[1];\n   
            u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[0] * u_xlat0.xxxx +
            u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[2] * u_xlat1.zzzz
            + u_xlat2;\n    gl_Position = hlslcc_mtx4x4glstate_matrix_projection[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0;\n    u_xlat0.x = u_xlat6 / in_TEXCOORD2.w;\n    u_xlat0.x
            = (-u_xlat0.x) + 1.0;\n    vs_TEXCOORD1.x = u_xlat0.x * u_xlat0.x;\n   
            vs_TEXCOORD1.z = in_TEXCOORD2.y / in_TEXCOORD2.w;\n    vs_TEXCOORD1.y
            = (-_RingTopOffset) + 1.0;\n    vs_TEXCOORD1.w = in_TEXCOORD2.z;\n   
            u_xlat0.xy = in_TEXCOORD0.yy * in_TEXCOORD0.zw;\n    u_xlat0.xy = vec2(u_xlat6)
            * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy / in_TEXCOORD2.ww;\n    vs_TEXCOORD2.zw
            = (-u_xlat0.xy) + in_TEXCOORD0.zw;\n    u_xlat0.x = in_TEXCOORD2.z;\n   
            u_xlat0.y = 0.0;\n    u_xlat0.xy = u_xlat0.xy + in_TEXCOORD0.xy;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD2.xy
            = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nfloat u_xlat1;\nmediump vec4 u_xlat16_1;\nbool
            u_xlatb1;\nmediump vec4 u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0.x = (-vs_TEXCOORD1.z) + vs_TEXCOORD1.y;\n   
            u_xlat3 = (-u_xlat0.x) + vs_TEXCOORD1.y;\n    u_xlat3 = float(1.0) /
            u_xlat3;\n    u_xlat6 = dot(vs_TEXCOORD2.zw, vs_TEXCOORD2.zw);\n    u_xlat0.x
            = (-u_xlat0.x) + u_xlat6;\n    u_xlat6 = u_xlat6 + (-vs_TEXCOORD1.x);\n   
            u_xlat0.x = u_xlat3 * u_xlat0.x;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat3 = u_xlat0.x * -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat3;\n    u_xlat3 = float(1.0)
            / vs_TEXCOORD1.z;\n    u_xlat3 = u_xlat3 * u_xlat6;\n    u_xlat3 = clamp(u_xlat3,
            0.0, 1.0);\n    u_xlat6 = u_xlat3 * -2.0 + 3.0;\n    u_xlat3 = u_xlat3
            * u_xlat3;\n    u_xlat0.x = u_xlat6 * u_xlat3 + (-u_xlat0.x);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat16_1.x : u_xlat16_1.w;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_2;\n   
            u_xlat16_0 = u_xlat0 * vs_COLOR0;\n    u_xlat1 = log2(_HdrMultiply);\n   
            u_xlat1 = u_xlat1 * 0.416666657;\n    u_xlat1 = exp2(u_xlat1);\n    u_xlat1
            = u_xlat1 * 1.05499995 + -0.0549999997;\n    u_xlat1 = max(u_xlat1, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat1);\n    u_xlatb1 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_0.xyz;\n   
            SV_Target0.w = min(u_xlat16_0.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _RingTopOffset;\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD2;\nattribute highp vec3 in_NORMAL0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec3 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0.xyz
            = in_TEXCOORD0.yyy * in_NORMAL0.xyz;\n    u_xlat9 = min(in_TEXCOORD2.x,
            in_TEXCOORD2.w);\n    u_xlat0.xyz = (-u_xlat0.xyz) * vec3(u_xlat9) +
            in_POSITION0.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * u_xlat0.zzzz + u_xlat1;\n   
            u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0;\n    u_xlat0.x = u_xlat9 / in_TEXCOORD2.w;\n    u_xlat0.x
            = (-u_xlat0.x) + 1.0;\n    vs_TEXCOORD1.x = u_xlat0.x * u_xlat0.x;\n   
            vs_TEXCOORD1.z = in_TEXCOORD2.y / in_TEXCOORD2.w;\n    vs_TEXCOORD1.y
            = (-_RingTopOffset) + 1.0;\n    vs_TEXCOORD1.w = in_TEXCOORD2.z;\n   
            u_xlat0.xy = in_TEXCOORD0.yy * in_TEXCOORD0.zw;\n    u_xlat0.xy = vec2(u_xlat9)
            * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy / in_TEXCOORD2.ww;\n    vs_TEXCOORD2.zw
            = (-u_xlat0.xy) + in_TEXCOORD0.zw;\n    u_xlat0.x = in_TEXCOORD2.z;\n   
            u_xlat0.y = 0.0;\n    u_xlat0.xy = u_xlat0.xy + in_TEXCOORD0.xy;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD2.xy
            = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _SingleChannel;\nuniform \tmediump
            float _HdrMultiply;\nuniform lowp sampler2D _MainTex;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nfloat u_xlat1;\nlowp vec4 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec4 u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0.x = (-vs_TEXCOORD1.z) + vs_TEXCOORD1.y;\n    u_xlat3
            = (-u_xlat0.x) + vs_TEXCOORD1.y;\n    u_xlat3 = float(1.0) / u_xlat3;\n   
            u_xlat6 = dot(vs_TEXCOORD2.zw, vs_TEXCOORD2.zw);\n    u_xlat0.x = (-u_xlat0.x)
            + u_xlat6;\n    u_xlat6 = u_xlat6 + (-vs_TEXCOORD1.x);\n    u_xlat0.x
            = u_xlat3 * u_xlat0.x;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat3 = u_xlat0.x * -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat3;\n    u_xlat3 = float(1.0) / vs_TEXCOORD1.z;\n   
            u_xlat3 = u_xlat3 * u_xlat6;\n    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);\n   
            u_xlat6 = u_xlat3 * -2.0 + 3.0;\n    u_xlat3 = u_xlat3 * u_xlat3;\n   
            u_xlat0.x = u_xlat6 * u_xlat3 + (-u_xlat0.x);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD2.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_2;\n   
            u_xlat16_0 = u_xlat0 * vs_COLOR0;\n    u_xlat1 = log2(_HdrMultiply);\n   
            u_xlat1 = u_xlat1 * 0.416666657;\n    u_xlat1 = exp2(u_xlat1);\n    u_xlat1
            = u_xlat1 * 1.05499995 + -0.0549999997;\n    u_xlat1 = max(u_xlat1, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat1);\n    u_xlatb1 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_0.xyz;\n   
            SV_Target0.w = min(u_xlat16_0.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_WORLD_SPACE_RING
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tfloat _RingTopOffset;\nin highp vec4 in_POSITION0;\nin
            mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin highp vec4 in_TEXCOORD2;\nin
            highp vec3 in_NORMAL0;\nout mediump vec4 vs_COLOR0;\nout highp vec4 vs_TEXCOORD0;\nout
            highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec3 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0.xyz
            = in_TEXCOORD0.yyy * in_NORMAL0.xyz;\n    u_xlat9 = min(in_TEXCOORD2.x,
            in_TEXCOORD2.w);\n    u_xlat0.xyz = (-u_xlat0.xyz) * vec3(u_xlat9) +
            in_POSITION0.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * u_xlat0.zzzz + u_xlat1;\n   
            u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0;\n    u_xlat0.x = u_xlat9 / in_TEXCOORD2.w;\n    u_xlat0.x
            = (-u_xlat0.x) + 1.0;\n    vs_TEXCOORD1.x = u_xlat0.x * u_xlat0.x;\n   
            vs_TEXCOORD1.z = in_TEXCOORD2.y / in_TEXCOORD2.w;\n    vs_TEXCOORD1.y
            = (-_RingTopOffset) + 1.0;\n    vs_TEXCOORD1.w = in_TEXCOORD2.z;\n   
            u_xlat0.xy = in_TEXCOORD0.yy * in_TEXCOORD0.zw;\n    u_xlat0.xy = vec2(u_xlat9)
            * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy / in_TEXCOORD2.ww;\n    vs_TEXCOORD2.zw
            = (-u_xlat0.xy) + in_TEXCOORD0.zw;\n    u_xlat0.x = in_TEXCOORD2.z;\n   
            u_xlat0.y = 0.0;\n    u_xlat0.xy = u_xlat0.xy + in_TEXCOORD0.xy;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD2.xy
            = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nfloat u_xlat1;\nmediump vec4 u_xlat16_1;\nbool
            u_xlatb1;\nmediump vec4 u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0.x = (-vs_TEXCOORD1.z) + vs_TEXCOORD1.y;\n   
            u_xlat3 = (-u_xlat0.x) + vs_TEXCOORD1.y;\n    u_xlat3 = float(1.0) /
            u_xlat3;\n    u_xlat6 = dot(vs_TEXCOORD2.zw, vs_TEXCOORD2.zw);\n    u_xlat0.x
            = (-u_xlat0.x) + u_xlat6;\n    u_xlat6 = u_xlat6 + (-vs_TEXCOORD1.x);\n   
            u_xlat0.x = u_xlat3 * u_xlat0.x;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat3 = u_xlat0.x * -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat3;\n    u_xlat3 = float(1.0)
            / vs_TEXCOORD1.z;\n    u_xlat3 = u_xlat3 * u_xlat6;\n    u_xlat3 = clamp(u_xlat3,
            0.0, 1.0);\n    u_xlat6 = u_xlat3 * -2.0 + 3.0;\n    u_xlat3 = u_xlat3
            * u_xlat3;\n    u_xlat0.x = u_xlat6 * u_xlat3 + (-u_xlat0.x);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat16_1.x : u_xlat16_1.w;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_2;\n   
            u_xlat16_0 = u_xlat0 * vs_COLOR0;\n    u_xlat1 = log2(_HdrMultiply);\n   
            u_xlat1 = u_xlat1 * 0.416666657;\n    u_xlat1 = exp2(u_xlat1);\n    u_xlat1
            = u_xlat1 * 1.05499995 + -0.0549999997;\n    u_xlat1 = max(u_xlat1, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat1);\n    u_xlatb1 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_0.xyz;\n   
            SV_Target0.w = min(u_xlat16_0.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_WORLD_SPACE_RING
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _RingTopOffset;\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD2;\nattribute highp vec3 in_NORMAL0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec3 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0.xyz
            = in_TEXCOORD0.yyy * in_NORMAL0.xyz;\n    u_xlat9 = min(in_TEXCOORD2.x,
            in_TEXCOORD2.w);\n    u_xlat0.xyz = (-u_xlat0.xyz) * vec3(u_xlat9) +
            in_POSITION0.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * u_xlat0.zzzz + u_xlat1;\n   
            u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0;\n    u_xlat0.x = u_xlat9 / in_TEXCOORD2.w;\n    u_xlat0.x
            = (-u_xlat0.x) + 1.0;\n    vs_TEXCOORD1.x = u_xlat0.x * u_xlat0.x;\n   
            vs_TEXCOORD1.z = in_TEXCOORD2.y / in_TEXCOORD2.w;\n    vs_TEXCOORD1.y
            = (-_RingTopOffset) + 1.0;\n    vs_TEXCOORD1.w = in_TEXCOORD2.z;\n   
            u_xlat0.xy = in_TEXCOORD0.yy * in_TEXCOORD0.zw;\n    u_xlat0.xy = vec2(u_xlat9)
            * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy / in_TEXCOORD2.ww;\n    vs_TEXCOORD2.zw
            = (-u_xlat0.xy) + in_TEXCOORD0.zw;\n    u_xlat0.x = in_TEXCOORD2.z;\n   
            u_xlat0.y = 0.0;\n    u_xlat0.xy = u_xlat0.xy + in_TEXCOORD0.xy;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD2.xy
            = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _SingleChannel;\nuniform \tmediump
            float _HdrMultiply;\nuniform lowp sampler2D _MainTex;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nfloat u_xlat1;\nlowp vec4 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec4 u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0.x = (-vs_TEXCOORD1.z) + vs_TEXCOORD1.y;\n    u_xlat3
            = (-u_xlat0.x) + vs_TEXCOORD1.y;\n    u_xlat3 = float(1.0) / u_xlat3;\n   
            u_xlat6 = dot(vs_TEXCOORD2.zw, vs_TEXCOORD2.zw);\n    u_xlat0.x = (-u_xlat0.x)
            + u_xlat6;\n    u_xlat6 = u_xlat6 + (-vs_TEXCOORD1.x);\n    u_xlat0.x
            = u_xlat3 * u_xlat0.x;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat3 = u_xlat0.x * -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat3;\n    u_xlat3 = float(1.0) / vs_TEXCOORD1.z;\n   
            u_xlat3 = u_xlat3 * u_xlat6;\n    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);\n   
            u_xlat6 = u_xlat3 * -2.0 + 3.0;\n    u_xlat3 = u_xlat3 * u_xlat3;\n   
            u_xlat0.x = u_xlat6 * u_xlat3 + (-u_xlat0.x);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD2.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_2;\n   
            u_xlat16_0 = u_xlat0 * vs_COLOR0;\n    u_xlat1 = log2(_HdrMultiply);\n   
            u_xlat1 = u_xlat1 * 0.416666657;\n    u_xlat1 = exp2(u_xlat1);\n    u_xlat1
            = u_xlat1 * 1.05499995 + -0.0549999997;\n    u_xlat1 = max(u_xlat1, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat1);\n    u_xlatb1 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_0.xyz;\n   
            SV_Target0.w = min(u_xlat16_0.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _FADING_ON
          - _CFXR_WORLD_SPACE_RING
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tfloat _RingTopOffset;\nin highp vec4 in_POSITION0;\nin
            mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin highp vec4 in_TEXCOORD2;\nin
            highp vec3 in_NORMAL0;\nout mediump vec4 vs_COLOR0;\nout highp vec4 vs_TEXCOORD0;\nout
            highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec3 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0.xyz
            = in_TEXCOORD0.yyy * in_NORMAL0.xyz;\n    u_xlat9 = min(in_TEXCOORD2.x,
            in_TEXCOORD2.w);\n    u_xlat0.xyz = (-u_xlat0.xyz) * vec3(u_xlat9) +
            in_POSITION0.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * u_xlat0.zzzz + u_xlat1;\n   
            u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0;\n    u_xlat0.x = u_xlat9 / in_TEXCOORD2.w;\n    u_xlat0.x
            = (-u_xlat0.x) + 1.0;\n    vs_TEXCOORD1.x = u_xlat0.x * u_xlat0.x;\n   
            vs_TEXCOORD1.z = in_TEXCOORD2.y / in_TEXCOORD2.w;\n    vs_TEXCOORD1.y
            = (-_RingTopOffset) + 1.0;\n    vs_TEXCOORD1.w = in_TEXCOORD2.z;\n   
            u_xlat0.xy = in_TEXCOORD0.yy * in_TEXCOORD0.zw;\n    u_xlat0.xy = vec2(u_xlat9)
            * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy / in_TEXCOORD2.ww;\n    vs_TEXCOORD2.zw
            = (-u_xlat0.xy) + in_TEXCOORD0.zw;\n    u_xlat0.x = in_TEXCOORD2.z;\n   
            u_xlat0.y = 0.0;\n    u_xlat0.xy = u_xlat0.xy + in_TEXCOORD0.xy;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD2.xy
            = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nfloat u_xlat1;\nmediump vec4 u_xlat16_1;\nbool
            u_xlatb1;\nmediump vec4 u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0.x = (-vs_TEXCOORD1.z) + vs_TEXCOORD1.y;\n   
            u_xlat3 = (-u_xlat0.x) + vs_TEXCOORD1.y;\n    u_xlat3 = float(1.0) /
            u_xlat3;\n    u_xlat6 = dot(vs_TEXCOORD2.zw, vs_TEXCOORD2.zw);\n    u_xlat0.x
            = (-u_xlat0.x) + u_xlat6;\n    u_xlat6 = u_xlat6 + (-vs_TEXCOORD1.x);\n   
            u_xlat0.x = u_xlat3 * u_xlat0.x;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat3 = u_xlat0.x * -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat3;\n    u_xlat3 = float(1.0)
            / vs_TEXCOORD1.z;\n    u_xlat3 = u_xlat3 * u_xlat6;\n    u_xlat3 = clamp(u_xlat3,
            0.0, 1.0);\n    u_xlat6 = u_xlat3 * -2.0 + 3.0;\n    u_xlat3 = u_xlat3
            * u_xlat3;\n    u_xlat0.x = u_xlat6 * u_xlat3 + (-u_xlat0.x);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat16_1.x : u_xlat16_1.w;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_2;\n   
            u_xlat16_0 = u_xlat0 * vs_COLOR0;\n    u_xlat1 = log2(_HdrMultiply);\n   
            u_xlat1 = u_xlat1 * 0.416666657;\n    u_xlat1 = exp2(u_xlat1);\n    u_xlat1
            = u_xlat1 * 1.05499995 + -0.0549999997;\n    u_xlat1 = max(u_xlat1, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat1);\n    u_xlatb1 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_0.xyz;\n   
            SV_Target0.w = min(u_xlat16_0.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _FADING_ON
          - _CFXR_WORLD_SPACE_RING
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _CFXR_ADDITIVE
        - _CFXR_DISSOLVE
        - _CFXR_RADIAL_UV
        - _CFXR_WORLD_SPACE_RING
        - _FADING_ON
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_RADIAL_UV
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_WORLD_SPACE_RING
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_DISSOLVE
          hasDiscard: 1
        - Keywords:
          - _
          - _FADING_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _FADING_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _FADING_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_WORLD_SPACE_RING
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_WORLD_SPACE_RING
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _FADING_ON
          - _CFXR_WORLD_SPACE_RING
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _FADING_ON
          - _CFXR_WORLD_SPACE_RING
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
        ShaderVariants: []
        DefinedKeywords:
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _CFXR_ADDITIVE
        - _CFXR_DISSOLVE
        - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
        - _CFXR_DITHERED_SHADOWS_ON
        - _CFXR_RADIAL_UV
        - _CFXR_WORLD_SPACE_RING
        - _
        KeywordGroups:
        - Keywords:
          - _
          - _CFXR_RADIAL_UV
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_WORLD_SPACE_RING
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_DISSOLVE
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_DITHERED_SHADOWS_ON
          - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
          hasDiscard: 1
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    ShaderPath: Assets/JMO Assets/Cartoon FX Remaster/CFXR Assets/Shaders/CFXR Particle
      Procedural Ring.cfxrshader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - _ALPHABLEND_ON
    - _ALPHAMODULATE_ON
    - _ALPHAPREMULTIPLY_ON
    - _ALPHATEST_ON
    - _CFXR_ADDITIVE
    - _CFXR_DISSOLVE
    - _CFXR_RADIAL_UV
    - _CFXR_WORLD_SPACE_RING
    - _FADING_ON
    - SHADOWS_DEPTH
    - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
    - _CFXR_DITHERED_SHADOWS_ON
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    - _
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _FADING_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _FADING_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_WORLD_SPACE_RING
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_WORLD_SPACE_RING
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _FADING_ON
      - _CFXR_WORLD_SPACE_RING
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _FADING_ON
      - _CFXR_WORLD_SPACE_RING
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _SingleChannel;\nuniform \tmediump
            float _HdrMultiply;\nuniform lowp sampler2D _MainTex;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\n#define SV_Target0
            gl_FragData[0]\nfloat u_xlat0;\nbool u_xlatb0;\nmediump vec4 u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n   
            u_xlat0 = log2(_HdrMultiply);\n    u_xlat0 = u_xlat0 * 0.416666657;\n   
            u_xlat0 = exp2(u_xlat0);\n    u_xlat0 = u_xlat0 * 1.05499995 + -0.0549999997;\n   
            u_xlat0 = max(u_xlat0, 0.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.xyz = vec3(u_xlat0) * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            SV_Target0.w = min(u_xlat16_1.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nfloat u_xlat0;\nbool u_xlatb0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n   
            u_xlat0 = log2(_HdrMultiply);\n    u_xlat0 = u_xlat0 * 0.416666657;\n   
            u_xlat0 = exp2(u_xlat0);\n    u_xlat0 = u_xlat0 * 1.05499995 + -0.0549999997;\n   
            u_xlat0 = max(u_xlat0, 0.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat16_1.x : u_xlat16_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.xyz = vec3(u_xlat0) * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            SV_Target0.w = min(u_xlat16_1.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _SingleChannel;\nuniform \tmediump
            float _HdrMultiply;\nuniform lowp sampler2D _MainTex;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\n#define SV_Target0
            gl_FragData[0]\nfloat u_xlat0;\nbool u_xlatb0;\nmediump vec4 u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n   
            u_xlat0 = log2(_HdrMultiply);\n    u_xlat0 = u_xlat0 * 0.416666657;\n   
            u_xlat0 = exp2(u_xlat0);\n    u_xlat0 = u_xlat0 * 1.05499995 + -0.0549999997;\n   
            u_xlat0 = max(u_xlat0, 0.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.xyz = vec3(u_xlat0) * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            SV_Target0.w = min(u_xlat16_1.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nfloat u_xlat0;\nbool u_xlatb0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n   
            u_xlat0 = log2(_HdrMultiply);\n    u_xlat0 = u_xlat0 * 0.416666657;\n   
            u_xlat0 = exp2(u_xlat0);\n    u_xlat0 = u_xlat0 * 1.05499995 + -0.0549999997;\n   
            u_xlat0 = max(u_xlat0, 0.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat16_1.x : u_xlat16_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.xyz = vec3(u_xlat0) * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            SV_Target0.w = min(u_xlat16_1.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Time;\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _UseDissolveOffsetUV;\nuniform \tmediump float _InvertDissolveTex;\nuniform
            \tmediump float _DoubleDissolve;\nuniform \tmediump vec2 _DissolveScroll;\nuniform
            \tmediump float _DissolveSmooth;\nuniform \tmediump float _HdrMultiply;\nuniform
            \tmediump vec4 _DissolveTex_ST;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _DissolveTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nbool
            u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump float u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec4 u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat
            u_xlat5;\nmediump float u_xlat16_6;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump
            float u_xlat16_11;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy
            = _Time.yy * vec2(_DissolveScroll.x, _DissolveScroll.y);\n    u_xlat0.xy
            = fract(u_xlat0.xy);\n    u_xlat10.xy = vs_TEXCOORD0.xy * _DissolveTex_ST.xy
            + _DissolveTex_ST.zw;\n    u_xlat0.xy = u_xlat0.xy + u_xlat10.xy;\n   
            u_xlatb10.xy = lessThan(vec4(0.0, 0.0, 0.0, 0.0), vec4(_SingleChannel,
            _UseDissolveOffsetUV, _SingleChannel, _UseDissolveOffsetUV)).xy;\n   
            u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy : vs_TEXCOORD0.xy;\n    u_xlat10_0
            = texture2D(_DissolveTex, u_xlat0.xy).x;\n    u_xlat16_1.x = u_xlat10_0
            * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x * vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n   
            u_xlat16_1.x = (u_xlatb10.y) ? u_xlat5 : u_xlat10_0;\n    u_xlat16_6
            = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0 = 0.0>=_InvertDissolveTex;\n   
            u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6 : u_xlat16_1.x;\n    u_xlat16_6
            = u_xlat16_1.x + _DissolveSmooth;\n    u_xlat16_1.x = u_xlat16_1.x +
            (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x) + u_xlat16_6;\n   
            u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11 = _DissolveSmooth
            * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11 + (-_DissolveSmooth);\n   
            u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_16 = u_xlat16_6
            * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n   
            u_xlat16_2 = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2;\n    u_xlat10_2
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = (u_xlatb10.x)
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_2.xyz;\n    u_xlat16_3.w = (u_xlatb10.x)
            ? u_xlat10_2.x : u_xlat10_2.w;\n    u_xlat16_0 = u_xlat16_3 * vs_COLOR0;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4 = 0.0<_DoubleDissolve;\n   
            u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y : 0.0;\n    u_xlat16_11 =
            u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4 = 0.0<u_xlat16_3.x;\n   
            u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_1.x = u_xlat16_6
            * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x + u_xlat16_16;\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (u_xlatb4)
            ? u_xlat16_1.x : u_xlat16_16;\n    SV_Target0.w = min(u_xlat16_1.x, 1.0);\n   
            u_xlat4 = log2(_HdrMultiply);\n    u_xlat4 = u_xlat4 * 0.416666657;\n   
            u_xlat4 = exp2(u_xlat4);\n    u_xlat4 = u_xlat4 * 1.05499995 + -0.0549999997;\n   
            u_xlat4 = max(u_xlat4, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(u_xlat4);\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Time;\nuniform \tmediump float
            _SingleChannel;\nuniform \tmediump float _UseDissolveOffsetUV;\nuniform
            \tmediump float _InvertDissolveTex;\nuniform \tmediump float _DoubleDissolve;\nuniform
            \tmediump vec2 _DissolveScroll;\nuniform \tmediump float _DissolveSmooth;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump vec4 _DissolveTex_ST;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _DissolveTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec2
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump
            vec4 u_xlat16_2;\nmediump vec4 u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat
            u_xlat5;\nmediump float u_xlat16_6;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump
            float u_xlat16_11;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy
            = _Time.yy * vec2(_DissolveScroll.x, _DissolveScroll.y);\n    u_xlat0.xy
            = fract(u_xlat0.xy);\n    u_xlat10.xy = vs_TEXCOORD0.xy * _DissolveTex_ST.xy
            + _DissolveTex_ST.zw;\n    u_xlat0.xy = u_xlat0.xy + u_xlat10.xy;\n   
            u_xlatb10.xy = lessThan(vec4(0.0, 0.0, 0.0, 0.0), vec4(_SingleChannel,
            _UseDissolveOffsetUV, _SingleChannel, _UseDissolveOffsetUV)).xy;\n   
            u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy : vs_TEXCOORD0.xy;\n    u_xlat16_0.x
            = texture(_DissolveTex, u_xlat0.xy).x;\n    u_xlat16_1.x = u_xlat16_0.x
            * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x * vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n   
            u_xlat16_1.x = (u_xlatb10.y) ? u_xlat5 : u_xlat16_0.x;\n    u_xlat16_6
            = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0 = 0.0>=_InvertDissolveTex;\n   
            u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6 : u_xlat16_1.x;\n    u_xlat16_6
            = u_xlat16_1.x + _DissolveSmooth;\n    u_xlat16_1.x = u_xlat16_1.x +
            (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x) + u_xlat16_6;\n   
            u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11 = _DissolveSmooth
            * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11 + (-_DissolveSmooth);\n   
            u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_16 = u_xlat16_6
            * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n   
            u_xlat16_2.x = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2.x;\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = (u_xlatb10.x)
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_2.xyz;\n    u_xlat16_3.w = (u_xlatb10.x)
            ? u_xlat16_2.x : u_xlat16_2.w;\n    u_xlat16_0 = u_xlat16_3 * vs_COLOR0;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4 = 0.0<_DoubleDissolve;\n   
            u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y : 0.0;\n    u_xlat16_11 =
            u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4 = 0.0<u_xlat16_3.x;\n   
            u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_1.x = u_xlat16_6
            * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x + u_xlat16_16;\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (u_xlatb4)
            ? u_xlat16_1.x : u_xlat16_16;\n    SV_Target0.w = min(u_xlat16_1.x, 1.0);\n   
            u_xlat4 = log2(_HdrMultiply);\n    u_xlat4 = u_xlat4 * 0.416666657;\n   
            u_xlat4 = exp2(u_xlat4);\n    u_xlat4 = u_xlat4 * 1.05499995 + -0.0549999997;\n   
            u_xlat4 = max(u_xlat4, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(u_xlat4);\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _SingleChannel;\nuniform \tmediump
            float _HdrMultiply;\nuniform lowp sampler2D _MainTex;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\n#define SV_Target0
            gl_FragData[0]\nfloat u_xlat0;\nbool u_xlatb0;\nmediump vec4 u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n   
            u_xlat0 = log2(_HdrMultiply);\n    u_xlat0 = u_xlat0 * 0.416666657;\n   
            u_xlat0 = exp2(u_xlat0);\n    u_xlat0 = u_xlat0 * 1.05499995 + -0.0549999997;\n   
            u_xlat0 = max(u_xlat0, 0.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.xyz = vec3(u_xlat0) * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            SV_Target0.w = min(u_xlat16_1.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _ALPHABLEND_ON
          - _FADING_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nfloat u_xlat0;\nbool u_xlatb0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n   
            u_xlat0 = log2(_HdrMultiply);\n    u_xlat0 = u_xlat0 * 0.416666657;\n   
            u_xlat0 = exp2(u_xlat0);\n    u_xlat0 = u_xlat0 * 1.05499995 + -0.0549999997;\n   
            u_xlat0 = max(u_xlat0, 0.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat16_1.x : u_xlat16_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.xyz = vec3(u_xlat0) * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            SV_Target0.w = min(u_xlat16_1.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _ALPHABLEND_ON
          - _FADING_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Time;\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _UseDissolveOffsetUV;\nuniform \tmediump float _InvertDissolveTex;\nuniform
            \tmediump float _DoubleDissolve;\nuniform \tmediump vec2 _DissolveScroll;\nuniform
            \tmediump float _DissolveSmooth;\nuniform \tmediump float _HdrMultiply;\nuniform
            \tmediump vec4 _DissolveTex_ST;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _DissolveTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nbool
            u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump float u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec4 u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat
            u_xlat5;\nmediump float u_xlat16_6;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump
            float u_xlat16_11;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy
            = _Time.yy * vec2(_DissolveScroll.x, _DissolveScroll.y);\n    u_xlat0.xy
            = fract(u_xlat0.xy);\n    u_xlat10.xy = vs_TEXCOORD0.xy * _DissolveTex_ST.xy
            + _DissolveTex_ST.zw;\n    u_xlat0.xy = u_xlat0.xy + u_xlat10.xy;\n   
            u_xlatb10.xy = lessThan(vec4(0.0, 0.0, 0.0, 0.0), vec4(_SingleChannel,
            _UseDissolveOffsetUV, _SingleChannel, _UseDissolveOffsetUV)).xy;\n   
            u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy : vs_TEXCOORD0.xy;\n    u_xlat10_0
            = texture2D(_DissolveTex, u_xlat0.xy).x;\n    u_xlat16_1.x = u_xlat10_0
            * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x * vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n   
            u_xlat16_1.x = (u_xlatb10.y) ? u_xlat5 : u_xlat10_0;\n    u_xlat16_6
            = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0 = 0.0>=_InvertDissolveTex;\n   
            u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6 : u_xlat16_1.x;\n    u_xlat16_6
            = u_xlat16_1.x + _DissolveSmooth;\n    u_xlat16_1.x = u_xlat16_1.x +
            (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x) + u_xlat16_6;\n   
            u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11 = _DissolveSmooth
            * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11 + (-_DissolveSmooth);\n   
            u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_16 = u_xlat16_6
            * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n   
            u_xlat16_2 = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2;\n    u_xlat10_2
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = (u_xlatb10.x)
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_2.xyz;\n    u_xlat16_3.w = (u_xlatb10.x)
            ? u_xlat10_2.x : u_xlat10_2.w;\n    u_xlat16_0 = u_xlat16_3 * vs_COLOR0;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4 = 0.0<_DoubleDissolve;\n   
            u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y : 0.0;\n    u_xlat16_11 =
            u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4 = 0.0<u_xlat16_3.x;\n   
            u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_1.x = u_xlat16_6
            * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x + u_xlat16_16;\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (u_xlatb4)
            ? u_xlat16_1.x : u_xlat16_16;\n    SV_Target0.w = min(u_xlat16_1.x, 1.0);\n   
            u_xlat4 = log2(_HdrMultiply);\n    u_xlat4 = u_xlat4 * 0.416666657;\n   
            u_xlat4 = exp2(u_xlat4);\n    u_xlat4 = u_xlat4 * 1.05499995 + -0.0549999997;\n   
            u_xlat4 = max(u_xlat4, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(u_xlat4);\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _ALPHABLEND_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Time;\nuniform \tmediump float
            _SingleChannel;\nuniform \tmediump float _UseDissolveOffsetUV;\nuniform
            \tmediump float _InvertDissolveTex;\nuniform \tmediump float _DoubleDissolve;\nuniform
            \tmediump vec2 _DissolveScroll;\nuniform \tmediump float _DissolveSmooth;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump vec4 _DissolveTex_ST;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _DissolveTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec2
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump
            vec4 u_xlat16_2;\nmediump vec4 u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat
            u_xlat5;\nmediump float u_xlat16_6;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump
            float u_xlat16_11;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy
            = _Time.yy * vec2(_DissolveScroll.x, _DissolveScroll.y);\n    u_xlat0.xy
            = fract(u_xlat0.xy);\n    u_xlat10.xy = vs_TEXCOORD0.xy * _DissolveTex_ST.xy
            + _DissolveTex_ST.zw;\n    u_xlat0.xy = u_xlat0.xy + u_xlat10.xy;\n   
            u_xlatb10.xy = lessThan(vec4(0.0, 0.0, 0.0, 0.0), vec4(_SingleChannel,
            _UseDissolveOffsetUV, _SingleChannel, _UseDissolveOffsetUV)).xy;\n   
            u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy : vs_TEXCOORD0.xy;\n    u_xlat16_0.x
            = texture(_DissolveTex, u_xlat0.xy).x;\n    u_xlat16_1.x = u_xlat16_0.x
            * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x * vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n   
            u_xlat16_1.x = (u_xlatb10.y) ? u_xlat5 : u_xlat16_0.x;\n    u_xlat16_6
            = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0 = 0.0>=_InvertDissolveTex;\n   
            u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6 : u_xlat16_1.x;\n    u_xlat16_6
            = u_xlat16_1.x + _DissolveSmooth;\n    u_xlat16_1.x = u_xlat16_1.x +
            (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x) + u_xlat16_6;\n   
            u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11 = _DissolveSmooth
            * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11 + (-_DissolveSmooth);\n   
            u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_16 = u_xlat16_6
            * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n   
            u_xlat16_2.x = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2.x;\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = (u_xlatb10.x)
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_2.xyz;\n    u_xlat16_3.w = (u_xlatb10.x)
            ? u_xlat16_2.x : u_xlat16_2.w;\n    u_xlat16_0 = u_xlat16_3 * vs_COLOR0;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4 = 0.0<_DoubleDissolve;\n   
            u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y : 0.0;\n    u_xlat16_11 =
            u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4 = 0.0<u_xlat16_3.x;\n   
            u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_1.x = u_xlat16_6
            * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x + u_xlat16_16;\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (u_xlatb4)
            ? u_xlat16_1.x : u_xlat16_16;\n    SV_Target0.w = min(u_xlat16_1.x, 1.0);\n   
            u_xlat4 = log2(_HdrMultiply);\n    u_xlat4 = u_xlat4 * 0.416666657;\n   
            u_xlat4 = exp2(u_xlat4);\n    u_xlat4 = u_xlat4 * 1.05499995 + -0.0549999997;\n   
            u_xlat4 = max(u_xlat4, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(u_xlat4);\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _ALPHABLEND_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _SingleChannel;\nuniform \tmediump
            float _HdrMultiply;\nuniform \tmediump float _Cutoff;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nfloat
            u_xlat1;\nbool u_xlatb1;\nmediump vec4 u_xlat16_2;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlatb1 = 0.0<_SingleChannel;\n   
            u_xlat16_2.w = (u_xlatb1) ? u_xlat10_0.x : u_xlat10_0.w;\n    u_xlat16_2.xyz
            = (bool(u_xlatb1)) ? vec3(1.0, 1.0, 1.0) : u_xlat10_0.xyz;\n    u_xlat16_0
            = u_xlat16_2 * vs_COLOR0;\n    u_xlat16_2.x = u_xlat16_2.w * vs_COLOR0.w
            + (-_Cutoff);\n    u_xlatb1 = u_xlat16_2.x<0.0;\n    if(u_xlatb1){discard;}\n   
            u_xlat1 = log2(_HdrMultiply);\n    u_xlat1 = u_xlat1 * 0.416666657;\n   
            u_xlat1 = exp2(u_xlat1);\n    u_xlat1 = u_xlat1 * 1.05499995 + -0.0549999997;\n   
            u_xlat1 = max(u_xlat1, 0.0);\n    u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat1);\n   
            u_xlatb1 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb1)) ?
            u_xlat16_2.xyz : u_xlat16_0.xyz;\n    SV_Target0.w = min(u_xlat16_0.w,
            1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _ALPHATEST_ON
          - _CFXR_ADDITIVE
          - _FADING_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump float _Cutoff;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec4 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nfloat u_xlat1;\nbool u_xlatb1;\nmediump vec4 u_xlat16_2;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb1 = 0.0<_SingleChannel;\n    u_xlat16_2.w = (u_xlatb1) ? u_xlat16_0.x
            : u_xlat16_0.w;\n    u_xlat16_2.xyz = (bool(u_xlatb1)) ? vec3(1.0, 1.0,
            1.0) : u_xlat16_0.xyz;\n    u_xlat16_0 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.x = u_xlat16_2.w * vs_COLOR0.w + (-_Cutoff);\n    u_xlatb1
            = u_xlat16_2.x<0.0;\n    if(u_xlatb1){discard;}\n    u_xlat1 = log2(_HdrMultiply);\n   
            u_xlat1 = u_xlat1 * 0.416666657;\n    u_xlat1 = exp2(u_xlat1);\n    u_xlat1
            = u_xlat1 * 1.05499995 + -0.0549999997;\n    u_xlat1 = max(u_xlat1, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat1);\n    u_xlatb1 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_0.xyz;\n   
            SV_Target0.w = min(u_xlat16_0.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _ALPHATEST_ON
          - _CFXR_ADDITIVE
          - _FADING_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Time;\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _UseDissolveOffsetUV;\nuniform \tmediump float _InvertDissolveTex;\nuniform
            \tmediump float _DoubleDissolve;\nuniform \tmediump vec2 _DissolveScroll;\nuniform
            \tmediump float _DissolveSmooth;\nuniform \tmediump float _HdrMultiply;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump vec4 _DissolveTex_ST;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _DissolveTex;\nvarying
            mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nbool u_xlatb0;\nmediump vec3
            u_xlat16_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump
            vec4 u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat u_xlat5;\nmediump
            float u_xlat16_6;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump float u_xlat16_11;\nmediump
            float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy = _Time.yy * vec2(_DissolveScroll.x,
            _DissolveScroll.y);\n    u_xlat0.xy = fract(u_xlat0.xy);\n    u_xlat10.xy
            = vs_TEXCOORD0.xy * _DissolveTex_ST.xy + _DissolveTex_ST.zw;\n    u_xlat0.xy
            = u_xlat0.xy + u_xlat10.xy;\n    u_xlatb10.xy = lessThan(vec4(0.0, 0.0,
            0.0, 0.0), vec4(_SingleChannel, _UseDissolveOffsetUV, _SingleChannel,
            _UseDissolveOffsetUV)).xy;\n    u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy
            : vs_TEXCOORD0.xy;\n    u_xlat10_0 = texture2D(_DissolveTex, u_xlat0.xy).x;\n   
            u_xlat16_1.x = u_xlat10_0 * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x *
            vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n    u_xlat16_1.x = (u_xlatb10.y) ?
            u_xlat5 : u_xlat10_0;\n    u_xlat16_6 = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0
            = 0.0>=_InvertDissolveTex;\n    u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6
            : u_xlat16_1.x;\n    u_xlat16_6 = u_xlat16_1.x + _DissolveSmooth;\n   
            u_xlat16_1.x = u_xlat16_1.x + (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x)
            + u_xlat16_6;\n    u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11
            = _DissolveSmooth * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11
            + (-_DissolveSmooth);\n    u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n   
            u_xlat16_16 = u_xlat16_6 * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16,
            0.0, 1.0);\n    u_xlat16_2 = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2;\n   
            u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz
            = (u_xlatb10.x) ? vec3(1.0, 1.0, 1.0) : u_xlat10_2.xyz;\n    u_xlat16_3.w
            = (u_xlatb10.x) ? u_xlat10_2.x : u_xlat10_2.w;\n    u_xlat16_0 = u_xlat16_3
            * vs_COLOR0;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4
            = 0.0<_DoubleDissolve;\n    u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y
            : 0.0;\n    u_xlat16_11 = u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4
            = 0.0<u_xlat16_3.x;\n    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n   
            u_xlat16_1.x = u_xlat16_6 * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x,
            0.0, 1.0);\n    u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x
            = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x
            + u_xlat16_16;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_1.x = (u_xlatb4) ? u_xlat16_1.x : u_xlat16_16;\n    u_xlat16_6
            = u_xlat16_1.x + (-_Cutoff);\n    SV_Target0.w = min(u_xlat16_1.x, 1.0);\n   
            u_xlatb4 = u_xlat16_6<0.0;\n    if(u_xlatb4){discard;}\n    u_xlat4 =
            log2(_HdrMultiply);\n    u_xlat4 = u_xlat4 * 0.416666657;\n    u_xlat4
            = exp2(u_xlat4);\n    u_xlat4 = u_xlat4 * 1.05499995 + -0.0549999997;\n   
            u_xlat4 = max(u_xlat4, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(u_xlat4);\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _ALPHATEST_ON
          - _CFXR_ADDITIVE
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Time;\nuniform \tmediump float
            _SingleChannel;\nuniform \tmediump float _UseDissolveOffsetUV;\nuniform
            \tmediump float _InvertDissolveTex;\nuniform \tmediump float _DoubleDissolve;\nuniform
            \tmediump vec2 _DissolveScroll;\nuniform \tmediump float _DissolveSmooth;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump float _Cutoff;\nuniform
            \tmediump vec4 _DissolveTex_ST;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _DissolveTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool
            u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump
            vec4 u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat u_xlat5;\nmediump
            float u_xlat16_6;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump float u_xlat16_11;\nmediump
            float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy = _Time.yy * vec2(_DissolveScroll.x,
            _DissolveScroll.y);\n    u_xlat0.xy = fract(u_xlat0.xy);\n    u_xlat10.xy
            = vs_TEXCOORD0.xy * _DissolveTex_ST.xy + _DissolveTex_ST.zw;\n    u_xlat0.xy
            = u_xlat0.xy + u_xlat10.xy;\n    u_xlatb10.xy = lessThan(vec4(0.0, 0.0,
            0.0, 0.0), vec4(_SingleChannel, _UseDissolveOffsetUV, _SingleChannel,
            _UseDissolveOffsetUV)).xy;\n    u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy
            : vs_TEXCOORD0.xy;\n    u_xlat16_0.x = texture(_DissolveTex, u_xlat0.xy).x;\n   
            u_xlat16_1.x = u_xlat16_0.x * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x
            * vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n    u_xlat16_1.x = (u_xlatb10.y)
            ? u_xlat5 : u_xlat16_0.x;\n    u_xlat16_6 = (-u_xlat16_1.x) + 1.0;\n   
            u_xlatb0 = 0.0>=_InvertDissolveTex;\n    u_xlat16_1.x = (u_xlatb0) ?
            u_xlat16_6 : u_xlat16_1.x;\n    u_xlat16_6 = u_xlat16_1.x + _DissolveSmooth;\n   
            u_xlat16_1.x = u_xlat16_1.x + (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x)
            + u_xlat16_6;\n    u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11
            = _DissolveSmooth * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11
            + (-_DissolveSmooth);\n    u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n   
            u_xlat16_16 = u_xlat16_6 * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16,
            0.0, 1.0);\n    u_xlat16_2.x = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2.x;\n   
            u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz
            = (u_xlatb10.x) ? vec3(1.0, 1.0, 1.0) : u_xlat16_2.xyz;\n    u_xlat16_3.w
            = (u_xlatb10.x) ? u_xlat16_2.x : u_xlat16_2.w;\n    u_xlat16_0 = u_xlat16_3
            * vs_COLOR0;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4
            = 0.0<_DoubleDissolve;\n    u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y
            : 0.0;\n    u_xlat16_11 = u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4
            = 0.0<u_xlat16_3.x;\n    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n   
            u_xlat16_1.x = u_xlat16_6 * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x,
            0.0, 1.0);\n    u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x
            = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x
            + u_xlat16_16;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_1.x = (u_xlatb4) ? u_xlat16_1.x : u_xlat16_16;\n    u_xlat16_6
            = u_xlat16_1.x + (-_Cutoff);\n    SV_Target0.w = min(u_xlat16_1.x, 1.0);\n   
            u_xlatb4 = u_xlat16_6<0.0;\n    if(u_xlatb4){discard;}\n    u_xlat4 =
            log2(_HdrMultiply);\n    u_xlat4 = u_xlat4 * 0.416666657;\n    u_xlat4
            = exp2(u_xlat4);\n    u_xlat4 = u_xlat4 * 1.05499995 + -0.0549999997;\n   
            u_xlat4 = max(u_xlat4, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(u_xlat4);\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _ALPHATEST_ON
          - _CFXR_ADDITIVE
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _SingleChannel;\nuniform \tmediump
            float _HdrMultiply;\nuniform lowp sampler2D _MainTex;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\n#define SV_Target0
            gl_FragData[0]\nfloat u_xlat0;\nbool u_xlatb0;\nmediump vec4 u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n   
            u_xlat0 = log2(_HdrMultiply);\n    u_xlat0 = u_xlat0 * 0.416666657;\n   
            u_xlat0 = exp2(u_xlat0);\n    u_xlat0 = u_xlat0 * 1.05499995 + -0.0549999997;\n   
            u_xlat0 = max(u_xlat0, 0.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.xyz = vec3(u_xlat0) * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            SV_Target0.w = min(u_xlat16_1.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _ALPHABLEND_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nfloat u_xlat0;\nbool u_xlatb0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n   
            u_xlat0 = log2(_HdrMultiply);\n    u_xlat0 = u_xlat0 * 0.416666657;\n   
            u_xlat0 = exp2(u_xlat0);\n    u_xlat0 = u_xlat0 * 1.05499995 + -0.0549999997;\n   
            u_xlat0 = max(u_xlat0, 0.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat16_1.x : u_xlat16_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.xyz = vec3(u_xlat0) * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            SV_Target0.w = min(u_xlat16_1.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _ALPHABLEND_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _SingleChannel;\nuniform \tmediump
            float _HdrMultiply;\nuniform lowp sampler2D _MainTex;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\n#define SV_Target0
            gl_FragData[0]\nfloat u_xlat0;\nbool u_xlatb0;\nmediump vec4 u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n   
            u_xlat0 = log2(_HdrMultiply);\n    u_xlat0 = u_xlat0 * 0.416666657;\n   
            u_xlat0 = exp2(u_xlat0);\n    u_xlat0 = u_xlat0 * 1.05499995 + -0.0549999997;\n   
            u_xlat0 = max(u_xlat0, 0.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.xyz = vec3(u_xlat0) * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            SV_Target0.w = min(u_xlat16_1.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_ADDITIVE
          - _FADING_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nfloat u_xlat0;\nbool u_xlatb0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n   
            u_xlat0 = log2(_HdrMultiply);\n    u_xlat0 = u_xlat0 * 0.416666657;\n   
            u_xlat0 = exp2(u_xlat0);\n    u_xlat0 = u_xlat0 * 1.05499995 + -0.0549999997;\n   
            u_xlat0 = max(u_xlat0, 0.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat16_1.x : u_xlat16_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.xyz = vec3(u_xlat0) * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            SV_Target0.w = min(u_xlat16_1.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_ADDITIVE
          - _FADING_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Time;\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _UseDissolveOffsetUV;\nuniform \tmediump float _InvertDissolveTex;\nuniform
            \tmediump float _DoubleDissolve;\nuniform \tmediump vec2 _DissolveScroll;\nuniform
            \tmediump float _DissolveSmooth;\nuniform \tmediump float _HdrMultiply;\nuniform
            \tmediump vec4 _DissolveTex_ST;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _DissolveTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nbool
            u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump float u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec4 u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat
            u_xlat5;\nmediump float u_xlat16_6;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump
            float u_xlat16_11;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy
            = _Time.yy * vec2(_DissolveScroll.x, _DissolveScroll.y);\n    u_xlat0.xy
            = fract(u_xlat0.xy);\n    u_xlat10.xy = vs_TEXCOORD0.xy * _DissolveTex_ST.xy
            + _DissolveTex_ST.zw;\n    u_xlat0.xy = u_xlat0.xy + u_xlat10.xy;\n   
            u_xlatb10.xy = lessThan(vec4(0.0, 0.0, 0.0, 0.0), vec4(_SingleChannel,
            _UseDissolveOffsetUV, _SingleChannel, _UseDissolveOffsetUV)).xy;\n   
            u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy : vs_TEXCOORD0.xy;\n    u_xlat10_0
            = texture2D(_DissolveTex, u_xlat0.xy).x;\n    u_xlat16_1.x = u_xlat10_0
            * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x * vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n   
            u_xlat16_1.x = (u_xlatb10.y) ? u_xlat5 : u_xlat10_0;\n    u_xlat16_6
            = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0 = 0.0>=_InvertDissolveTex;\n   
            u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6 : u_xlat16_1.x;\n    u_xlat16_6
            = u_xlat16_1.x + _DissolveSmooth;\n    u_xlat16_1.x = u_xlat16_1.x +
            (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x) + u_xlat16_6;\n   
            u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11 = _DissolveSmooth
            * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11 + (-_DissolveSmooth);\n   
            u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_16 = u_xlat16_6
            * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n   
            u_xlat16_2 = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2;\n    u_xlat10_2
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = (u_xlatb10.x)
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_2.xyz;\n    u_xlat16_3.w = (u_xlatb10.x)
            ? u_xlat10_2.x : u_xlat10_2.w;\n    u_xlat16_0 = u_xlat16_3 * vs_COLOR0;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4 = 0.0<_DoubleDissolve;\n   
            u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y : 0.0;\n    u_xlat16_11 =
            u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4 = 0.0<u_xlat16_3.x;\n   
            u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_1.x = u_xlat16_6
            * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x + u_xlat16_16;\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (u_xlatb4)
            ? u_xlat16_1.x : u_xlat16_16;\n    SV_Target0.w = min(u_xlat16_1.x, 1.0);\n   
            u_xlat4 = log2(_HdrMultiply);\n    u_xlat4 = u_xlat4 * 0.416666657;\n   
            u_xlat4 = exp2(u_xlat4);\n    u_xlat4 = u_xlat4 * 1.05499995 + -0.0549999997;\n   
            u_xlat4 = max(u_xlat4, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(u_xlat4);\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _CFXR_ADDITIVE
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Time;\nuniform \tmediump float
            _SingleChannel;\nuniform \tmediump float _UseDissolveOffsetUV;\nuniform
            \tmediump float _InvertDissolveTex;\nuniform \tmediump float _DoubleDissolve;\nuniform
            \tmediump vec2 _DissolveScroll;\nuniform \tmediump float _DissolveSmooth;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump vec4 _DissolveTex_ST;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _DissolveTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec2
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump
            vec4 u_xlat16_2;\nmediump vec4 u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat
            u_xlat5;\nmediump float u_xlat16_6;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump
            float u_xlat16_11;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy
            = _Time.yy * vec2(_DissolveScroll.x, _DissolveScroll.y);\n    u_xlat0.xy
            = fract(u_xlat0.xy);\n    u_xlat10.xy = vs_TEXCOORD0.xy * _DissolveTex_ST.xy
            + _DissolveTex_ST.zw;\n    u_xlat0.xy = u_xlat0.xy + u_xlat10.xy;\n   
            u_xlatb10.xy = lessThan(vec4(0.0, 0.0, 0.0, 0.0), vec4(_SingleChannel,
            _UseDissolveOffsetUV, _SingleChannel, _UseDissolveOffsetUV)).xy;\n   
            u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy : vs_TEXCOORD0.xy;\n    u_xlat16_0.x
            = texture(_DissolveTex, u_xlat0.xy).x;\n    u_xlat16_1.x = u_xlat16_0.x
            * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x * vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n   
            u_xlat16_1.x = (u_xlatb10.y) ? u_xlat5 : u_xlat16_0.x;\n    u_xlat16_6
            = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0 = 0.0>=_InvertDissolveTex;\n   
            u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6 : u_xlat16_1.x;\n    u_xlat16_6
            = u_xlat16_1.x + _DissolveSmooth;\n    u_xlat16_1.x = u_xlat16_1.x +
            (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x) + u_xlat16_6;\n   
            u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11 = _DissolveSmooth
            * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11 + (-_DissolveSmooth);\n   
            u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_16 = u_xlat16_6
            * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n   
            u_xlat16_2.x = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2.x;\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = (u_xlatb10.x)
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_2.xyz;\n    u_xlat16_3.w = (u_xlatb10.x)
            ? u_xlat16_2.x : u_xlat16_2.w;\n    u_xlat16_0 = u_xlat16_3 * vs_COLOR0;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4 = 0.0<_DoubleDissolve;\n   
            u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y : 0.0;\n    u_xlat16_11 =
            u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4 = 0.0<u_xlat16_3.x;\n   
            u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_1.x = u_xlat16_6
            * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x + u_xlat16_16;\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (u_xlatb4)
            ? u_xlat16_1.x : u_xlat16_16;\n    SV_Target0.w = min(u_xlat16_1.x, 1.0);\n   
            u_xlat4 = log2(_HdrMultiply);\n    u_xlat4 = u_xlat4 * 0.416666657;\n   
            u_xlat4 = exp2(u_xlat4);\n    u_xlat4 = u_xlat4 * 1.05499995 + -0.0549999997;\n   
            u_xlat4 = max(u_xlat4, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(u_xlat4);\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _CFXR_ADDITIVE
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Time;\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _UseDissolveOffsetUV;\nuniform \tmediump float _InvertDissolveTex;\nuniform
            \tmediump float _DoubleDissolve;\nuniform \tmediump vec2 _DissolveScroll;\nuniform
            \tmediump float _DissolveSmooth;\nuniform \tmediump float _HdrMultiply;\nuniform
            \tmediump vec4 _DissolveTex_ST;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _DissolveTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nbool
            u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump float u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec4 u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat
            u_xlat5;\nmediump float u_xlat16_6;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump
            float u_xlat16_11;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy
            = _Time.yy * vec2(_DissolveScroll.x, _DissolveScroll.y);\n    u_xlat0.xy
            = fract(u_xlat0.xy);\n    u_xlat10.xy = vs_TEXCOORD0.xy * _DissolveTex_ST.xy
            + _DissolveTex_ST.zw;\n    u_xlat0.xy = u_xlat0.xy + u_xlat10.xy;\n   
            u_xlatb10.xy = lessThan(vec4(0.0, 0.0, 0.0, 0.0), vec4(_SingleChannel,
            _UseDissolveOffsetUV, _SingleChannel, _UseDissolveOffsetUV)).xy;\n   
            u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy : vs_TEXCOORD0.xy;\n    u_xlat10_0
            = texture2D(_DissolveTex, u_xlat0.xy).x;\n    u_xlat16_1.x = u_xlat10_0
            * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x * vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n   
            u_xlat16_1.x = (u_xlatb10.y) ? u_xlat5 : u_xlat10_0;\n    u_xlat16_6
            = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0 = 0.0>=_InvertDissolveTex;\n   
            u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6 : u_xlat16_1.x;\n    u_xlat16_6
            = u_xlat16_1.x + _DissolveSmooth;\n    u_xlat16_1.x = u_xlat16_1.x +
            (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x) + u_xlat16_6;\n   
            u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11 = _DissolveSmooth
            * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11 + (-_DissolveSmooth);\n   
            u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_16 = u_xlat16_6
            * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n   
            u_xlat16_2 = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2;\n    u_xlat10_2
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = (u_xlatb10.x)
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_2.xyz;\n    u_xlat16_3.w = (u_xlatb10.x)
            ? u_xlat10_2.x : u_xlat10_2.w;\n    u_xlat16_0 = u_xlat16_3 * vs_COLOR0;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4 = 0.0<_DoubleDissolve;\n   
            u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y : 0.0;\n    u_xlat16_11 =
            u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4 = 0.0<u_xlat16_3.x;\n   
            u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_1.x = u_xlat16_6
            * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x + u_xlat16_16;\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (u_xlatb4)
            ? u_xlat16_1.x : u_xlat16_16;\n    SV_Target0.w = min(u_xlat16_1.x, 1.0);\n   
            u_xlat4 = log2(_HdrMultiply);\n    u_xlat4 = u_xlat4 * 0.416666657;\n   
            u_xlat4 = exp2(u_xlat4);\n    u_xlat4 = u_xlat4 * 1.05499995 + -0.0549999997;\n   
            u_xlat4 = max(u_xlat4, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(u_xlat4);\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_ADDITIVE
          - _CFXR_DISSOLVE
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Time;\nuniform \tmediump float
            _SingleChannel;\nuniform \tmediump float _UseDissolveOffsetUV;\nuniform
            \tmediump float _InvertDissolveTex;\nuniform \tmediump float _DoubleDissolve;\nuniform
            \tmediump vec2 _DissolveScroll;\nuniform \tmediump float _DissolveSmooth;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump vec4 _DissolveTex_ST;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _DissolveTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec2
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump
            vec4 u_xlat16_2;\nmediump vec4 u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat
            u_xlat5;\nmediump float u_xlat16_6;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump
            float u_xlat16_11;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy
            = _Time.yy * vec2(_DissolveScroll.x, _DissolveScroll.y);\n    u_xlat0.xy
            = fract(u_xlat0.xy);\n    u_xlat10.xy = vs_TEXCOORD0.xy * _DissolveTex_ST.xy
            + _DissolveTex_ST.zw;\n    u_xlat0.xy = u_xlat0.xy + u_xlat10.xy;\n   
            u_xlatb10.xy = lessThan(vec4(0.0, 0.0, 0.0, 0.0), vec4(_SingleChannel,
            _UseDissolveOffsetUV, _SingleChannel, _UseDissolveOffsetUV)).xy;\n   
            u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy : vs_TEXCOORD0.xy;\n    u_xlat16_0.x
            = texture(_DissolveTex, u_xlat0.xy).x;\n    u_xlat16_1.x = u_xlat16_0.x
            * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x * vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n   
            u_xlat16_1.x = (u_xlatb10.y) ? u_xlat5 : u_xlat16_0.x;\n    u_xlat16_6
            = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0 = 0.0>=_InvertDissolveTex;\n   
            u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6 : u_xlat16_1.x;\n    u_xlat16_6
            = u_xlat16_1.x + _DissolveSmooth;\n    u_xlat16_1.x = u_xlat16_1.x +
            (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x) + u_xlat16_6;\n   
            u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11 = _DissolveSmooth
            * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11 + (-_DissolveSmooth);\n   
            u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_16 = u_xlat16_6
            * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n   
            u_xlat16_2.x = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2.x;\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = (u_xlatb10.x)
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_2.xyz;\n    u_xlat16_3.w = (u_xlatb10.x)
            ? u_xlat16_2.x : u_xlat16_2.w;\n    u_xlat16_0 = u_xlat16_3 * vs_COLOR0;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4 = 0.0<_DoubleDissolve;\n   
            u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y : 0.0;\n    u_xlat16_11 =
            u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4 = 0.0<u_xlat16_3.x;\n   
            u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_1.x = u_xlat16_6
            * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x + u_xlat16_16;\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (u_xlatb4)
            ? u_xlat16_1.x : u_xlat16_16;\n    SV_Target0.w = min(u_xlat16_1.x, 1.0);\n   
            u_xlat4 = log2(_HdrMultiply);\n    u_xlat4 = u_xlat4 * 0.416666657;\n   
            u_xlat4 = exp2(u_xlat4);\n    u_xlat4 = u_xlat4 * 1.05499995 + -0.0549999997;\n   
            u_xlat4 = max(u_xlat4, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(u_xlat4);\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_ADDITIVE
          - _CFXR_DISSOLVE
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _CFXR_ADDITIVE
        - _CFXR_DISSOLVE
        - _CFXR_EDGE_FADING
        - _CFXR_FONT_COLORS
        - _CFXR_LIGHTING_ALL
        - _CFXR_LIGHTING_BACK
        - _CFXR_LIGHTING_DIRECT
        - _CFXR_LIGHTING_INDIRECT
        - _CFXR_LIGHTING_WPOS_OFFSET
        - _CFXR_OVERLAYTEX_1X
        - _CFXR_OVERLAYTEX_2X
        - _CFXR_SECONDCOLOR_LERP
        - _CFXR_UV_DISTORTION
        - _EMISSION
        - _FADING_ON
        - _FLIPBOOK_BLENDING
        - _NORMALMAP
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_DISSOLVE
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_SECONDCOLOR_LERP
          - _CFXR_FONT_COLORS
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_EDGE_FADING
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_LIGHTING_DIRECT
          - _CFXR_LIGHTING_INDIRECT
          - _CFXR_LIGHTING_ALL
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_LIGHTING_WPOS_OFFSET
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_LIGHTING_BACK
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _EMISSION
          hasDiscard: 1
        - Keywords:
          - _
          - _FADING_ON
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _FADING_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _FADING_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _ALPHABLEND_ON
          - _FADING_ON
          - _
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _ALPHABLEND_ON
          - _FADING_ON
          - _
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _ALPHABLEND_ON
          - _
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _ALPHABLEND_ON
          - _
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _ALPHATEST_ON
          - _CFXR_ADDITIVE
          - _FADING_ON
          - _
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _ALPHATEST_ON
          - _CFXR_ADDITIVE
          - _FADING_ON
          - _
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _ALPHATEST_ON
          - _CFXR_ADDITIVE
          - _
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _ALPHATEST_ON
          - _CFXR_ADDITIVE
          - _
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _ALPHABLEND_ON
          - _
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _ALPHABLEND_ON
          - _
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_ADDITIVE
          - _FADING_ON
          - _
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_ADDITIVE
          - _FADING_ON
          - _
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _CFXR_ADDITIVE
          - _
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _CFXR_ADDITIVE
          - _
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_ADDITIVE
          - _CFXR_DISSOLVE
          - _
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_ADDITIVE
          - _CFXR_DISSOLVE
          - _
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
        ShaderVariants: []
        DefinedKeywords:
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _CFXR_ADDITIVE
        - _CFXR_DISSOLVE
        - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
        - _CFXR_DITHERED_SHADOWS_ON
        - _CFXR_OVERLAYTEX_1X
        - _CFXR_OVERLAYTEX_2X
        - _CFXR_UV_DISTORTION
        - _FLIPBOOK_BLENDING
        - _
        KeywordGroups:
        - Keywords:
          - _
          - _CFXR_DISSOLVE
          hasDiscard: 1
        - Keywords:
          - _
          - _CFXR_DITHERED_SHADOWS_ON
          - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
          hasDiscard: 1
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    ShaderPath: Assets/JMO Assets/Cartoon FX Remaster/CFXR Assets/Shaders/CFXR Particle
      Ubershader.cfxrshader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - _ALPHABLEND_ON
    - _ALPHAMODULATE_ON
    - _ALPHAPREMULTIPLY_ON
    - _ALPHATEST_ON
    - _CFXR_ADDITIVE
    - _CFXR_DISSOLVE
    - _CFXR_EDGE_FADING
    - _CFXR_FONT_COLORS
    - _CFXR_LIGHTING_ALL
    - _CFXR_LIGHTING_BACK
    - _CFXR_LIGHTING_DIRECT
    - _CFXR_LIGHTING_INDIRECT
    - _CFXR_LIGHTING_WPOS_OFFSET
    - _CFXR_OVERLAYTEX_1X
    - _CFXR_OVERLAYTEX_2X
    - _CFXR_SECONDCOLOR_LERP
    - _CFXR_UV_DISTORTION
    - _EMISSION
    - _FADING_ON
    - _FLIPBOOK_BLENDING
    - _NORMALMAP
    - SHADOWS_DEPTH
    - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
    - _CFXR_DITHERED_SHADOWS_ON
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    - _
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _FADING_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _FADING_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_DISSOLVE
      - _FADING_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_DISSOLVE
      - _FADING_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _ALPHABLEND_ON
      - _FADING_ON
      - _
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _ALPHABLEND_ON
      - _FADING_ON
      - _
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_DISSOLVE
      - _FADING_ON
      - _ALPHABLEND_ON
      - _
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_DISSOLVE
      - _FADING_ON
      - _ALPHABLEND_ON
      - _
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _ALPHATEST_ON
      - _CFXR_ADDITIVE
      - _FADING_ON
      - _
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _ALPHATEST_ON
      - _CFXR_ADDITIVE
      - _FADING_ON
      - _
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_DISSOLVE
      - _FADING_ON
      - _ALPHATEST_ON
      - _CFXR_ADDITIVE
      - _
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_DISSOLVE
      - _FADING_ON
      - _ALPHATEST_ON
      - _CFXR_ADDITIVE
      - _
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _ALPHABLEND_ON
      - _
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _ALPHABLEND_ON
      - _
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_ADDITIVE
      - _FADING_ON
      - _
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_ADDITIVE
      - _FADING_ON
      - _
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_DISSOLVE
      - _FADING_ON
      - _CFXR_ADDITIVE
      - _
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_DISSOLVE
      - _FADING_ON
      - _CFXR_ADDITIVE
      - _
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_ADDITIVE
      - _CFXR_DISSOLVE
      - _
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_ADDITIVE
      - _CFXR_DISSOLVE
      - _
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: b68b99c2e57cef4419465c63c527201b, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nvarying
            mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Time;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _Usecenterglow;\nuniform \tvec4 _SpeedMainTexUVNoiseZW;\nuniform
            \tvec4 _DistortionSpeedXYPowerZ;\nuniform \tvec4 _Flow_ST;\nuniform \tvec4
            _Mask_ST;\nuniform \tvec4 _Noise_ST;\nuniform \tvec4 _Color;\nuniform
            \tfloat _Emission;\nuniform \tfloat _Opacity;\nuniform lowp sampler2D
            _Mask;\nuniform lowp sampler2D _Flow;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _Noise;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nvec2 u_xlat2;\nlowp
            vec3 u_xlat10_2;\nvec2 u_xlat7;\nlowp vec2 u_xlat10_7;\nvoid main()\n{\n   
            u_xlat0.xy = vs_TEXCOORD0.xy * _Noise_ST.xy + _Noise_ST.zw;\n    u_xlat0.xy
            = _Time.yy * _SpeedMainTexUVNoiseZW.zw + u_xlat0.xy;\n    u_xlat10_0
            = texture2D(_Noise, u_xlat0.xy);\n    u_xlat1.xy = vs_TEXCOORD0.xy *
            _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xy = _Time.yy * _SpeedMainTexUVNoiseZW.xy
            + u_xlat1.xy;\n    u_xlat7.xy = vs_TEXCOORD0.xy * _Flow_ST.xy + _Flow_ST.zw;\n   
            u_xlat7.xy = _Time.yy * _DistortionSpeedXYPowerZ.xy + u_xlat7.xy;\n   
            u_xlat10_7.xy = texture2D(_Flow, u_xlat7.xy).xy;\n    u_xlat2.xy = vs_TEXCOORD0.xy
            * _Mask_ST.xy + _Mask_ST.zw;\n    u_xlat10_2.xyz = texture2D(_Mask, u_xlat2.xy).xyz;\n   
            u_xlat7.xy = u_xlat10_7.xy * u_xlat10_2.xy;\n    u_xlat1.xy = (-u_xlat7.xy)
            * _DistortionSpeedXYPowerZ.zz + u_xlat1.xy;\n    u_xlat10_1 = texture2D(_MainTex,
            u_xlat1.xy);\n    u_xlat0 = u_xlat10_0 * u_xlat10_1;\n    u_xlat0 = u_xlat0
            * _Color;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n    u_xlat1.x = (-vs_TEXCOORD0.z)
            + 1.0;\n    u_xlat1.xyz = (-u_xlat1.xxx) + u_xlat10_2.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat10_2.xyz;\n    u_xlat1.xyz = clamp(u_xlat1.xyz,
            0.0, 1.0);\n    u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz + (-u_xlat0.xyz);\n   
            u_xlat0.xyz = vec3(_Usecenterglow) * u_xlat1.xyz + u_xlat0.xyz;\n   
            u_xlat1 = u_xlat0 * vec4(_Emission, _Emission, _Emission, _Opacity);\n   
            SV_Target0 = u_xlat1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec4 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Time;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _Usecenterglow;\nuniform \tvec4 _SpeedMainTexUVNoiseZW;\nuniform
            \tvec4 _DistortionSpeedXYPowerZ;\nuniform \tvec4 _Flow_ST;\nuniform \tvec4
            _Mask_ST;\nuniform \tvec4 _Noise_ST;\nuniform \tvec4 _Color;\nuniform
            \tfloat _Emission;\nuniform \tfloat _Opacity;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _Mask;\nUNITY_LOCATION(1) uniform mediump sampler2D
            _Flow;\nUNITY_LOCATION(2) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _Noise;\nin mediump vec4 vs_COLOR0;\nin highp
            vec4 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec2
            u_xlat2;\nmediump vec3 u_xlat16_2;\nvec2 u_xlat7;\nmediump vec2 u_xlat16_7;\nvoid
            main()\n{\n    u_xlat0.xy = vs_TEXCOORD0.xy * _Noise_ST.xy + _Noise_ST.zw;\n   
            u_xlat0.xy = _Time.yy * _SpeedMainTexUVNoiseZW.zw + u_xlat0.xy;\n   
            u_xlat16_0 = texture(_Noise, u_xlat0.xy);\n    u_xlat1.xy = vs_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xy = _Time.yy * _SpeedMainTexUVNoiseZW.xy
            + u_xlat1.xy;\n    u_xlat7.xy = vs_TEXCOORD0.xy * _Flow_ST.xy + _Flow_ST.zw;\n   
            u_xlat7.xy = _Time.yy * _DistortionSpeedXYPowerZ.xy + u_xlat7.xy;\n   
            u_xlat16_7.xy = texture(_Flow, u_xlat7.xy).xy;\n    u_xlat2.xy = vs_TEXCOORD0.xy
            * _Mask_ST.xy + _Mask_ST.zw;\n    u_xlat16_2.xyz = texture(_Mask, u_xlat2.xy).xyz;\n   
            u_xlat7.xy = u_xlat16_7.xy * u_xlat16_2.xy;\n    u_xlat1.xy = (-u_xlat7.xy)
            * _DistortionSpeedXYPowerZ.zz + u_xlat1.xy;\n    u_xlat16_1 = texture(_MainTex,
            u_xlat1.xy);\n    u_xlat0 = u_xlat16_0 * u_xlat16_1;\n    u_xlat0 = u_xlat0
            * _Color;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n    u_xlat1.x = (-vs_TEXCOORD0.z)
            + 1.0;\n    u_xlat1.xyz = (-u_xlat1.xxx) + u_xlat16_2.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat16_2.xyz;\n    u_xlat1.xyz = clamp(u_xlat1.xyz,
            0.0, 1.0);\n    u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz + (-u_xlat0.xyz);\n   
            u_xlat0.xyz = vec3(_Usecenterglow) * u_xlat1.xyz + u_xlat0.xyz;\n   
            u_xlat1 = u_xlat0 * vec4(_Emission, _Emission, _Emission, _Opacity);\n   
            SV_Target0 = u_xlat1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: b68b99c2e57cef4419465c63c527201b, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: b68b99c2e57cef4419465c63c527201b, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: b68b99c2e57cef4419465c63c527201b, type: 3}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: b68b99c2e57cef4419465c63c527201b, type: 3}
    ShaderPath: Assets/VFX/Shaders/Blend_CenterGlow.shader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: b68b99c2e57cef4419465c63c527201b, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: b68b99c2e57cef4419465c63c527201b, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute
            highp vec4 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp
            vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3
            vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\nvarying
            highp vec4 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD8 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _LightContribution;\nuniform \tmediump
            float _TextureImpact;\nuniform lowp sampler2D _MainTex;\nvarying highp
            vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat0.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat0.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat0.xyz = u_xlat0.xyz * _Color.xyz;\n    u_xlat16_1.xyz = _LightColor0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_1.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_1.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec4 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nout
            highp vec3 vs_TEXCOORD4;\nout highp vec4 vs_TEXCOORD7;\nout highp vec4
            vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD8 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _TextureImpact;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin highp vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump
            vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3
            u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat16_0.xyz + vec3(-1.0, -1.0, -1.0);\n    u_xlat0.xyz
            = vec3(vec3(_TextureImpact, _TextureImpact, _TextureImpact)) * u_xlat0.xyz
            + vec3(1.0, 1.0, 1.0);\n    u_xlat0.xyz = u_xlat0.xyz * _Color.xyz;\n   
            u_xlat16_1.xyz = _LightColor0.xyz + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_1.xyz
            = vec3(vec3(_LightContribution, _LightContribution, _LightContribution))
            * u_xlat16_1.xyz + vec3(1.0, 1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz
            * u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying mediump
            vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec4
            vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD3.xyz = _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = in_NORMAL0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_NORMAL0.xxx + u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat1.xyz;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n   
            u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 =
            u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD8 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4
            unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _ColorDim;\nuniform \tmediump float _SelfShadingSize;\nuniform
            \tmediump float _ShadowEdgeSize;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _Flatness;\nuniform \tmediump float _TextureImpact;\nuniform
            lowp sampler2D _BumpMap;\nuniform lowp sampler2D _MainTex;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3
            vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying mediump vec3
            vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat8;\nmediump
            vec3 u_xlat16_10;\nmediump float u_xlat16_16;\nfloat u_xlat18;\nmediump
            float u_xlat16_19;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap,
            vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0)
            + vec2(-1.0, -1.0);\n    u_xlat16_19 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n   
            u_xlat16_19 = min(u_xlat16_19, 1.0);\n    u_xlat16_19 = (-u_xlat16_19)
            + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_19);\n    u_xlat0.x = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat18 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat0.xyz
            = vec3(u_xlat18) * u_xlat0.xyz;\n    u_xlat2.x = hlslcc_mtx4x4unity_WorldToObject[0].z;\n   
            u_xlat2.y = hlslcc_mtx4x4unity_WorldToObject[1].z;\n    u_xlat2.z = hlslcc_mtx4x4unity_WorldToObject[2].z;\n   
            u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat2.xyz = vec3(u_xlat18) * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yzx
            * u_xlat2.zxy;\n    u_xlat1.xyz = u_xlat2.yzx * u_xlat0.zxy + (-u_xlat3.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat1.w = u_xlat0.x
            + 1.0;\n    u_xlat0.x = u_xlat1.w + u_xlat1.w;\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0 = u_xlat1 / u_xlat0.xxxx;\n    u_xlat2.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = u_xlat0.w * u_xlat0.w + (-u_xlat2.x);\n    u_xlat8.x = dot(u_xlat0.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat1 = u_xlat0 + u_xlat0;\n    u_xlat8.xyz
            = u_xlat8.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = vs_TEXCOORD4.xyz * u_xlat2.xxx
            + u_xlat8.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * vs_TEXCOORD4.yzx;\n   
            u_xlat0.xyz = u_xlat0.yzx * vs_TEXCOORD4.zxy + (-u_xlat3.xyz);\n    u_xlat0.xyz
            = u_xlat1.www * u_xlat0.xyz + u_xlat2.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat0.xyz
            = vec3(u_xlat18) * u_xlat0.xyz;\n    u_xlat16_4.x = dot(u_xlat0.xyz,
            vs_TEXCOORD3.xyz);\n    u_xlat16_4.x = u_xlat16_4.x * 0.5 + 0.5;\n   
            u_xlat16_4.x = u_xlat16_4.x + (-_SelfShadingSize);\n    u_xlat16_4.x
            = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_10.x = float(1.0) / _ShadowEdgeSize;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_4.x;\n    u_xlat16_10.x = clamp(u_xlat16_10.x,
            0.0, 1.0);\n    u_xlat16_16 = u_xlat16_10.x * -2.0 + 3.0;\n    u_xlat16_10.x
            = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_10.x = u_xlat16_16 * u_xlat16_10.x
            + (-u_xlat16_4.x);\n    u_xlat16_4.x = _Flatness * u_xlat16_10.x + u_xlat16_4.x;\n   
            u_xlat16_10.xyz = _Color.xyz + (-_ColorDim.xyz);\n    u_xlat16_4.xyz
            = u_xlat16_4.xxx * u_xlat16_10.xyz + _ColorDim.xyz;\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat0.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat0.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    u_xlat1.xyz = vs_TEXCOORD1.xyz;\n   
            u_xlat1.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y
            = dot(unity_SHAg, u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz
            = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_4.xyz);\n   
            u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat2.xyz = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_4.xyz
            = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat16_5.xyz = _LightColor0.xyz +
            vec3(-1.0, -1.0, -1.0);\n    u_xlat16_5.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_5.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_5.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout
            highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3
            vs_TEXCOORD3;\nout highp vec3 vs_TEXCOORD4;\nout mediump vec3 vs_TEXCOORD5;\nout
            highp vec4 vs_TEXCOORD7;\nout highp vec4 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD3.xyz = _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = in_NORMAL0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_NORMAL0.xxx + u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat1.xyz;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n   
            u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 =
            u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD8 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump
            vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tvec4
            hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _ColorDim;\nuniform \tmediump
            float _SelfShadingSize;\nuniform \tmediump float _ShadowEdgeSize;\nuniform
            \tmediump float _LightContribution;\nuniform \tmediump float _Flatness;\nuniform
            \tmediump float _TextureImpact;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _BumpMap;\nUNITY_LOCATION(1) uniform mediump sampler2D _MainTex;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3
            vs_TEXCOORD3;\nin highp vec3 vs_TEXCOORD4;\nin mediump vec3 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat8;\nmediump vec3
            u_xlat16_10;\nmediump float u_xlat16_16;\nfloat u_xlat18;\nmediump float
            u_xlat16_19;\nvoid main()\n{\n    u_xlat16_0.xy = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n   
            u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_19 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_19 = min(u_xlat16_19,
            1.0);\n    u_xlat16_19 = (-u_xlat16_19) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_19);\n   
            u_xlat0.x = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat0.xyz = vec3(u_xlat18) * u_xlat0.xyz;\n    u_xlat2.x = hlslcc_mtx4x4unity_WorldToObject[0].z;\n   
            u_xlat2.y = hlslcc_mtx4x4unity_WorldToObject[1].z;\n    u_xlat2.z = hlslcc_mtx4x4unity_WorldToObject[2].z;\n   
            u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat2.xyz = vec3(u_xlat18) * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yzx
            * u_xlat2.zxy;\n    u_xlat1.xyz = u_xlat2.yzx * u_xlat0.zxy + (-u_xlat3.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat1.w = u_xlat0.x
            + 1.0;\n    u_xlat0.x = u_xlat1.w + u_xlat1.w;\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0 = u_xlat1 / u_xlat0.xxxx;\n    u_xlat2.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = u_xlat0.w * u_xlat0.w + (-u_xlat2.x);\n    u_xlat8.x = dot(u_xlat0.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat1 = u_xlat0 + u_xlat0;\n    u_xlat8.xyz
            = u_xlat8.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = vs_TEXCOORD4.xyz * u_xlat2.xxx
            + u_xlat8.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * vs_TEXCOORD4.yzx;\n   
            u_xlat0.xyz = u_xlat0.yzx * vs_TEXCOORD4.zxy + (-u_xlat3.xyz);\n    u_xlat0.xyz
            = u_xlat1.www * u_xlat0.xyz + u_xlat2.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat0.xyz
            = vec3(u_xlat18) * u_xlat0.xyz;\n    u_xlat16_4.x = dot(u_xlat0.xyz,
            vs_TEXCOORD3.xyz);\n    u_xlat16_4.x = u_xlat16_4.x * 0.5 + 0.5;\n   
            u_xlat16_4.x = u_xlat16_4.x + (-_SelfShadingSize);\n    u_xlat16_4.x
            = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_10.x = float(1.0) / _ShadowEdgeSize;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_4.x;\n    u_xlat16_10.x = clamp(u_xlat16_10.x,
            0.0, 1.0);\n    u_xlat16_16 = u_xlat16_10.x * -2.0 + 3.0;\n    u_xlat16_10.x
            = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_10.x = u_xlat16_16 * u_xlat16_10.x
            + (-u_xlat16_4.x);\n    u_xlat16_4.x = _Flatness * u_xlat16_10.x + u_xlat16_4.x;\n   
            u_xlat16_10.xyz = _Color.xyz + (-_ColorDim.xyz);\n    u_xlat16_4.xyz
            = u_xlat16_4.xxx * u_xlat16_10.xyz + _ColorDim.xyz;\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat0.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat0.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    u_xlat1.xyz = vs_TEXCOORD1.xyz;\n   
            u_xlat1.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y
            = dot(unity_SHAg, u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz
            = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_4.xyz);\n   
            u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat2.xyz = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_4.xyz
            = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat16_5.xyz = _LightColor0.xyz +
            vec3(-1.0, -1.0, -1.0);\n    u_xlat16_5.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_5.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_5.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying mediump
            vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec4
            vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD3.xyz = _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = in_NORMAL0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_NORMAL0.xxx + u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat1.xyz;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n   
            u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 =
            u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD8 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_OrthoParams;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _ColorDim;\nuniform \tmediump
            vec4 _FlatRimColor;\nuniform \tfloat _FlatRimSize;\nuniform \tfloat _FlatRimEdgeSmoothness;\nuniform
            \tfloat _FlatRimLightAlign;\nuniform \tmediump float _SelfShadingSize;\nuniform
            \tmediump float _ShadowEdgeSize;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _Flatness;\nuniform \tmediump float _TextureImpact;\nuniform
            lowp sampler2D _BumpMap;\nuniform lowp sampler2D _MainTex;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3
            vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying
            mediump vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec2 u_xlat10_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nlowp
            vec3 u_xlat10_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3
            u_xlat16_5;\nvec3 u_xlat6;\nvec3 u_xlat8;\nmediump vec3 u_xlat16_10;\nmediump
            float u_xlat16_16;\nfloat u_xlat18;\nmediump float u_xlat16_19;\nvoid
            main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n   
            u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_19 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_19 = min(u_xlat16_19,
            1.0);\n    u_xlat16_19 = (-u_xlat16_19) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_19);\n   
            u_xlat0.x = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat0.xyz = vec3(u_xlat18) * u_xlat0.xyz;\n    u_xlat2.x = hlslcc_mtx4x4unity_WorldToObject[0].z;\n   
            u_xlat2.y = hlslcc_mtx4x4unity_WorldToObject[1].z;\n    u_xlat2.z = hlslcc_mtx4x4unity_WorldToObject[2].z;\n   
            u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat2.xyz = vec3(u_xlat18) * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yzx
            * u_xlat2.zxy;\n    u_xlat1.xyz = u_xlat2.yzx * u_xlat0.zxy + (-u_xlat3.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat1.w = u_xlat0.x
            + 1.0;\n    u_xlat0.x = u_xlat1.w + u_xlat1.w;\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0 = u_xlat1 / u_xlat0.xxxx;\n    u_xlat2.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = u_xlat0.w * u_xlat0.w + (-u_xlat2.x);\n    u_xlat8.x = dot(u_xlat0.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat1 = u_xlat0 + u_xlat0;\n    u_xlat8.xyz
            = u_xlat8.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = vs_TEXCOORD4.xyz * u_xlat2.xxx
            + u_xlat8.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * vs_TEXCOORD4.yzx;\n   
            u_xlat0.xyz = u_xlat0.yzx * vs_TEXCOORD4.zxy + (-u_xlat3.xyz);\n    u_xlat0.xyz
            = u_xlat1.www * u_xlat0.xyz + u_xlat2.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat0.xyz
            = vec3(u_xlat18) * u_xlat0.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2.xyz = vec3(u_xlat18) *
            u_xlat2.xyz;\n    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;\n    u_xlat3.y
            = hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;\n   
            u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat3.xyz = u_xlat3.xyz * vec3(u_xlat18) + (-u_xlat2.xyz);\n    u_xlat2.xyz
            = unity_OrthoParams.www * u_xlat3.xyz + u_xlat2.xyz;\n    u_xlat16_4.x
            = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat16_10.x = dot(u_xlat0.xyz,
            vs_TEXCOORD3.xyz);\n    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;\n    u_xlat0.x
            = (-_FlatRimSize) + 1.0;\n    u_xlat0.x = (-u_xlat16_10.x) * _FlatRimLightAlign
            + u_xlat0.x;\n    u_xlat16_10.x = u_xlat16_10.x * 0.5 + 0.5;\n    u_xlat16_10.x
            = u_xlat16_10.x + (-_SelfShadingSize);\n    u_xlat16_10.x = clamp(u_xlat16_10.x,
            0.0, 1.0);\n    u_xlat6.x = (-_FlatRimEdgeSmoothness) * 0.5 + u_xlat0.x;\n   
            u_xlat0.x = _FlatRimEdgeSmoothness * 0.5 + u_xlat0.x;\n    u_xlat0.x
            = (-u_xlat6.x) + u_xlat0.x;\n    u_xlat6.x = (-u_xlat6.x) + u_xlat16_4.x;\n   
            u_xlat0.x = float(1.0) / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat6.x;\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat6.x = u_xlat0.x *
            -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x =
            u_xlat0.x * u_xlat6.x;\n    u_xlat16_4.x = float(1.0) / _ShadowEdgeSize;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x,
            0.0, 1.0);\n    u_xlat16_16 = u_xlat16_4.x * -2.0 + 3.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_16 * u_xlat16_4.x
            + (-u_xlat16_10.x);\n    u_xlat16_4.x = _Flatness * u_xlat16_4.x + u_xlat16_10.x;\n   
            u_xlat16_10.xyz = _Color.xyz + (-_ColorDim.xyz);\n    u_xlat16_4.xyz
            = u_xlat16_4.xxx * u_xlat16_10.xyz + _ColorDim.xyz;\n    u_xlat6.xyz
            = (-u_xlat16_4.xyz) + _FlatRimColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx
            * u_xlat6.xyz + u_xlat16_4.xyz;\n    u_xlat10_2.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat2.xyz = u_xlat10_2.xyz + vec3(-1.0,
            -1.0, -1.0);\n    u_xlat2.xyz = vec3(vec3(_TextureImpact, _TextureImpact,
            _TextureImpact)) * u_xlat2.xyz + vec3(1.0, 1.0, 1.0);\n    u_xlat0.xyz
            = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat1.xyz = vs_TEXCOORD1.xyz;\n   
            u_xlat1.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y
            = dot(unity_SHAg, u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz
            = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_4.xyz);\n   
            u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat2.xyz = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_4.xyz
            = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat16_5.xyz = _LightColor0.xyz +
            vec3(-1.0, -1.0, -1.0);\n    u_xlat16_5.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_5.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_5.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - DR_RIM_ON
          - LIGHTPROBE_SH
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout
            highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3
            vs_TEXCOORD3;\nout highp vec3 vs_TEXCOORD4;\nout mediump vec3 vs_TEXCOORD5;\nout
            highp vec4 vs_TEXCOORD7;\nout highp vec4 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD3.xyz = _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = in_NORMAL0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_NORMAL0.xxx + u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat1.xyz;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n   
            u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 =
            u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD8 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_OrthoParams;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _ColorDim;\nuniform \tmediump vec4 _FlatRimColor;\nuniform
            \tfloat _FlatRimSize;\nuniform \tfloat _FlatRimEdgeSmoothness;\nuniform
            \tfloat _FlatRimLightAlign;\nuniform \tmediump float _SelfShadingSize;\nuniform
            \tmediump float _ShadowEdgeSize;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _Flatness;\nuniform \tmediump float _TextureImpact;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _BumpMap;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _MainTex;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin
            highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nin highp vec3
            vs_TEXCOORD4;\nin mediump vec3 vs_TEXCOORD5;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec2 u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nvec3
            u_xlat8;\nmediump vec3 u_xlat16_10;\nmediump float u_xlat16_16;\nfloat
            u_xlat18;\nmediump float u_xlat16_19;\nvoid main()\n{\n    u_xlat16_0.xy
            = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_19 = dot(u_xlat16_1.xy,
            u_xlat16_1.xy);\n    u_xlat16_19 = min(u_xlat16_19, 1.0);\n    u_xlat16_19
            = (-u_xlat16_19) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_19);\n    u_xlat0.x
            = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat0.xyz = vec3(u_xlat18) * u_xlat0.xyz;\n    u_xlat2.x = hlslcc_mtx4x4unity_WorldToObject[0].z;\n   
            u_xlat2.y = hlslcc_mtx4x4unity_WorldToObject[1].z;\n    u_xlat2.z = hlslcc_mtx4x4unity_WorldToObject[2].z;\n   
            u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat2.xyz = vec3(u_xlat18) * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yzx
            * u_xlat2.zxy;\n    u_xlat1.xyz = u_xlat2.yzx * u_xlat0.zxy + (-u_xlat3.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat1.w = u_xlat0.x
            + 1.0;\n    u_xlat0.x = u_xlat1.w + u_xlat1.w;\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0 = u_xlat1 / u_xlat0.xxxx;\n    u_xlat2.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = u_xlat0.w * u_xlat0.w + (-u_xlat2.x);\n    u_xlat8.x = dot(u_xlat0.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat1 = u_xlat0 + u_xlat0;\n    u_xlat8.xyz
            = u_xlat8.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = vs_TEXCOORD4.xyz * u_xlat2.xxx
            + u_xlat8.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * vs_TEXCOORD4.yzx;\n   
            u_xlat0.xyz = u_xlat0.yzx * vs_TEXCOORD4.zxy + (-u_xlat3.xyz);\n    u_xlat0.xyz
            = u_xlat1.www * u_xlat0.xyz + u_xlat2.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat0.xyz
            = vec3(u_xlat18) * u_xlat0.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2.xyz = vec3(u_xlat18) *
            u_xlat2.xyz;\n    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;\n    u_xlat3.y
            = hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;\n   
            u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat3.xyz = u_xlat3.xyz * vec3(u_xlat18) + (-u_xlat2.xyz);\n    u_xlat2.xyz
            = unity_OrthoParams.www * u_xlat3.xyz + u_xlat2.xyz;\n    u_xlat16_4.x
            = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat16_10.x = dot(u_xlat0.xyz,
            vs_TEXCOORD3.xyz);\n    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;\n    u_xlat0.x
            = (-_FlatRimSize) + 1.0;\n    u_xlat0.x = (-u_xlat16_10.x) * _FlatRimLightAlign
            + u_xlat0.x;\n    u_xlat16_10.x = u_xlat16_10.x * 0.5 + 0.5;\n    u_xlat16_10.x
            = u_xlat16_10.x + (-_SelfShadingSize);\n    u_xlat16_10.x = clamp(u_xlat16_10.x,
            0.0, 1.0);\n    u_xlat6.x = (-_FlatRimEdgeSmoothness) * 0.5 + u_xlat0.x;\n   
            u_xlat0.x = _FlatRimEdgeSmoothness * 0.5 + u_xlat0.x;\n    u_xlat0.x
            = (-u_xlat6.x) + u_xlat0.x;\n    u_xlat6.x = (-u_xlat6.x) + u_xlat16_4.x;\n   
            u_xlat0.x = float(1.0) / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat6.x;\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat6.x = u_xlat0.x *
            -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x =
            u_xlat0.x * u_xlat6.x;\n    u_xlat16_4.x = float(1.0) / _ShadowEdgeSize;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x,
            0.0, 1.0);\n    u_xlat16_16 = u_xlat16_4.x * -2.0 + 3.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_16 * u_xlat16_4.x
            + (-u_xlat16_10.x);\n    u_xlat16_4.x = _Flatness * u_xlat16_4.x + u_xlat16_10.x;\n   
            u_xlat16_10.xyz = _Color.xyz + (-_ColorDim.xyz);\n    u_xlat16_4.xyz
            = u_xlat16_4.xxx * u_xlat16_10.xyz + _ColorDim.xyz;\n    u_xlat6.xyz
            = (-u_xlat16_4.xyz) + _FlatRimColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx
            * u_xlat6.xyz + u_xlat16_4.xyz;\n    u_xlat16_2.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat2.xyz = u_xlat16_2.xyz + vec3(-1.0,
            -1.0, -1.0);\n    u_xlat2.xyz = vec3(vec3(_TextureImpact, _TextureImpact,
            _TextureImpact)) * u_xlat2.xyz + vec3(1.0, 1.0, 1.0);\n    u_xlat0.xyz
            = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat1.xyz = vs_TEXCOORD1.xyz;\n   
            u_xlat1.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y
            = dot(unity_SHAg, u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz
            = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_4.xyz);\n   
            u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat2.xyz = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_4.xyz
            = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat16_5.xyz = _LightColor0.xyz +
            vec3(-1.0, -1.0, -1.0);\n    u_xlat16_5.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_5.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_5.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - DR_RIM_ON
          - LIGHTPROBE_SH
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute
            highp vec4 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp
            vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3
            vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying mediump vec3
            vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec4 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD3.xyz = _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = in_NORMAL0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_NORMAL0.xxx + u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat1.xyz;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n   
            u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 =
            u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD8 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4
            unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4
            _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float
            _LightContribution;\nuniform \tmediump float _TextureImpact;\nuniform
            lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp
            vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nlowp
            vec3 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat0.xyz
            = vs_TEXCOORD1.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_1.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_1.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz
            = log2(u_xlat16_1.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat0.xyz = exp2(u_xlat0.xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat0.xyz
            = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat10_2.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat2.xyz = u_xlat10_2.xyz + vec3(-1.0,
            -1.0, -1.0);\n    u_xlat2.xyz = vec3(vec3(_TextureImpact, _TextureImpact,
            _TextureImpact)) * u_xlat2.xyz + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz
            = u_xlat2.xyz * _Color.xyz;\n    u_xlat16_1.xyz = u_xlat0.xyz * u_xlat2.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_3.xyz
            = vec3(vec3(_LightContribution, _LightContribution, _LightContribution))
            * u_xlat16_3.xyz + vec3(1.0, 1.0, 1.0);\n    SV_Target0.xyz = u_xlat2.xyz
            * u_xlat16_3.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec4 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nout
            highp vec3 vs_TEXCOORD4;\nout mediump vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec4 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump vec4
            u_xlat16_0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD3.xyz = _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = in_NORMAL0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_NORMAL0.xxx + u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat1.xyz;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n   
            u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 =
            u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD8 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump
            vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _LightContribution;\nuniform \tmediump float _TextureImpact;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_1;\nvec3
            u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n   
            u_xlat0.xyz = vs_TEXCOORD1.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_1.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_1.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_1.xyz = u_xlat16_1.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_1.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_2.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat2.xyz = u_xlat16_2.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat2.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat2.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat2.xyz = u_xlat2.xyz * _Color.xyz;\n    u_xlat16_1.xyz = u_xlat0.xyz
            * u_xlat2.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz + vec3(-1.0, -1.0,
            -1.0);\n    u_xlat16_3.xyz = vec3(vec3(_LightContribution, _LightContribution,
            _LightContribution)) * u_xlat16_3.xyz + vec3(1.0, 1.0, 1.0);\n    SV_Target0.xyz
            = u_xlat2.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp
            vec4 vs_TEXCOORD7;\nvarying highp vec4 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD8 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _ColorDim;\nuniform \tmediump float _SelfShadingSize;\nuniform
            \tmediump float _ShadowEdgeSize;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _Flatness;\nuniform \tmediump float _TextureImpact;\nuniform
            lowp sampler2D _BumpMap;\nuniform lowp sampler2D _MainTex;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat7;\nmediump vec3 u_xlat16_9;\nmediump
            float u_xlat16_14;\nfloat u_xlat15;\nmediump float u_xlat16_16;\nvoid
            main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n   
            u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_16 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_16 = min(u_xlat16_16,
            1.0);\n    u_xlat16_16 = (-u_xlat16_16) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_16);\n   
            u_xlat0.x = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat2.x = hlslcc_mtx4x4unity_WorldToObject[0].z;\n   
            u_xlat2.y = hlslcc_mtx4x4unity_WorldToObject[1].z;\n    u_xlat2.z = hlslcc_mtx4x4unity_WorldToObject[2].z;\n   
            u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yzx
            * u_xlat2.zxy;\n    u_xlat1.xyz = u_xlat2.yzx * u_xlat0.zxy + (-u_xlat3.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat1.w = u_xlat0.x
            + 1.0;\n    u_xlat0.x = u_xlat1.w + u_xlat1.w;\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0 = u_xlat1 / u_xlat0.xxxx;\n    u_xlat2.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = u_xlat0.w * u_xlat0.w + (-u_xlat2.x);\n    u_xlat7.x = dot(u_xlat0.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat1 = u_xlat0 + u_xlat0;\n    u_xlat7.xyz
            = u_xlat7.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = vs_TEXCOORD4.xyz * u_xlat2.xxx
            + u_xlat7.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * vs_TEXCOORD4.yzx;\n   
            u_xlat0.xyz = u_xlat0.yzx * vs_TEXCOORD4.zxy + (-u_xlat3.xyz);\n    u_xlat0.xyz
            = u_xlat1.www * u_xlat0.xyz + u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat16_4.x = dot(u_xlat0.xyz,
            vs_TEXCOORD3.xyz);\n    u_xlat16_4.x = u_xlat16_4.x * 0.5 + 0.5;\n   
            u_xlat16_4.x = u_xlat16_4.x + (-_SelfShadingSize);\n    u_xlat16_4.x
            = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_9.x = float(1.0) / _ShadowEdgeSize;\n   
            u_xlat16_9.x = u_xlat16_9.x * u_xlat16_4.x;\n    u_xlat16_9.x = clamp(u_xlat16_9.x,
            0.0, 1.0);\n    u_xlat16_14 = u_xlat16_9.x * -2.0 + 3.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * u_xlat16_9.x;\n    u_xlat16_9.x = u_xlat16_14 * u_xlat16_9.x
            + (-u_xlat16_4.x);\n    u_xlat16_4.x = _Flatness * u_xlat16_9.x + u_xlat16_4.x;\n   
            u_xlat16_9.xyz = _Color.xyz + (-_ColorDim.xyz);\n    u_xlat16_4.xyz =
            u_xlat16_4.xxx * u_xlat16_9.xyz + _ColorDim.xyz;\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat0.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat0.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    u_xlat16_4.xyz = _LightColor0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_4.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_4.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout
            highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3
            vs_TEXCOORD3;\nout highp vec3 vs_TEXCOORD4;\nout highp vec4 vs_TEXCOORD7;\nout
            highp vec4 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD8 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _ColorDim;\nuniform \tmediump float _SelfShadingSize;\nuniform
            \tmediump float _ShadowEdgeSize;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _Flatness;\nuniform \tmediump float _TextureImpact;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _BumpMap;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _MainTex;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD3;\nin
            highp vec3 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3
            u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat7;\nmediump
            vec3 u_xlat16_9;\nmediump float u_xlat16_14;\nfloat u_xlat15;\nmediump
            float u_xlat16_16;\nvoid main()\n{\n    u_xlat16_0.xy = texture(_BumpMap,
            vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0)
            + vec2(-1.0, -1.0);\n    u_xlat16_16 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n   
            u_xlat16_16 = min(u_xlat16_16, 1.0);\n    u_xlat16_16 = (-u_xlat16_16)
            + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_16);\n    u_xlat0.x = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat2.x = hlslcc_mtx4x4unity_WorldToObject[0].z;\n   
            u_xlat2.y = hlslcc_mtx4x4unity_WorldToObject[1].z;\n    u_xlat2.z = hlslcc_mtx4x4unity_WorldToObject[2].z;\n   
            u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yzx
            * u_xlat2.zxy;\n    u_xlat1.xyz = u_xlat2.yzx * u_xlat0.zxy + (-u_xlat3.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat1.w = u_xlat0.x
            + 1.0;\n    u_xlat0.x = u_xlat1.w + u_xlat1.w;\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0 = u_xlat1 / u_xlat0.xxxx;\n    u_xlat2.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = u_xlat0.w * u_xlat0.w + (-u_xlat2.x);\n    u_xlat7.x = dot(u_xlat0.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat1 = u_xlat0 + u_xlat0;\n    u_xlat7.xyz
            = u_xlat7.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = vs_TEXCOORD4.xyz * u_xlat2.xxx
            + u_xlat7.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * vs_TEXCOORD4.yzx;\n   
            u_xlat0.xyz = u_xlat0.yzx * vs_TEXCOORD4.zxy + (-u_xlat3.xyz);\n    u_xlat0.xyz
            = u_xlat1.www * u_xlat0.xyz + u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat16_4.x = dot(u_xlat0.xyz,
            vs_TEXCOORD3.xyz);\n    u_xlat16_4.x = u_xlat16_4.x * 0.5 + 0.5;\n   
            u_xlat16_4.x = u_xlat16_4.x + (-_SelfShadingSize);\n    u_xlat16_4.x
            = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_9.x = float(1.0) / _ShadowEdgeSize;\n   
            u_xlat16_9.x = u_xlat16_9.x * u_xlat16_4.x;\n    u_xlat16_9.x = clamp(u_xlat16_9.x,
            0.0, 1.0);\n    u_xlat16_14 = u_xlat16_9.x * -2.0 + 3.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * u_xlat16_9.x;\n    u_xlat16_9.x = u_xlat16_14 * u_xlat16_9.x
            + (-u_xlat16_4.x);\n    u_xlat16_4.x = _Flatness * u_xlat16_9.x + u_xlat16_4.x;\n   
            u_xlat16_9.xyz = _Color.xyz + (-_ColorDim.xyz);\n    u_xlat16_4.xyz =
            u_xlat16_4.xxx * u_xlat16_9.xyz + _ColorDim.xyz;\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat0.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat0.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    u_xlat16_4.xyz = _LightColor0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_4.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_4.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp
            vec4 vs_TEXCOORD7;\nvarying highp vec4 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD8 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_OrthoParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _ColorDim;\nuniform \tmediump vec4 _FlatRimColor;\nuniform
            \tfloat _FlatRimSize;\nuniform \tfloat _FlatRimEdgeSmoothness;\nuniform
            \tfloat _FlatRimLightAlign;\nuniform \tmediump float _SelfShadingSize;\nuniform
            \tmediump float _ShadowEdgeSize;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _Flatness;\nuniform \tmediump float _TextureImpact;\nuniform
            lowp sampler2D _BumpMap;\nuniform lowp sampler2D _MainTex;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3
            vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4
            u_xlat0;\nlowp vec2 u_xlat10_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3
            u_xlat2;\nlowp vec3 u_xlat10_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nvec3 u_xlat7;\nmediump vec3 u_xlat16_9;\nmediump float u_xlat16_14;\nfloat
            u_xlat15;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat10_0.xy
            = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_16 = dot(u_xlat16_1.xy,
            u_xlat16_1.xy);\n    u_xlat16_16 = min(u_xlat16_16, 1.0);\n    u_xlat16_16
            = (-u_xlat16_16) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_16);\n    u_xlat0.x
            = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat2.x = hlslcc_mtx4x4unity_WorldToObject[0].z;\n   
            u_xlat2.y = hlslcc_mtx4x4unity_WorldToObject[1].z;\n    u_xlat2.z = hlslcc_mtx4x4unity_WorldToObject[2].z;\n   
            u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yzx
            * u_xlat2.zxy;\n    u_xlat1.xyz = u_xlat2.yzx * u_xlat0.zxy + (-u_xlat3.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat1.w = u_xlat0.x
            + 1.0;\n    u_xlat0.x = u_xlat1.w + u_xlat1.w;\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0 = u_xlat1 / u_xlat0.xxxx;\n    u_xlat2.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = u_xlat0.w * u_xlat0.w + (-u_xlat2.x);\n    u_xlat7.x = dot(u_xlat0.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat1 = u_xlat0 + u_xlat0;\n    u_xlat7.xyz
            = u_xlat7.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = vs_TEXCOORD4.xyz * u_xlat2.xxx
            + u_xlat7.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * vs_TEXCOORD4.yzx;\n   
            u_xlat0.xyz = u_xlat0.yzx * vs_TEXCOORD4.zxy + (-u_xlat3.xyz);\n    u_xlat0.xyz
            = u_xlat1.www * u_xlat0.xyz + u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz = vec3(u_xlat15) *
            u_xlat2.xyz;\n    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;\n    u_xlat3.y
            = hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;\n   
            u_xlat15 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat3.xyz = u_xlat3.xyz * vec3(u_xlat15) + (-u_xlat2.xyz);\n    u_xlat2.xyz
            = unity_OrthoParams.www * u_xlat3.xyz + u_xlat2.xyz;\n    u_xlat16_4.x
            = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat16_9.x = dot(u_xlat0.xyz,
            vs_TEXCOORD3.xyz);\n    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;\n    u_xlat0.x
            = (-_FlatRimSize) + 1.0;\n    u_xlat0.x = (-u_xlat16_9.x) * _FlatRimLightAlign
            + u_xlat0.x;\n    u_xlat16_9.x = u_xlat16_9.x * 0.5 + 0.5;\n    u_xlat16_9.x
            = u_xlat16_9.x + (-_SelfShadingSize);\n    u_xlat16_9.x = clamp(u_xlat16_9.x,
            0.0, 1.0);\n    u_xlat5.x = (-_FlatRimEdgeSmoothness) * 0.5 + u_xlat0.x;\n   
            u_xlat0.x = _FlatRimEdgeSmoothness * 0.5 + u_xlat0.x;\n    u_xlat0.x
            = (-u_xlat5.x) + u_xlat0.x;\n    u_xlat5.x = (-u_xlat5.x) + u_xlat16_4.x;\n   
            u_xlat0.x = float(1.0) / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat5.x;\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat5.x = u_xlat0.x *
            -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x =
            u_xlat0.x * u_xlat5.x;\n    u_xlat16_4.x = float(1.0) / _ShadowEdgeSize;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_9.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x,
            0.0, 1.0);\n    u_xlat16_14 = u_xlat16_4.x * -2.0 + 3.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_14 * u_xlat16_4.x
            + (-u_xlat16_9.x);\n    u_xlat16_4.x = _Flatness * u_xlat16_4.x + u_xlat16_9.x;\n   
            u_xlat16_9.xyz = _Color.xyz + (-_ColorDim.xyz);\n    u_xlat16_4.xyz =
            u_xlat16_4.xxx * u_xlat16_9.xyz + _ColorDim.xyz;\n    u_xlat5.xyz = (-u_xlat16_4.xyz)
            + _FlatRimColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz + u_xlat16_4.xyz;\n   
            u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat2.xyz
            = u_xlat10_2.xyz + vec3(-1.0, -1.0, -1.0);\n    u_xlat2.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat2.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat16_4.xyz = _LightColor0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_4.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_4.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - DR_RIM_ON
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout
            highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3
            vs_TEXCOORD3;\nout highp vec3 vs_TEXCOORD4;\nout highp vec4 vs_TEXCOORD7;\nout
            highp vec4 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD8 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _ColorDim;\nuniform \tmediump
            vec4 _FlatRimColor;\nuniform \tfloat _FlatRimSize;\nuniform \tfloat _FlatRimEdgeSmoothness;\nuniform
            \tfloat _FlatRimLightAlign;\nuniform \tmediump float _SelfShadingSize;\nuniform
            \tmediump float _ShadowEdgeSize;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _Flatness;\nuniform \tmediump float _TextureImpact;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _BumpMap;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _MainTex;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD2;\nin
            highp vec3 vs_TEXCOORD3;\nin highp vec3 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec2 u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nvec3 u_xlat7;\nmediump
            vec3 u_xlat16_9;\nmediump float u_xlat16_14;\nfloat u_xlat15;\nmediump
            float u_xlat16_16;\nvoid main()\n{\n    u_xlat16_0.xy = texture(_BumpMap,
            vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0)
            + vec2(-1.0, -1.0);\n    u_xlat16_16 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n   
            u_xlat16_16 = min(u_xlat16_16, 1.0);\n    u_xlat16_16 = (-u_xlat16_16)
            + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_16);\n    u_xlat0.x = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat2.x = hlslcc_mtx4x4unity_WorldToObject[0].z;\n   
            u_xlat2.y = hlslcc_mtx4x4unity_WorldToObject[1].z;\n    u_xlat2.z = hlslcc_mtx4x4unity_WorldToObject[2].z;\n   
            u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yzx
            * u_xlat2.zxy;\n    u_xlat1.xyz = u_xlat2.yzx * u_xlat0.zxy + (-u_xlat3.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat1.w = u_xlat0.x
            + 1.0;\n    u_xlat0.x = u_xlat1.w + u_xlat1.w;\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0 = u_xlat1 / u_xlat0.xxxx;\n    u_xlat2.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = u_xlat0.w * u_xlat0.w + (-u_xlat2.x);\n    u_xlat7.x = dot(u_xlat0.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat1 = u_xlat0 + u_xlat0;\n    u_xlat7.xyz
            = u_xlat7.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = vs_TEXCOORD4.xyz * u_xlat2.xxx
            + u_xlat7.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * vs_TEXCOORD4.yzx;\n   
            u_xlat0.xyz = u_xlat0.yzx * vs_TEXCOORD4.zxy + (-u_xlat3.xyz);\n    u_xlat0.xyz
            = u_xlat1.www * u_xlat0.xyz + u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz = vec3(u_xlat15) *
            u_xlat2.xyz;\n    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;\n    u_xlat3.y
            = hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;\n   
            u_xlat15 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat3.xyz = u_xlat3.xyz * vec3(u_xlat15) + (-u_xlat2.xyz);\n    u_xlat2.xyz
            = unity_OrthoParams.www * u_xlat3.xyz + u_xlat2.xyz;\n    u_xlat16_4.x
            = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat16_9.x = dot(u_xlat0.xyz,
            vs_TEXCOORD3.xyz);\n    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;\n    u_xlat0.x
            = (-_FlatRimSize) + 1.0;\n    u_xlat0.x = (-u_xlat16_9.x) * _FlatRimLightAlign
            + u_xlat0.x;\n    u_xlat16_9.x = u_xlat16_9.x * 0.5 + 0.5;\n    u_xlat16_9.x
            = u_xlat16_9.x + (-_SelfShadingSize);\n    u_xlat16_9.x = clamp(u_xlat16_9.x,
            0.0, 1.0);\n    u_xlat5.x = (-_FlatRimEdgeSmoothness) * 0.5 + u_xlat0.x;\n   
            u_xlat0.x = _FlatRimEdgeSmoothness * 0.5 + u_xlat0.x;\n    u_xlat0.x
            = (-u_xlat5.x) + u_xlat0.x;\n    u_xlat5.x = (-u_xlat5.x) + u_xlat16_4.x;\n   
            u_xlat0.x = float(1.0) / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat5.x;\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat5.x = u_xlat0.x *
            -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x =
            u_xlat0.x * u_xlat5.x;\n    u_xlat16_4.x = float(1.0) / _ShadowEdgeSize;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_9.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x,
            0.0, 1.0);\n    u_xlat16_14 = u_xlat16_4.x * -2.0 + 3.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_14 * u_xlat16_4.x
            + (-u_xlat16_9.x);\n    u_xlat16_4.x = _Flatness * u_xlat16_4.x + u_xlat16_9.x;\n   
            u_xlat16_9.xyz = _Color.xyz + (-_ColorDim.xyz);\n    u_xlat16_4.xyz =
            u_xlat16_4.xxx * u_xlat16_9.xyz + _ColorDim.xyz;\n    u_xlat5.xyz = (-u_xlat16_4.xyz)
            + _FlatRimColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz + u_xlat16_4.xyz;\n   
            u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat2.xyz
            = u_xlat16_2.xyz + vec3(-1.0, -1.0, -1.0);\n    u_xlat2.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat2.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat16_4.xyz = _LightColor0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_4.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_4.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - DR_RIM_ON
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DR_CEL_EXTRA_ON
        - DR_GRADIENT_ON
        - DR_RIM_ON
        - DR_SPECULAR_ON
        - DR_VERTEX_COLORS_ON
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - _CELPRIMARYMODE_CURVE
        - _CELPRIMARYMODE_SINGLE
        - _CELPRIMARYMODE_STEPS
        - _TEXTUREBLENDINGMODE_ADD
        - _TEXTUREBLENDINGMODE_MULTIPLY
        - _UNITYSHADOWMODE_COLOR
        - _UNITYSHADOWMODE_MULTIPLY
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - __
          - _CELPRIMARYMODE_SINGLE
          - _CELPRIMARYMODE_STEPS
          - _CELPRIMARYMODE_CURVE
          hasDiscard: 1
        - Keywords:
          - _
          - DR_CEL_EXTRA_ON
          hasDiscard: 1
        - Keywords:
          - _
          - DR_GRADIENT_ON
          hasDiscard: 1
        - Keywords:
          - _
          - DR_SPECULAR_ON
          hasDiscard: 1
        - Keywords:
          - _
          - DR_RIM_ON
          hasDiscard: 1
        - Keywords:
          - _
          - DR_VERTEX_COLORS_ON
          hasDiscard: 1
        - Keywords:
          - __
          - _UNITYSHADOWMODE_MULTIPLY
          - _UNITYSHADOWMODE_COLOR
          hasDiscard: 1
        - Keywords:
          - _TEXTUREBLENDINGMODE_MULTIPLY
          - _TEXTUREBLENDINGMODE_ADD
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 84
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - DR_RIM_ON
          - LIGHTPROBE_SH
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - DR_RIM_ON
          - LIGHTPROBE_SH
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - DR_RIM_ON
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - DR_RIM_ON
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp
            vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _ColorDim;\nuniform \tmediump float _SelfShadingSize;\nuniform
            \tmediump float _ShadowEdgeSize;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _Flatness;\nuniform \tmediump float _TextureImpact;\nuniform
            lowp sampler2D _BumpMap;\nuniform lowp sampler2D _MainTex;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat7;\nmediump vec3 u_xlat16_9;\nmediump
            float u_xlat16_14;\nfloat u_xlat15;\nmediump float u_xlat16_16;\nvoid
            main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n   
            u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_16 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_16 = min(u_xlat16_16,
            1.0);\n    u_xlat16_16 = (-u_xlat16_16) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_16);\n   
            u_xlat0.x = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat2.x = hlslcc_mtx4x4unity_WorldToObject[0].z;\n   
            u_xlat2.y = hlslcc_mtx4x4unity_WorldToObject[1].z;\n    u_xlat2.z = hlslcc_mtx4x4unity_WorldToObject[2].z;\n   
            u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yzx
            * u_xlat2.zxy;\n    u_xlat1.xyz = u_xlat2.yzx * u_xlat0.zxy + (-u_xlat3.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat1.w = u_xlat0.x
            + 1.0;\n    u_xlat0.x = u_xlat1.w + u_xlat1.w;\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0 = u_xlat1 / u_xlat0.xxxx;\n    u_xlat2.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = u_xlat0.w * u_xlat0.w + (-u_xlat2.x);\n    u_xlat7.x = dot(u_xlat0.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat1 = u_xlat0 + u_xlat0;\n    u_xlat7.xyz
            = u_xlat7.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = vs_TEXCOORD4.xyz * u_xlat2.xxx
            + u_xlat7.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * vs_TEXCOORD4.yzx;\n   
            u_xlat0.xyz = u_xlat0.yzx * vs_TEXCOORD4.zxy + (-u_xlat3.xyz);\n    u_xlat0.xyz
            = u_xlat1.www * u_xlat0.xyz + u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat16_4.x = dot(u_xlat0.xyz,
            vs_TEXCOORD3.xyz);\n    u_xlat16_4.x = u_xlat16_4.x * 0.5 + 0.5;\n   
            u_xlat16_4.x = u_xlat16_4.x + (-_SelfShadingSize);\n    u_xlat16_4.x
            = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_9.x = float(1.0) / _ShadowEdgeSize;\n   
            u_xlat16_9.x = u_xlat16_9.x * u_xlat16_4.x;\n    u_xlat16_9.x = clamp(u_xlat16_9.x,
            0.0, 1.0);\n    u_xlat16_14 = u_xlat16_9.x * -2.0 + 3.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * u_xlat16_9.x;\n    u_xlat16_9.x = u_xlat16_14 * u_xlat16_9.x
            + (-u_xlat16_4.x);\n    u_xlat16_4.x = _Flatness * u_xlat16_9.x + u_xlat16_4.x;\n   
            u_xlat16_9.xyz = _Color.xyz + (-_ColorDim.xyz);\n    u_xlat16_4.xyz =
            u_xlat16_4.xxx * u_xlat16_9.xyz + _ColorDim.xyz;\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat0.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat0.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    u_xlat16_4.xyz = _LightColor0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_4.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_4.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout
            highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3
            vs_TEXCOORD3;\nout highp vec3 vs_TEXCOORD4;\nout highp vec4 vs_TEXCOORD6;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _ColorDim;\nuniform \tmediump float _SelfShadingSize;\nuniform
            \tmediump float _ShadowEdgeSize;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _Flatness;\nuniform \tmediump float _TextureImpact;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _BumpMap;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _MainTex;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD3;\nin
            highp vec3 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3
            u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat7;\nmediump
            vec3 u_xlat16_9;\nmediump float u_xlat16_14;\nfloat u_xlat15;\nmediump
            float u_xlat16_16;\nvoid main()\n{\n    u_xlat16_0.xy = texture(_BumpMap,
            vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0)
            + vec2(-1.0, -1.0);\n    u_xlat16_16 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n   
            u_xlat16_16 = min(u_xlat16_16, 1.0);\n    u_xlat16_16 = (-u_xlat16_16)
            + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_16);\n    u_xlat0.x = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat2.x = hlslcc_mtx4x4unity_WorldToObject[0].z;\n   
            u_xlat2.y = hlslcc_mtx4x4unity_WorldToObject[1].z;\n    u_xlat2.z = hlslcc_mtx4x4unity_WorldToObject[2].z;\n   
            u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yzx
            * u_xlat2.zxy;\n    u_xlat1.xyz = u_xlat2.yzx * u_xlat0.zxy + (-u_xlat3.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat1.w = u_xlat0.x
            + 1.0;\n    u_xlat0.x = u_xlat1.w + u_xlat1.w;\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0 = u_xlat1 / u_xlat0.xxxx;\n    u_xlat2.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = u_xlat0.w * u_xlat0.w + (-u_xlat2.x);\n    u_xlat7.x = dot(u_xlat0.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat1 = u_xlat0 + u_xlat0;\n    u_xlat7.xyz
            = u_xlat7.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = vs_TEXCOORD4.xyz * u_xlat2.xxx
            + u_xlat7.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * vs_TEXCOORD4.yzx;\n   
            u_xlat0.xyz = u_xlat0.yzx * vs_TEXCOORD4.zxy + (-u_xlat3.xyz);\n    u_xlat0.xyz
            = u_xlat1.www * u_xlat0.xyz + u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat16_4.x = dot(u_xlat0.xyz,
            vs_TEXCOORD3.xyz);\n    u_xlat16_4.x = u_xlat16_4.x * 0.5 + 0.5;\n   
            u_xlat16_4.x = u_xlat16_4.x + (-_SelfShadingSize);\n    u_xlat16_4.x
            = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_9.x = float(1.0) / _ShadowEdgeSize;\n   
            u_xlat16_9.x = u_xlat16_9.x * u_xlat16_4.x;\n    u_xlat16_9.x = clamp(u_xlat16_9.x,
            0.0, 1.0);\n    u_xlat16_14 = u_xlat16_9.x * -2.0 + 3.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * u_xlat16_9.x;\n    u_xlat16_9.x = u_xlat16_14 * u_xlat16_9.x
            + (-u_xlat16_4.x);\n    u_xlat16_4.x = _Flatness * u_xlat16_9.x + u_xlat16_4.x;\n   
            u_xlat16_9.xyz = _Color.xyz + (-_ColorDim.xyz);\n    u_xlat16_4.xyz =
            u_xlat16_4.xxx * u_xlat16_9.xyz + _ColorDim.xyz;\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat0.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat0.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    u_xlat16_4.xyz = _LightColor0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_4.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_4.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp
            vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_OrthoParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _ColorDim;\nuniform \tmediump vec4 _FlatRimColor;\nuniform
            \tfloat _FlatRimSize;\nuniform \tfloat _FlatRimEdgeSmoothness;\nuniform
            \tfloat _FlatRimLightAlign;\nuniform \tmediump float _SelfShadingSize;\nuniform
            \tmediump float _ShadowEdgeSize;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _Flatness;\nuniform \tmediump float _TextureImpact;\nuniform
            lowp sampler2D _BumpMap;\nuniform lowp sampler2D _MainTex;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3
            vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4
            u_xlat0;\nlowp vec2 u_xlat10_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3
            u_xlat2;\nlowp vec3 u_xlat10_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nvec3 u_xlat7;\nmediump vec3 u_xlat16_9;\nmediump float u_xlat16_14;\nfloat
            u_xlat15;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat10_0.xy
            = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_16 = dot(u_xlat16_1.xy,
            u_xlat16_1.xy);\n    u_xlat16_16 = min(u_xlat16_16, 1.0);\n    u_xlat16_16
            = (-u_xlat16_16) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_16);\n    u_xlat0.x
            = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(u_xlat16_1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat2.x = hlslcc_mtx4x4unity_WorldToObject[0].z;\n   
            u_xlat2.y = hlslcc_mtx4x4unity_WorldToObject[1].z;\n    u_xlat2.z = hlslcc_mtx4x4unity_WorldToObject[2].z;\n   
            u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yzx
            * u_xlat2.zxy;\n    u_xlat1.xyz = u_xlat2.yzx * u_xlat0.zxy + (-u_xlat3.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat1.w = u_xlat0.x
            + 1.0;\n    u_xlat0.x = u_xlat1.w + u_xlat1.w;\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0 = u_xlat1 / u_xlat0.xxxx;\n    u_xlat2.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = u_xlat0.w * u_xlat0.w + (-u_xlat2.x);\n    u_xlat7.x = dot(u_xlat0.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat1 = u_xlat0 + u_xlat0;\n    u_xlat7.xyz
            = u_xlat7.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = vs_TEXCOORD4.xyz * u_xlat2.xxx
            + u_xlat7.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * vs_TEXCOORD4.yzx;\n   
            u_xlat0.xyz = u_xlat0.yzx * vs_TEXCOORD4.zxy + (-u_xlat3.xyz);\n    u_xlat0.xyz
            = u_xlat1.www * u_xlat0.xyz + u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz = vec3(u_xlat15) *
            u_xlat2.xyz;\n    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;\n    u_xlat3.y
            = hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;\n   
            u_xlat15 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat3.xyz = u_xlat3.xyz * vec3(u_xlat15) + (-u_xlat2.xyz);\n    u_xlat2.xyz
            = unity_OrthoParams.www * u_xlat3.xyz + u_xlat2.xyz;\n    u_xlat16_4.x
            = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat16_9.x = dot(u_xlat0.xyz,
            vs_TEXCOORD3.xyz);\n    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;\n    u_xlat0.x
            = (-_FlatRimSize) + 1.0;\n    u_xlat0.x = (-u_xlat16_9.x) * _FlatRimLightAlign
            + u_xlat0.x;\n    u_xlat16_9.x = u_xlat16_9.x * 0.5 + 0.5;\n    u_xlat16_9.x
            = u_xlat16_9.x + (-_SelfShadingSize);\n    u_xlat16_9.x = clamp(u_xlat16_9.x,
            0.0, 1.0);\n    u_xlat5.x = (-_FlatRimEdgeSmoothness) * 0.5 + u_xlat0.x;\n   
            u_xlat0.x = _FlatRimEdgeSmoothness * 0.5 + u_xlat0.x;\n    u_xlat0.x
            = (-u_xlat5.x) + u_xlat0.x;\n    u_xlat5.x = (-u_xlat5.x) + u_xlat16_4.x;\n   
            u_xlat0.x = float(1.0) / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat5.x;\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat5.x = u_xlat0.x *
            -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x =
            u_xlat0.x * u_xlat5.x;\n    u_xlat16_4.x = float(1.0) / _ShadowEdgeSize;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_9.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x,
            0.0, 1.0);\n    u_xlat16_14 = u_xlat16_4.x * -2.0 + 3.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_14 * u_xlat16_4.x
            + (-u_xlat16_9.x);\n    u_xlat16_4.x = _Flatness * u_xlat16_4.x + u_xlat16_9.x;\n   
            u_xlat16_9.xyz = _Color.xyz + (-_ColorDim.xyz);\n    u_xlat16_4.xyz =
            u_xlat16_4.xxx * u_xlat16_9.xyz + _ColorDim.xyz;\n    u_xlat5.xyz = (-u_xlat16_4.xyz)
            + _FlatRimColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz + u_xlat16_4.xyz;\n   
            u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat2.xyz
            = u_xlat10_2.xyz + vec3(-1.0, -1.0, -1.0);\n    u_xlat2.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat2.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat16_4.xyz = _LightColor0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_4.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_4.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - DR_RIM_ON
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout
            highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3
            vs_TEXCOORD3;\nout highp vec3 vs_TEXCOORD4;\nout highp vec4 vs_TEXCOORD6;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _ColorDim;\nuniform \tmediump
            vec4 _FlatRimColor;\nuniform \tfloat _FlatRimSize;\nuniform \tfloat _FlatRimEdgeSmoothness;\nuniform
            \tfloat _FlatRimLightAlign;\nuniform \tmediump float _SelfShadingSize;\nuniform
            \tmediump float _ShadowEdgeSize;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _Flatness;\nuniform \tmediump float _TextureImpact;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _BumpMap;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _MainTex;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD2;\nin
            highp vec3 vs_TEXCOORD3;\nin highp vec3 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec2 u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nvec3 u_xlat7;\nmediump
            vec3 u_xlat16_9;\nmediump float u_xlat16_14;\nfloat u_xlat15;\nmediump
            float u_xlat16_16;\nvoid main()\n{\n    u_xlat16_0.xy = texture(_BumpMap,
            vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0)
            + vec2(-1.0, -1.0);\n    u_xlat16_16 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n   
            u_xlat16_16 = min(u_xlat16_16, 1.0);\n    u_xlat16_16 = (-u_xlat16_16)
            + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_16);\n    u_xlat0.x = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(u_xlat16_1.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat2.x = hlslcc_mtx4x4unity_WorldToObject[0].z;\n   
            u_xlat2.y = hlslcc_mtx4x4unity_WorldToObject[1].z;\n    u_xlat2.z = hlslcc_mtx4x4unity_WorldToObject[2].z;\n   
            u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yzx
            * u_xlat2.zxy;\n    u_xlat1.xyz = u_xlat2.yzx * u_xlat0.zxy + (-u_xlat3.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat1.w = u_xlat0.x
            + 1.0;\n    u_xlat0.x = u_xlat1.w + u_xlat1.w;\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0 = u_xlat1 / u_xlat0.xxxx;\n    u_xlat2.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = u_xlat0.w * u_xlat0.w + (-u_xlat2.x);\n    u_xlat7.x = dot(u_xlat0.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat1 = u_xlat0 + u_xlat0;\n    u_xlat7.xyz
            = u_xlat7.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = vs_TEXCOORD4.xyz * u_xlat2.xxx
            + u_xlat7.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * vs_TEXCOORD4.yzx;\n   
            u_xlat0.xyz = u_xlat0.yzx * vs_TEXCOORD4.zxy + (-u_xlat3.xyz);\n    u_xlat0.xyz
            = u_xlat1.www * u_xlat0.xyz + u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz = vec3(u_xlat15) *
            u_xlat2.xyz;\n    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;\n    u_xlat3.y
            = hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;\n   
            u_xlat15 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat3.xyz = u_xlat3.xyz * vec3(u_xlat15) + (-u_xlat2.xyz);\n    u_xlat2.xyz
            = unity_OrthoParams.www * u_xlat3.xyz + u_xlat2.xyz;\n    u_xlat16_4.x
            = dot(u_xlat2.xyz, u_xlat0.xyz);\n    u_xlat16_9.x = dot(u_xlat0.xyz,
            vs_TEXCOORD3.xyz);\n    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;\n    u_xlat0.x
            = (-_FlatRimSize) + 1.0;\n    u_xlat0.x = (-u_xlat16_9.x) * _FlatRimLightAlign
            + u_xlat0.x;\n    u_xlat16_9.x = u_xlat16_9.x * 0.5 + 0.5;\n    u_xlat16_9.x
            = u_xlat16_9.x + (-_SelfShadingSize);\n    u_xlat16_9.x = clamp(u_xlat16_9.x,
            0.0, 1.0);\n    u_xlat5.x = (-_FlatRimEdgeSmoothness) * 0.5 + u_xlat0.x;\n   
            u_xlat0.x = _FlatRimEdgeSmoothness * 0.5 + u_xlat0.x;\n    u_xlat0.x
            = (-u_xlat5.x) + u_xlat0.x;\n    u_xlat5.x = (-u_xlat5.x) + u_xlat16_4.x;\n   
            u_xlat0.x = float(1.0) / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat5.x;\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat5.x = u_xlat0.x *
            -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x =
            u_xlat0.x * u_xlat5.x;\n    u_xlat16_4.x = float(1.0) / _ShadowEdgeSize;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_9.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x,
            0.0, 1.0);\n    u_xlat16_14 = u_xlat16_4.x * -2.0 + 3.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_14 * u_xlat16_4.x
            + (-u_xlat16_9.x);\n    u_xlat16_4.x = _Flatness * u_xlat16_4.x + u_xlat16_9.x;\n   
            u_xlat16_9.xyz = _Color.xyz + (-_ColorDim.xyz);\n    u_xlat16_4.xyz =
            u_xlat16_4.xxx * u_xlat16_9.xyz + _ColorDim.xyz;\n    u_xlat5.xyz = (-u_xlat16_4.xyz)
            + _FlatRimColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz + u_xlat16_4.xyz;\n   
            u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat2.xyz
            = u_xlat16_2.xyz + vec3(-1.0, -1.0, -1.0);\n    u_xlat2.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat2.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat16_4.xyz = _LightColor0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_4.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_4.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - DR_RIM_ON
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute
            highp vec4 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp
            vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3
            vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD6;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _LightContribution;\nuniform \tmediump
            float _TextureImpact;\nuniform lowp sampler2D _MainTex;\nvarying highp
            vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat0.xyz = vec3(vec3(_TextureImpact,
            _TextureImpact, _TextureImpact)) * u_xlat0.xyz + vec3(1.0, 1.0, 1.0);\n   
            u_xlat0.xyz = u_xlat0.xyz * _Color.xyz;\n    u_xlat16_1.xyz = _LightColor0.xyz
            + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_1.xyz = vec3(vec3(_LightContribution,
            _LightContribution, _LightContribution)) * u_xlat16_1.xyz + vec3(1.0,
            1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec4 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nout
            highp vec3 vs_TEXCOORD4;\nout highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _LightContribution;\nuniform
            \tmediump float _TextureImpact;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin highp vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump
            vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3
            u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat16_0.xyz + vec3(-1.0, -1.0, -1.0);\n    u_xlat0.xyz
            = vec3(vec3(_TextureImpact, _TextureImpact, _TextureImpact)) * u_xlat0.xyz
            + vec3(1.0, 1.0, 1.0);\n    u_xlat0.xyz = u_xlat0.xyz * _Color.xyz;\n   
            u_xlat16_1.xyz = _LightColor0.xyz + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_1.xyz
            = vec3(vec3(_LightContribution, _LightContribution, _LightContribution))
            * u_xlat16_1.xyz + vec3(1.0, 1.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz
            * u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _TEXTUREBLENDINGMODE_MULTIPLY
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DR_CEL_EXTRA_ON
        - DR_GRADIENT_ON
        - DR_RIM_ON
        - DR_SPECULAR_ON
        - DR_VERTEX_COLORS_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_SHADOW_MIXING
        - POINT
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - SHADOWS_SOFT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _CELPRIMARYMODE_CURVE
        - _CELPRIMARYMODE_SINGLE
        - _CELPRIMARYMODE_STEPS
        - _TEXTUREBLENDINGMODE_ADD
        - _TEXTUREBLENDINGMODE_MULTIPLY
        - _UNITYSHADOWMODE_COLOR
        - _UNITYSHADOWMODE_MULTIPLY
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - __
          - _CELPRIMARYMODE_SINGLE
          - _CELPRIMARYMODE_STEPS
          - _CELPRIMARYMODE_CURVE
          hasDiscard: 1
        - Keywords:
          - _
          - DR_CEL_EXTRA_ON
          hasDiscard: 1
        - Keywords:
          - _
          - DR_GRADIENT_ON
          hasDiscard: 1
        - Keywords:
          - _
          - DR_SPECULAR_ON
          hasDiscard: 1
        - Keywords:
          - _
          - DR_RIM_ON
          hasDiscard: 1
        - Keywords:
          - _
          - DR_VERTEX_COLORS_ON
          hasDiscard: 1
        - Keywords:
          - __
          - _UNITYSHADOWMODE_MULTIPLY
          - _UNITYSHADOWMODE_COLOR
          hasDiscard: 1
        - Keywords:
          - _TEXTUREBLENDINGMODE_MULTIPLY
          - _TEXTUREBLENDINGMODE_ADD
          hasDiscard: 0
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 30
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - DR_RIM_ON
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - DR_RIM_ON
          - _CELPRIMARYMODE_SINGLE
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _TEXTUREBLENDINGMODE_MULTIPLY
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _TEXTUREBLENDINGMODE_MULTIPLY
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump float _OutlineWidth;\nuniform \tmediump float _OutlineDepthOffset;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nvec3 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0.xyz = in_NORMAL0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_NORMAL0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    u_xlat3.xz = u_xlat0.yy * hlslcc_mtx4x4unity_MatrixVP[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4unity_MatrixVP[0].xy * u_xlat0.xx + u_xlat3.xz;\n   
            u_xlat0.xy = hlslcc_mtx4x4unity_MatrixVP[2].xy * u_xlat0.zz + u_xlat0.xy;\n   
            u_xlat6 = dot(u_xlat0.xy, u_xlat0.xy);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            u_xlat0.xy = vec2(u_xlat6) * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy
            / _ScreenParams.xy;\n    u_xlat0.xy = u_xlat0.xy * vec2(_OutlineWidth);\n   
            u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat0.xy = u_xlat0.xy * u_xlat1.ww;\n   
            gl_Position.xy = u_xlat0.xy * vec2(2.0, 2.0) + u_xlat1.xy;\n    gl_Position.z
            = u_xlat1.z + _OutlineDepthOffset;\n    gl_Position.w = u_xlat1.w;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _OutlineColor;\n#define SV_TARGET0
            gl_FragData[0]\nvoid main()\n{\n    SV_TARGET0 = _OutlineColor;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 3
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump float _OutlineWidth;\nuniform
            \tmediump float _OutlineDepthOffset;\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.xyz = in_NORMAL0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_NORMAL0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_NORMAL0.zzz + u_xlat0.xyz;\n    u_xlat3.xz = u_xlat0.yy * hlslcc_mtx4x4unity_MatrixVP[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4unity_MatrixVP[0].xy * u_xlat0.xx + u_xlat3.xz;\n   
            u_xlat0.xy = hlslcc_mtx4x4unity_MatrixVP[2].xy * u_xlat0.zz + u_xlat0.xy;\n   
            u_xlat6 = dot(u_xlat0.xy, u_xlat0.xy);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            u_xlat0.xy = vec2(u_xlat6) * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy
            / _ScreenParams.xy;\n    u_xlat0.xy = u_xlat0.xy * vec2(_OutlineWidth);\n   
            u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat0.xy = u_xlat0.xy * u_xlat1.ww;\n   
            gl_Position.xy = u_xlat0.xy * vec2(2.0, 2.0) + u_xlat1.xy;\n    gl_Position.z
            = u_xlat1.z + _OutlineDepthOffset;\n    gl_Position.w = u_xlat1.w;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _OutlineColor;\nlayout(location
            = 0) out mediump vec4 SV_TARGET0;\nvoid main()\n{\n    SV_TARGET0 = _OutlineColor;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 3
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 0
          passId: 3
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
          passType: 0
          passId: 3
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 3
        SubShaderIndex: 0
        SerializedObjectId: 3
        Tags:
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
    ShaderPath: Assets/FlatKit/Shaders/StylizedSurface/StylizedSurfaceOutline.shader
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - DR_CEL_EXTRA_ON
    - DR_GRADIENT_ON
    - DR_RIM_ON
    - DR_SPECULAR_ON
    - DR_VERTEX_COLORS_ON
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - _CELPRIMARYMODE_CURVE
    - _CELPRIMARYMODE_SINGLE
    - _CELPRIMARYMODE_STEPS
    - _TEXTUREBLENDINGMODE_ADD
    - _TEXTUREBLENDINGMODE_MULTIPLY
    - _UNITYSHADOWMODE_COLOR
    - _UNITYSHADOWMODE_MULTIPLY
    - POINT
    - SHADOWS_DEPTH
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    - _
    - SHADOWS_CUBE
    - SHADOWS_SOFT
    fallbackShader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _CELPRIMARYMODE_SINGLE
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _CELPRIMARYMODE_SINGLE
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - DR_RIM_ON
      - LIGHTPROBE_SH
      - _CELPRIMARYMODE_SINGLE
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - DR_RIM_ON
      - LIGHTPROBE_SH
      - _CELPRIMARYMODE_SINGLE
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _CELPRIMARYMODE_SINGLE
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _CELPRIMARYMODE_SINGLE
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - DR_RIM_ON
      - _CELPRIMARYMODE_SINGLE
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - DR_RIM_ON
      - _CELPRIMARYMODE_SINGLE
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _CELPRIMARYMODE_SINGLE
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _CELPRIMARYMODE_SINGLE
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - DR_RIM_ON
      - _CELPRIMARYMODE_SINGLE
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - DR_RIM_ON
      - _CELPRIMARYMODE_SINGLE
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _TEXTUREBLENDINGMODE_MULTIPLY
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 0
      passId: 3
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: f7e38193b7f064d7380403618fd8b69e, type: 3}
      passType: 0
      passId: 3
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Color;\nuniform highp sampler2D _MainTex;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvoid
            main()\n{\n    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0
            = u_xlat0 * _Color;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Color;\nUNITY_LOCATION(0) uniform
            highp sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvoid main()\n{\n   
            u_xlat0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0
            * _Color;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      Tags: []
    Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 39ef0b8c9be96494d9f8b2f2c54a28c5, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec2 in_TEXCOORD0;\nvarying
            highp vec2 vs_TEXCOORD0;\nhighp  vec4 phase0_Output0_0;\nvarying highp
            vec2 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    phase0_Output0_0 = in_TEXCOORD0.xyxy;\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y
            = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5,
            0.5, 0.5);\n    vs_TEXCOORD2.z = u_xlat0.z;\n    vs_TEXCOORD2.xy = u_xlat1.zz
            + u_xlat1.xw;\nvs_TEXCOORD0 = phase0_Output0_0.xy;\nvs_TEXCOORD1 = phase0_Output0_0.zw;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 _ZBufferParams;\nuniform \tmediump float _Near;\nuniform \tmediump
            float _Far;\nuniform \tmediump float _UseDistanceFog;\nuniform \tmediump
            float _UseDistanceFogOnSky;\nuniform \tmediump float _LowWorldY;\nuniform
            \tmediump float _HighWorldY;\nuniform \tmediump float _UseHeightFog;\nuniform
            \tmediump float _UseHeightFogOnSky;\nuniform \tmediump float _DistanceFogIntensity;\nuniform
            \tmediump float _HeightFogIntensity;\nuniform \tmediump float _DistanceHeightBlend;\nuniform
            lowp sampler2D _MainTex;\nuniform highp sampler2D _CameraDepthTexture;\nuniform
            lowp sampler2D _DistanceLUT;\nuniform lowp sampler2D _HeightLUT;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec3
            u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nlowp
            vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nvec2 u_xlat4;\nfloat u_xlat8;\nvec2
            u_xlat9;\nvoid main()\n{\n    u_xlat0.x = (-_ProjectionParams.y) + _ProjectionParams.z;\n   
            u_xlat4.x = texture2D(_CameraDepthTexture, vs_TEXCOORD1.xy).x;\n    u_xlat4.xy
            = _ZBufferParams.zx * u_xlat4.xx + _ZBufferParams.wy;\n    u_xlat4.xy
            = vec2(1.0, 1.0) / u_xlat4.xy;\n    u_xlat0.x = u_xlat0.x * u_xlat4.y
            + _ProjectionParams.y;\n    u_xlat0.x = u_xlat0.x + (-_Near);\n    u_xlat16_1
            = (-_Near) + _Far;\n    u_xlat1.x = u_xlat0.x / u_xlat16_1;\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat1.y = float(0.5);\n    u_xlat9.y
            = float(0.5);\n    u_xlat10_2 = texture2D(_DistanceLUT, u_xlat1.xy);\n   
            u_xlatb0.x = u_xlat4.y>=0.999000013;\n    u_xlat4.x = vs_TEXCOORD2.y
            * u_xlat4.x + _WorldSpaceCameraPos.y;\n    u_xlat4.x = u_xlat4.x + (-_LowWorldY);\n   
            u_xlat0.x = u_xlatb0.x ? 1.0 : float(0.0);\n    u_xlatb0.z = _UseDistanceFogOnSky>=u_xlat0.x;\n   
            u_xlatb0.x = _UseHeightFogOnSky>=u_xlat0.x;\n    u_xlat0.x = u_xlatb0.x
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n;\n   
            u_xlat8 = u_xlat0.z * u_xlat10_2.w;\n    u_xlat16_3.x = _UseDistanceFog
            * _DistanceFogIntensity;\n    u_xlat10_2.w = u_xlat8 * u_xlat16_3.x;\n   
            u_xlat16_3.x = (-_LowWorldY) + _HighWorldY;\n    u_xlat9.x = u_xlat4.x
            / u_xlat16_3.x;\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat10_1
            = texture2D(_HeightLUT, u_xlat9.xy);\n    u_xlat0.x = u_xlat0.x * u_xlat10_1.w;\n   
            u_xlat1.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;\n    u_xlat16_3.x =
            _UseHeightFog * _HeightFogIntensity;\n    u_xlat1.w = u_xlat0.x * u_xlat16_3.x
            + (-u_xlat10_2.w);\n    u_xlatb0.x = vec4(0.0, 0.0, 0.0, 0.0)!=vec4(_UseDistanceFog);\n   
            u_xlat16_3.x = (u_xlatb0.x) ? _DistanceHeightBlend : 1.0;\n    u_xlatb0.x
            = vec4(0.0, 0.0, 0.0, 0.0)!=vec4(_UseHeightFog);\n    u_xlat16_3.x =
            (u_xlatb0.x) ? u_xlat16_3.x : 0.0;\n    u_xlat0 = u_xlat16_3.xxxx * u_xlat1
            + u_xlat10_2;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_3.xyz = u_xlat0.xyz + (-u_xlat10_1.xyz);\n    SV_Target0.xyz
            = u_xlat0.www * u_xlat16_3.xyz + u_xlat10_1.xyz;\n    SV_Target0.w =
            u_xlat10_1.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin
            mediump vec2 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nhighp  vec4
            phase0_Output0_0;\nout highp vec2 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    phase0_Output0_0 = in_TEXCOORD0.xyxy;\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y
            = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5,
            0.5, 0.5);\n    vs_TEXCOORD2.z = u_xlat0.z;\n    vs_TEXCOORD2.xy = u_xlat1.zz
            + u_xlat1.xw;\nvs_TEXCOORD0 = phase0_Output0_0.xy;\nvs_TEXCOORD1 = phase0_Output0_0.zw;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ProjectionParams;\nuniform \tvec4 _ZBufferParams;\nuniform \tmediump
            float _Near;\nuniform \tmediump float _Far;\nuniform \tmediump float
            _UseDistanceFog;\nuniform \tmediump float _UseDistanceFogOnSky;\nuniform
            \tmediump float _LowWorldY;\nuniform \tmediump float _HighWorldY;\nuniform
            \tmediump float _UseHeightFog;\nuniform \tmediump float _UseHeightFogOnSky;\nuniform
            \tmediump float _DistanceFogIntensity;\nuniform \tmediump float _HeightFogIntensity;\nuniform
            \tmediump float _DistanceHeightBlend;\nUNITY_LOCATION(0) uniform mediump
            sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _DistanceLUT;\nUNITY_LOCATION(3) uniform mediump
            sampler2D _HeightLUT;\nin highp vec2 vs_TEXCOORD0;\nin highp vec2 vs_TEXCOORD1;\nin
            highp vec3 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nbvec3 u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump
            vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec2 u_xlat4;\nfloat u_xlat8;\nvec2
            u_xlat9;\nvoid main()\n{\n    u_xlat0.x = (-_ProjectionParams.y) + _ProjectionParams.z;\n   
            u_xlat4.x = texture(_CameraDepthTexture, vs_TEXCOORD1.xy).x;\n    u_xlat4.xy
            = _ZBufferParams.zx * u_xlat4.xx + _ZBufferParams.wy;\n    u_xlat4.xy
            = vec2(1.0, 1.0) / u_xlat4.xy;\n    u_xlat0.x = u_xlat0.x * u_xlat4.y
            + _ProjectionParams.y;\n    u_xlat0.x = u_xlat0.x + (-_Near);\n    u_xlat16_1.x
            = (-_Near) + _Far;\n    u_xlat1.x = u_xlat0.x / u_xlat16_1.x;\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat1.y = float(0.5);\n    u_xlat9.y
            = float(0.5);\n    u_xlat16_2 = texture(_DistanceLUT, u_xlat1.xy);\n   
            u_xlatb0.x = u_xlat4.y>=0.999000013;\n    u_xlat4.x = vs_TEXCOORD2.y
            * u_xlat4.x + _WorldSpaceCameraPos.y;\n    u_xlat4.x = u_xlat4.x + (-_LowWorldY);\n   
            u_xlat0.x = u_xlatb0.x ? 1.0 : float(0.0);\n    u_xlatb0.z = _UseDistanceFogOnSky>=u_xlat0.x;\n   
            u_xlatb0.x = _UseHeightFogOnSky>=u_xlat0.x;\n    u_xlat0.x = u_xlatb0.x
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n;\n   
            u_xlat8 = u_xlat0.z * u_xlat16_2.w;\n    u_xlat16_3.x = _UseDistanceFog
            * _DistanceFogIntensity;\n    u_xlat16_2.w = u_xlat8 * u_xlat16_3.x;\n   
            u_xlat16_3.x = (-_LowWorldY) + _HighWorldY;\n    u_xlat9.x = u_xlat4.x
            / u_xlat16_3.x;\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat16_1
            = texture(_HeightLUT, u_xlat9.xy);\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.w;\n   
            u_xlat1.xyz = (-u_xlat16_2.xyz) + u_xlat16_1.xyz;\n    u_xlat16_3.x =
            _UseHeightFog * _HeightFogIntensity;\n    u_xlat1.w = u_xlat0.x * u_xlat16_3.x
            + (-u_xlat16_2.w);\n    u_xlatb0.x = vec4(0.0, 0.0, 0.0, 0.0)!=vec4(_UseDistanceFog);\n   
            u_xlat16_3.x = (u_xlatb0.x) ? _DistanceHeightBlend : 1.0;\n    u_xlatb0.x
            = vec4(0.0, 0.0, 0.0, 0.0)!=vec4(_UseHeightFog);\n    u_xlat16_3.x =
            (u_xlatb0.x) ? u_xlat16_3.x : 0.0;\n    u_xlat0 = u_xlat16_3.xxxx * u_xlat1
            + u_xlat16_2;\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_3.xyz = u_xlat0.xyz + (-u_xlat16_1.xyz);\n    SV_Target0.xyz
            = u_xlat0.www * u_xlat16_3.xyz + u_xlat16_1.xyz;\n    SV_Target0.w =
            u_xlat16_1.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 39ef0b8c9be96494d9f8b2f2c54a28c5, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 39ef0b8c9be96494d9f8b2f2c54a28c5, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 1
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 39ef0b8c9be96494d9f8b2f2c54a28c5, type: 3}
      Tags: []
    Shader: {fileID: 4800000, guid: 39ef0b8c9be96494d9f8b2f2c54a28c5, type: 3}
    ShaderPath: Assets/FlatKit/[Render Pipeline] Built-in/ImageEffects/Resources/FogPlus.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 39ef0b8c9be96494d9f8b2f2c54a28c5, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 39ef0b8c9be96494d9f8b2f2c54a28c5, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords: []
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: 512
      - Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords: []
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: DepthNormalsOnly
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: 512
      - Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords: []
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: DepthOnly
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: 512
      Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
      Tags: []
    Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
    ShaderPath: Library/unity default resources
    ShaderDefinedKeywords: []
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: f0e778543e4d8a34295b7995426495da, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec2 in_TEXCOORD0;\nvarying
            highp vec2 vs_TEXCOORD0;\nhighp  vec4 phase0_Output0_0;\nvarying highp
            vec2 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    phase0_Output0_0 = in_TEXCOORD0.xyxy;\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y
            = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5,
            0.5, 0.5);\n    vs_TEXCOORD2.z = u_xlat0.z;\n    vs_TEXCOORD2.xy = u_xlat1.zz
            + u_xlat1.xw;\nvs_TEXCOORD0 = phase0_Output0_0.xy;\nvs_TEXCOORD1 = phase0_Output0_0.zw;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    SV_Target0 =
            u_xlat10_0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin
            mediump vec2 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nhighp  vec4
            phase0_Output0_0;\nout highp vec2 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    phase0_Output0_0 = in_TEXCOORD0.xyxy;\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y
            = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5,
            0.5, 0.5);\n    vs_TEXCOORD2.z = u_xlat0.z;\n    vs_TEXCOORD2.xy = u_xlat1.zz
            + u_xlat1.xw;\nvs_TEXCOORD0 = phase0_Output0_0.xy;\nvs_TEXCOORD1 = phase0_Output0_0.zw;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    SV_Target0 = u_xlat16_0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        DefinedKeywords:
        - OUTLINE_USE_DEPTH
        - OUTLINE_USE_NORMALS
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        KeywordGroups:
        - Keywords:
          - _
          - OUTLINE_USE_DEPTH
          hasDiscard: 1
        - Keywords:
          - _
          - OUTLINE_USE_NORMALS
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: f0e778543e4d8a34295b7995426495da, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: f0e778543e4d8a34295b7995426495da, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: f0e778543e4d8a34295b7995426495da, type: 3}
      Tags: []
    Shader: {fileID: 4800000, guid: f0e778543e4d8a34295b7995426495da, type: 3}
    ShaderPath: Assets/FlatKit/[Render Pipeline] Built-in/ImageEffects/Resources/OutlinePlus.shader
    ShaderDefinedKeywords:
    - OUTLINE_USE_DEPTH
    - OUTLINE_USE_NORMALS
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: f0e778543e4d8a34295b7995426495da, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: f0e778543e4d8a34295b7995426495da, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nvarying highp
            vec3 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Glossiness;\nuniform \tmediump float _Metallic;\nuniform
            \tmediump float _Strength;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            vec4 _RimColor;\nuniform lowp samplerCube unity_SpecCube0;\nuniform lowp
            samplerCube unity_SpecCube1;\nvarying highp vec3 vs_TEXCOORD0;\nvarying
            highp vec3 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec3
            u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nfloat u_xlat3;\nfloat u_xlat4;\nmediump
            vec3 u_xlat16_5;\nlowp vec4 u_xlat10_5;\nvec3 u_xlat6;\nlowp vec4 u_xlat10_6;\nvec3
            u_xlat7;\nbvec3 u_xlatb7;\nmediump float u_xlat16_8;\nbvec3 u_xlatb9;\nmediump
            vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nmediump float u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nfloat u_xlat15;\nvec3 u_xlat17;\nvec3
            u_xlat18;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump vec3 u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nfloat u_xlat42;\nfloat u_xlat43;\nfloat u_xlat44;\nmediump
            float u_xlat16_47;\nmediump float u_xlat16_52;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat42 = inversesqrt(u_xlat42);\n   
            u_xlat1.xyz = vec3(u_xlat42) * u_xlat0.xyz;\n    u_xlat43 = dot(vs_TEXCOORD0.xyz,
            vs_TEXCOORD0.xyz);\n    u_xlat43 = inversesqrt(u_xlat43);\n    u_xlat2.xyz
            = vec3(u_xlat43) * vs_TEXCOORD0.xyz;\n    u_xlat43 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n    u_xlat44 = u_xlat43;\n    u_xlat44 = clamp(u_xlat44,
            0.0, 1.0);\n    u_xlat44 = (-u_xlat44) + 1.0;\n    u_xlat3 = u_xlat44
            * _Strength;\n    u_xlat44 = (-_Strength) * u_xlat44 + 1.0;\n    u_xlat17.xyz
            = vec3(u_xlat44) * _Color.xyz;\n    u_xlat4 = (-_Glossiness) + 1.0;\n   
            u_xlat16_5.x = dot((-u_xlat1.xyz), vs_TEXCOORD0.xyz);\n    u_xlat16_5.x
            = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = vs_TEXCOORD0.xyz
            * (-u_xlat16_5.xxx) + (-u_xlat1.xyz);\n    u_xlatb1 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb1){\n        u_xlat1.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat1.x = inversesqrt(u_xlat1.x);\n        u_xlat1.xyz = u_xlat1.xxx
            * u_xlat16_5.xyz;\n        u_xlat18.xyz = (-vs_TEXCOORD1.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat18.xyz = u_xlat18.xyz / u_xlat1.xyz;\n        u_xlat6.xyz = (-vs_TEXCOORD1.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat6.xyz = u_xlat6.xyz / u_xlat1.xyz;\n       
            u_xlatb7.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat1.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat18;\n            hlslcc_movcTemp.x
            = (u_xlatb7.x) ? u_xlat18.x : u_xlat6.x;\n            hlslcc_movcTemp.y
            = (u_xlatb7.y) ? u_xlat18.y : u_xlat6.y;\n            hlslcc_movcTemp.z
            = (u_xlatb7.z) ? u_xlat18.z : u_xlat6.z;\n            u_xlat18 = hlslcc_movcTemp;\n       
            }\n        u_xlat18.x = min(u_xlat18.y, u_xlat18.x);\n        u_xlat18.x
            = min(u_xlat18.z, u_xlat18.x);\n        u_xlat6.xyz = vs_TEXCOORD1.xyz
            + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat1.xyz = u_xlat1.xyz
            * u_xlat18.xxx + u_xlat6.xyz;\n    } else {\n        u_xlat1.xyz = u_xlat16_5.xyz;\n   
            }\n    u_xlat16_47 = (-u_xlat4) * 0.699999988 + 1.70000005;\n    u_xlat16_47
            = u_xlat4 * u_xlat16_47;\n    u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6
            = textureCubeLodEXT(unity_SpecCube0, u_xlat1.xyz, u_xlat16_47);\n   
            u_xlat16_8 = u_xlat10_6.w + -1.0;\n    u_xlat16_8 = unity_SpecCube0_HDR.w
            * u_xlat16_8 + 1.0;\n    u_xlat16_8 = u_xlat16_8 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_22.xyz = u_xlat10_6.xyz * vec3(u_xlat16_8);\n    u_xlatb1 =
            unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb1){\n        u_xlatb1
            = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb1){\n           
            u_xlat1.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n            u_xlat1.x
            = inversesqrt(u_xlat1.x);\n            u_xlat1.xyz = u_xlat1.xxx * u_xlat16_5.xyz;\n           
            u_xlat18.xyz = (-vs_TEXCOORD1.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat18.xyz = u_xlat18.xyz / u_xlat1.xyz;\n            u_xlat7.xyz =
            (-vs_TEXCOORD1.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat7.xyz
            = u_xlat7.xyz / u_xlat1.xyz;\n            u_xlatb9.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat1.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat18;\n                hlslcc_movcTemp.x = (u_xlatb9.x)
            ? u_xlat18.x : u_xlat7.x;\n                hlslcc_movcTemp.y = (u_xlatb9.y)
            ? u_xlat18.y : u_xlat7.y;\n                hlslcc_movcTemp.z = (u_xlatb9.z)
            ? u_xlat18.z : u_xlat7.z;\n                u_xlat18 = hlslcc_movcTemp;\n           
            }\n            u_xlat18.x = min(u_xlat18.y, u_xlat18.x);\n           
            u_xlat18.x = min(u_xlat18.z, u_xlat18.x);\n            u_xlat7.xyz =
            vs_TEXCOORD1.xyz + (-unity_SpecCube1_ProbePosition.xyz);\n           
            u_xlat1.xyz = u_xlat1.xyz * u_xlat18.xxx + u_xlat7.xyz;\n        } else
            {\n            u_xlat1.xyz = u_xlat16_5.xyz;\n        }\n        u_xlat10_5
            = textureCubeLodEXT(unity_SpecCube1, u_xlat1.xyz, u_xlat16_47);\n       
            u_xlat16_10.x = u_xlat10_5.w + -1.0;\n        u_xlat16_10.x = unity_SpecCube1_HDR.w
            * u_xlat16_10.x + 1.0;\n        u_xlat16_10.x = u_xlat16_10.x * unity_SpecCube1_HDR.x;\n       
            u_xlat16_10.xyz = u_xlat10_5.xyz * u_xlat16_10.xxx;\n        u_xlat1.xyz
            = vec3(u_xlat16_8) * u_xlat10_6.xyz + (-u_xlat16_10.xyz);\n        u_xlat22.xyz
            = unity_SpecCube0_BoxMin.www * u_xlat1.xyz + u_xlat16_10.xyz;\n       
            u_xlat16_22.xyz = u_xlat22.xyz;\n    }\n    u_xlat16_10.xyz = _Color.xyz
            * vec3(u_xlat44) + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_10.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_10.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_11.xyz = u_xlat17.xyz * vec3(u_xlat16_8);\n   
            u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat42) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat0.xyz
            = vec3(u_xlat42) * u_xlat0.xyz;\n    u_xlat42 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);\n    u_xlat1.x = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_52 = u_xlat0.x + u_xlat0.x;\n    u_xlat16_52
            = u_xlat0.x * u_xlat16_52;\n    u_xlat16_52 = u_xlat16_52 * u_xlat4 +
            -0.5;\n    u_xlat16_53 = (-u_xlat42) + 1.0;\n    u_xlat16_12 = u_xlat16_53
            * u_xlat16_53;\n    u_xlat16_12 = u_xlat16_12 * u_xlat16_12;\n    u_xlat16_53
            = u_xlat16_53 * u_xlat16_12;\n    u_xlat16_53 = u_xlat16_52 * u_xlat16_53
            + 1.0;\n    u_xlat16_12 = -abs(u_xlat43) + 1.0;\n    u_xlat16_26.x =
            u_xlat16_12 * u_xlat16_12;\n    u_xlat16_26.x = u_xlat16_26.x * u_xlat16_26.x;\n   
            u_xlat16_12 = u_xlat16_12 * u_xlat16_26.x;\n    u_xlat16_52 = u_xlat16_52
            * u_xlat16_12 + 1.0;\n    u_xlat16_52 = u_xlat16_52 * u_xlat16_53;\n   
            u_xlat14 = u_xlat42 * u_xlat16_52;\n    u_xlat28 = u_xlat4 * u_xlat4;\n   
            u_xlat28 = max(u_xlat28, 0.00200000009);\n    u_xlat15 = (-u_xlat28)
            + 1.0;\n    u_xlat29 = abs(u_xlat43) * u_xlat15 + u_xlat28;\n    u_xlat15
            = u_xlat42 * u_xlat15 + u_xlat28;\n    u_xlat15 = u_xlat15 * abs(u_xlat43);\n   
            u_xlat15 = u_xlat42 * u_xlat29 + u_xlat15;\n    u_xlat15 = u_xlat15 +
            9.99999975e-06;\n    u_xlat15 = 0.5 / u_xlat15;\n    u_xlat29 = u_xlat28
            * u_xlat28;\n    u_xlat43 = u_xlat1.x * u_xlat29 + (-u_xlat1.x);\n   
            u_xlat1.x = u_xlat43 * u_xlat1.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat1.x = u_xlat1.x * u_xlat1.x + 1.00000001e-07;\n    u_xlat1.x =
            u_xlat29 / u_xlat1.x;\n    u_xlat1.x = u_xlat1.x * u_xlat15;\n    u_xlat1.x
            = u_xlat1.x * 3.14159274;\n    u_xlat1.x = max(u_xlat1.x, 9.99999975e-05);\n   
            u_xlat1.x = sqrt(u_xlat1.x);\n    u_xlat42 = u_xlat42 * u_xlat1.x;\n   
            u_xlat28 = u_xlat28 * u_xlat4;\n    u_xlat28 = (-u_xlat28) * 0.280000001
            + 1.0;\n    u_xlat16_52 = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb1 = u_xlat16_52!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat42 = u_xlat42 * u_xlat1.x;\n    u_xlat16_8 = (-u_xlat16_8) + _Glossiness;\n   
            u_xlat16_8 = u_xlat16_8 + 1.0;\n    u_xlat16_8 = clamp(u_xlat16_8, 0.0,
            1.0);\n    u_xlat16_26.xyz = vec3(u_xlat14) * _LightColor0.xyz;\n   
            u_xlat1.xyz = vec3(u_xlat42) * _LightColor0.xyz;\n    u_xlat16_52 = (-u_xlat0.x)
            + 1.0;\n    u_xlat16_53 = u_xlat16_52 * u_xlat16_52;\n    u_xlat16_53
            = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_52 = u_xlat16_52 * u_xlat16_53;\n   
            u_xlat16_13.xyz = (-u_xlat16_10.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_13.xyz
            = u_xlat16_13.xyz * vec3(u_xlat16_52) + u_xlat16_10.xyz;\n    u_xlat0.xyw
            = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyw = u_xlat16_11.xyz *
            u_xlat16_26.xyz + u_xlat0.xyw;\n    u_xlat16_22.xyz = u_xlat16_22.xyz
            * vec3(u_xlat28);\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz) + vec3(u_xlat16_8);\n   
            u_xlat16_10.xyz = vec3(u_xlat16_12) * u_xlat16_11.xyz + u_xlat16_10.xyz;\n   
            u_xlat0.xyz = u_xlat16_22.xyz * u_xlat16_10.xyz + u_xlat0.xyw;\n    SV_Target0.xyz
            = _RimColor.xyz * vec3(u_xlat3) + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nout highp vec3 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD4;\nout highp vec4 vs_TEXCOORD5;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Glossiness;\nuniform \tmediump float _Metallic;\nuniform
            \tmediump float _Strength;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            vec4 _RimColor;\nUNITY_LOCATION(0) uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(1)
            uniform mediump samplerCube unity_SpecCube1;\nin highp vec3 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nvec3 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nfloat u_xlat3;\nfloat
            u_xlat4;\nmediump vec4 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec4 u_xlat16_6;\nvec3
            u_xlat7;\nbvec3 u_xlatb7;\nmediump float u_xlat16_8;\nbvec3 u_xlatb9;\nmediump
            vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nmediump float u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nfloat u_xlat15;\nvec3 u_xlat17;\nvec3
            u_xlat18;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump vec3 u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nfloat u_xlat42;\nfloat u_xlat43;\nfloat u_xlat44;\nmediump
            float u_xlat16_47;\nmediump float u_xlat16_52;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat42 = inversesqrt(u_xlat42);\n   
            u_xlat1.xyz = vec3(u_xlat42) * u_xlat0.xyz;\n    u_xlat43 = dot(vs_TEXCOORD0.xyz,
            vs_TEXCOORD0.xyz);\n    u_xlat43 = inversesqrt(u_xlat43);\n    u_xlat2.xyz
            = vec3(u_xlat43) * vs_TEXCOORD0.xyz;\n    u_xlat43 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n    u_xlat44 = u_xlat43;\n    u_xlat44 = clamp(u_xlat44,
            0.0, 1.0);\n    u_xlat44 = (-u_xlat44) + 1.0;\n    u_xlat3 = u_xlat44
            * _Strength;\n    u_xlat44 = (-_Strength) * u_xlat44 + 1.0;\n    u_xlat17.xyz
            = vec3(u_xlat44) * _Color.xyz;\n    u_xlat4 = (-_Glossiness) + 1.0;\n   
            u_xlat16_5.x = dot((-u_xlat1.xyz), vs_TEXCOORD0.xyz);\n    u_xlat16_5.x
            = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = vs_TEXCOORD0.xyz
            * (-u_xlat16_5.xxx) + (-u_xlat1.xyz);\n    u_xlatb1 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb1){\n        u_xlat1.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat1.x = inversesqrt(u_xlat1.x);\n        u_xlat1.xyz = u_xlat1.xxx
            * u_xlat16_5.xyz;\n        u_xlat18.xyz = (-vs_TEXCOORD1.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat18.xyz = u_xlat18.xyz / u_xlat1.xyz;\n        u_xlat6.xyz = (-vs_TEXCOORD1.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat6.xyz = u_xlat6.xyz / u_xlat1.xyz;\n       
            u_xlatb7.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat1.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat18;\n            hlslcc_movcTemp.x
            = (u_xlatb7.x) ? u_xlat18.x : u_xlat6.x;\n            hlslcc_movcTemp.y
            = (u_xlatb7.y) ? u_xlat18.y : u_xlat6.y;\n            hlslcc_movcTemp.z
            = (u_xlatb7.z) ? u_xlat18.z : u_xlat6.z;\n            u_xlat18 = hlslcc_movcTemp;\n       
            }\n        u_xlat18.x = min(u_xlat18.y, u_xlat18.x);\n        u_xlat18.x
            = min(u_xlat18.z, u_xlat18.x);\n        u_xlat6.xyz = vs_TEXCOORD1.xyz
            + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat1.xyz = u_xlat1.xyz
            * u_xlat18.xxx + u_xlat6.xyz;\n    } else {\n        u_xlat1.xyz = u_xlat16_5.xyz;\n   
            }\n    u_xlat16_47 = (-u_xlat4) * 0.699999988 + 1.70000005;\n    u_xlat16_47
            = u_xlat4 * u_xlat16_47;\n    u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat16_6
            = textureLod(unity_SpecCube0, u_xlat1.xyz, u_xlat16_47);\n    u_xlat16_8
            = u_xlat16_6.w + -1.0;\n    u_xlat16_8 = unity_SpecCube0_HDR.w * u_xlat16_8
            + 1.0;\n    u_xlat16_8 = u_xlat16_8 * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz
            = u_xlat16_6.xyz * vec3(u_xlat16_8);\n    u_xlatb1 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb1){\n        u_xlatb1 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb1){\n            u_xlat1.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat1.x = inversesqrt(u_xlat1.x);\n            u_xlat1.xyz = u_xlat1.xxx
            * u_xlat16_5.xyz;\n            u_xlat18.xyz = (-vs_TEXCOORD1.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat18.xyz = u_xlat18.xyz / u_xlat1.xyz;\n            u_xlat7.xyz =
            (-vs_TEXCOORD1.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat7.xyz
            = u_xlat7.xyz / u_xlat1.xyz;\n            u_xlatb9.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat1.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat18;\n                hlslcc_movcTemp.x = (u_xlatb9.x)
            ? u_xlat18.x : u_xlat7.x;\n                hlslcc_movcTemp.y = (u_xlatb9.y)
            ? u_xlat18.y : u_xlat7.y;\n                hlslcc_movcTemp.z = (u_xlatb9.z)
            ? u_xlat18.z : u_xlat7.z;\n                u_xlat18 = hlslcc_movcTemp;\n           
            }\n            u_xlat18.x = min(u_xlat18.y, u_xlat18.x);\n           
            u_xlat18.x = min(u_xlat18.z, u_xlat18.x);\n            u_xlat7.xyz =
            vs_TEXCOORD1.xyz + (-unity_SpecCube1_ProbePosition.xyz);\n           
            u_xlat1.xyz = u_xlat1.xyz * u_xlat18.xxx + u_xlat7.xyz;\n        } else
            {\n            u_xlat1.xyz = u_xlat16_5.xyz;\n        }\n        u_xlat16_5
            = textureLod(unity_SpecCube1, u_xlat1.xyz, u_xlat16_47);\n        u_xlat16_10.x
            = u_xlat16_5.w + -1.0;\n        u_xlat16_10.x = unity_SpecCube1_HDR.w
            * u_xlat16_10.x + 1.0;\n        u_xlat16_10.x = u_xlat16_10.x * unity_SpecCube1_HDR.x;\n       
            u_xlat16_10.xyz = u_xlat16_5.xyz * u_xlat16_10.xxx;\n        u_xlat1.xyz
            = vec3(u_xlat16_8) * u_xlat16_6.xyz + (-u_xlat16_10.xyz);\n        u_xlat22.xyz
            = unity_SpecCube0_BoxMin.www * u_xlat1.xyz + u_xlat16_10.xyz;\n       
            u_xlat16_22.xyz = u_xlat22.xyz;\n    }\n    u_xlat16_10.xyz = _Color.xyz
            * vec3(u_xlat44) + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_10.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_10.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_11.xyz = u_xlat17.xyz * vec3(u_xlat16_8);\n   
            u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat42) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat0.xyz
            = vec3(u_xlat42) * u_xlat0.xyz;\n    u_xlat42 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat42 = clamp(u_xlat42, 0.0, 1.0);\n    u_xlat1.x = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_52 = u_xlat0.x + u_xlat0.x;\n    u_xlat16_52
            = u_xlat0.x * u_xlat16_52;\n    u_xlat16_52 = u_xlat16_52 * u_xlat4 +
            -0.5;\n    u_xlat16_53 = (-u_xlat42) + 1.0;\n    u_xlat16_12 = u_xlat16_53
            * u_xlat16_53;\n    u_xlat16_12 = u_xlat16_12 * u_xlat16_12;\n    u_xlat16_53
            = u_xlat16_53 * u_xlat16_12;\n    u_xlat16_53 = u_xlat16_52 * u_xlat16_53
            + 1.0;\n    u_xlat16_12 = -abs(u_xlat43) + 1.0;\n    u_xlat16_26.x =
            u_xlat16_12 * u_xlat16_12;\n    u_xlat16_26.x = u_xlat16_26.x * u_xlat16_26.x;\n   
            u_xlat16_12 = u_xlat16_12 * u_xlat16_26.x;\n    u_xlat16_52 = u_xlat16_52
            * u_xlat16_12 + 1.0;\n    u_xlat16_52 = u_xlat16_52 * u_xlat16_53;\n   
            u_xlat14 = u_xlat42 * u_xlat16_52;\n    u_xlat28 = u_xlat4 * u_xlat4;\n   
            u_xlat28 = max(u_xlat28, 0.00200000009);\n    u_xlat15 = (-u_xlat28)
            + 1.0;\n    u_xlat29 = abs(u_xlat43) * u_xlat15 + u_xlat28;\n    u_xlat15
            = u_xlat42 * u_xlat15 + u_xlat28;\n    u_xlat15 = u_xlat15 * abs(u_xlat43);\n   
            u_xlat15 = u_xlat42 * u_xlat29 + u_xlat15;\n    u_xlat15 = u_xlat15 +
            9.99999975e-06;\n    u_xlat15 = 0.5 / u_xlat15;\n    u_xlat29 = u_xlat28
            * u_xlat28;\n    u_xlat43 = u_xlat1.x * u_xlat29 + (-u_xlat1.x);\n   
            u_xlat1.x = u_xlat43 * u_xlat1.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat1.x = u_xlat1.x * u_xlat1.x + 1.00000001e-07;\n    u_xlat1.x =
            u_xlat29 / u_xlat1.x;\n    u_xlat1.x = u_xlat1.x * u_xlat15;\n    u_xlat1.x
            = u_xlat1.x * 3.14159274;\n    u_xlat1.x = max(u_xlat1.x, 9.99999975e-05);\n   
            u_xlat1.x = sqrt(u_xlat1.x);\n    u_xlat42 = u_xlat42 * u_xlat1.x;\n   
            u_xlat28 = u_xlat28 * u_xlat4;\n    u_xlat28 = (-u_xlat28) * 0.280000001
            + 1.0;\n    u_xlat16_52 = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb1 = u_xlat16_52!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat42 = u_xlat42 * u_xlat1.x;\n    u_xlat16_8 = (-u_xlat16_8) + _Glossiness;\n   
            u_xlat16_8 = u_xlat16_8 + 1.0;\n    u_xlat16_8 = clamp(u_xlat16_8, 0.0,
            1.0);\n    u_xlat16_26.xyz = vec3(u_xlat14) * _LightColor0.xyz;\n   
            u_xlat1.xyz = vec3(u_xlat42) * _LightColor0.xyz;\n    u_xlat16_52 = (-u_xlat0.x)
            + 1.0;\n    u_xlat16_53 = u_xlat16_52 * u_xlat16_52;\n    u_xlat16_53
            = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_52 = u_xlat16_52 * u_xlat16_53;\n   
            u_xlat16_13.xyz = (-u_xlat16_10.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_13.xyz
            = u_xlat16_13.xyz * vec3(u_xlat16_52) + u_xlat16_10.xyz;\n    u_xlat0.xyw
            = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyw = u_xlat16_11.xyz *
            u_xlat16_26.xyz + u_xlat0.xyw;\n    u_xlat16_22.xyz = u_xlat16_22.xyz
            * vec3(u_xlat28);\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz) + vec3(u_xlat16_8);\n   
            u_xlat16_10.xyz = vec3(u_xlat16_12) * u_xlat16_11.xyz + u_xlat16_10.xyz;\n   
            u_xlat0.xyz = u_xlat16_22.xyz * u_xlat16_10.xyz + u_xlat0.xyw;\n    SV_Target0.xyz
            = _RimColor.xyz * vec3(u_xlat3) + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nvarying highp
            vec3 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying mediump
            vec3 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4
            vs_TEXCOORD5;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD0.xyz = u_xlat0.xyz;\n   
            u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2 = u_xlat0.x * u_xlat0.x
            + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD2.xyz
            = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD4
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump
            vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump float _Glossiness;\nuniform
            \tmediump float _Metallic;\nuniform \tmediump float _Strength;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _RimColor;\nuniform lowp
            samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec3 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying mediump
            vec3 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec3
            u_xlat1;\nvec3 u_xlat2;\nfloat u_xlat3;\nfloat u_xlat4;\nmediump vec3
            u_xlat16_5;\nlowp vec4 u_xlat10_5;\nvec4 u_xlat6;\nlowp vec4 u_xlat10_6;\nmediump
            vec3 u_xlat16_7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nmediump
            float u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat u_xlat15;\nfloat
            u_xlat17;\nvec3 u_xlat18;\nvec3 u_xlat19;\nbool u_xlatb19;\nvec3 u_xlat21;\nvec3
            u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump vec3 u_xlat16_28;\nfloat
            u_xlat30;\nfloat u_xlat32;\nfloat u_xlat45;\nfloat u_xlat46;\nbool u_xlatb46;\nfloat
            u_xlat47;\nmediump float u_xlat16_50;\nfloat u_xlat51;\nmediump float
            u_xlat16_56;\nmediump float u_xlat16_57;\nvoid main()\n{\n    u_xlat0.xyz
            = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat45 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat45 = inversesqrt(u_xlat45);\n    u_xlat1.xyz
            = vec3(u_xlat45) * u_xlat0.xyz;\n    u_xlat46 = dot(vs_TEXCOORD0.xyz,
            vs_TEXCOORD0.xyz);\n    u_xlat46 = inversesqrt(u_xlat46);\n    u_xlat2.xyz
            = vec3(u_xlat46) * vs_TEXCOORD0.xyz;\n    u_xlat46 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n    u_xlat47 = u_xlat46;\n    u_xlat47 = clamp(u_xlat47,
            0.0, 1.0);\n    u_xlat47 = (-u_xlat47) + 1.0;\n    u_xlat3 = u_xlat47
            * _Strength;\n    u_xlat47 = (-_Strength) * u_xlat47 + 1.0;\n    u_xlat18.xyz
            = vec3(u_xlat47) * _Color.xyz;\n    u_xlat4 = (-_Glossiness) + 1.0;\n   
            u_xlat16_5.x = dot((-u_xlat1.xyz), vs_TEXCOORD0.xyz);\n    u_xlat16_5.x
            = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = vs_TEXCOORD0.xyz
            * (-u_xlat16_5.xxx) + (-u_xlat1.xyz);\n    u_xlat6.xyz = vs_TEXCOORD0.xyz;\n   
            u_xlat6.w = 1.0;\n    u_xlat16_7.x = dot(unity_SHAr, u_xlat6);\n    u_xlat16_7.y
            = dot(unity_SHAg, u_xlat6);\n    u_xlat16_7.z = dot(unity_SHAb, u_xlat6);\n   
            u_xlat16_7.xyz = u_xlat16_7.xyz + vs_TEXCOORD2.xyz;\n    u_xlat16_7.xyz
            = max(u_xlat16_7.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_7.xyz);\n   
            u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb19 =
            0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb19){\n        u_xlat19.x
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat19.x = inversesqrt(u_xlat19.x);\n       
            u_xlat19.xyz = u_xlat19.xxx * u_xlat16_5.xyz;\n        u_xlat6.xyz =
            (-vs_TEXCOORD1.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat6.xyz
            = u_xlat6.xyz / u_xlat19.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD1.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat19.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat19.xyzx).xyz;\n       
            {\n            vec4 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat6.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat6.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat6.z : u_xlat8.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat6.x = min(u_xlat6.y, u_xlat6.x);\n        u_xlat6.x
            = min(u_xlat6.z, u_xlat6.x);\n        u_xlat21.xyz = vs_TEXCOORD1.xyz
            + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat19.xyz = u_xlat19.xyz
            * u_xlat6.xxx + u_xlat21.xyz;\n    } else {\n        u_xlat19.xyz = u_xlat16_5.xyz;\n   
            }\n    u_xlat16_50 = (-u_xlat4) * 0.699999988 + 1.70000005;\n    u_xlat16_50
            = u_xlat4 * u_xlat16_50;\n    u_xlat16_50 = u_xlat16_50 * 6.0;\n    u_xlat10_6
            = textureCubeLodEXT(unity_SpecCube0, u_xlat19.xyz, u_xlat16_50);\n   
            u_xlat16_7.x = u_xlat10_6.w + -1.0;\n    u_xlat16_7.x = unity_SpecCube0_HDR.w
            * u_xlat16_7.x + 1.0;\n    u_xlat16_7.x = u_xlat16_7.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_22.xyz = u_xlat10_6.xyz * u_xlat16_7.xxx;\n    u_xlatb19 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb19){\n        u_xlatb19 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb19){\n            u_xlat19.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat19.x = inversesqrt(u_xlat19.x);\n            u_xlat19.xyz = u_xlat19.xxx
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD1.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat19.xyz;\n            u_xlat9.xyz =
            (-vs_TEXCOORD1.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz
            = u_xlat9.xyz / u_xlat19.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat19.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x)
            ? u_xlat8.x : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y)
            ? u_xlat8.y : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z)
            ? u_xlat8.z : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat51 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat51
            = min(u_xlat8.z, u_xlat51);\n            u_xlat8.xyz = vs_TEXCOORD1.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat19.xyz = u_xlat19.xyz
            * vec3(u_xlat51) + u_xlat8.xyz;\n        } else {\n            u_xlat19.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat19.xyz, u_xlat16_50);\n        u_xlat16_11.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_5.xyz * u_xlat16_11.xxx;\n        u_xlat19.xyz = u_xlat16_7.xxx
            * u_xlat10_6.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat19.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_11.xyz = _Color.xyz * vec3(u_xlat47) + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat16_11.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_11.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_7.x = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_12.xyz = u_xlat18.xyz * u_xlat16_7.xxx;\n    u_xlat0.xyz = u_xlat0.xyz
            * vec3(u_xlat45) + _WorldSpaceLightPos0.xyz;\n    u_xlat45 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat45 = max(u_xlat45, 0.00100000005);\n    u_xlat45
            = inversesqrt(u_xlat45);\n    u_xlat0.xyz = vec3(u_xlat45) * u_xlat0.xyz;\n   
            u_xlat45 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat45
            = clamp(u_xlat45, 0.0, 1.0);\n    u_xlat2.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_56
            = u_xlat0.x + u_xlat0.x;\n    u_xlat16_56 = u_xlat0.x * u_xlat16_56;\n   
            u_xlat16_56 = u_xlat16_56 * u_xlat4 + -0.5;\n    u_xlat16_57 = (-u_xlat45)
            + 1.0;\n    u_xlat16_13 = u_xlat16_57 * u_xlat16_57;\n    u_xlat16_13
            = u_xlat16_13 * u_xlat16_13;\n    u_xlat16_57 = u_xlat16_57 * u_xlat16_13;\n   
            u_xlat16_57 = u_xlat16_56 * u_xlat16_57 + 1.0;\n    u_xlat16_13 = -abs(u_xlat46)
            + 1.0;\n    u_xlat16_28.x = u_xlat16_13 * u_xlat16_13;\n    u_xlat16_28.x
            = u_xlat16_28.x * u_xlat16_28.x;\n    u_xlat16_13 = u_xlat16_13 * u_xlat16_28.x;\n   
            u_xlat16_56 = u_xlat16_56 * u_xlat16_13 + 1.0;\n    u_xlat16_56 = u_xlat16_56
            * u_xlat16_57;\n    u_xlat15 = u_xlat45 * u_xlat16_56;\n    u_xlat30
            = u_xlat4 * u_xlat4;\n    u_xlat30 = max(u_xlat30, 0.00200000009);\n   
            u_xlat17 = (-u_xlat30) + 1.0;\n    u_xlat32 = abs(u_xlat46) * u_xlat17
            + u_xlat30;\n    u_xlat17 = u_xlat45 * u_xlat17 + u_xlat30;\n    u_xlat46
            = abs(u_xlat46) * u_xlat17;\n    u_xlat46 = u_xlat45 * u_xlat32 + u_xlat46;\n   
            u_xlat46 = u_xlat46 + 9.99999975e-06;\n    u_xlat46 = 0.5 / u_xlat46;\n   
            u_xlat17 = u_xlat30 * u_xlat30;\n    u_xlat32 = u_xlat2.x * u_xlat17
            + (-u_xlat2.x);\n    u_xlat2.x = u_xlat32 * u_xlat2.x + 1.0;\n    u_xlat17
            = u_xlat17 * 0.318309873;\n    u_xlat2.x = u_xlat2.x * u_xlat2.x + 1.00000001e-07;\n   
            u_xlat2.x = u_xlat17 / u_xlat2.x;\n    u_xlat46 = u_xlat46 * u_xlat2.x;\n   
            u_xlat46 = u_xlat46 * 3.14159274;\n    u_xlat46 = max(u_xlat46, 9.99999975e-05);\n   
            u_xlat46 = sqrt(u_xlat46);\n    u_xlat45 = u_xlat45 * u_xlat46;\n   
            u_xlat30 = u_xlat30 * u_xlat4;\n    u_xlat30 = (-u_xlat30) * 0.280000001
            + 1.0;\n    u_xlat16_56 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n   
            u_xlatb46 = u_xlat16_56!=0.0;\n    u_xlat46 = u_xlatb46 ? 1.0 : float(0.0);\n   
            u_xlat45 = u_xlat45 * u_xlat46;\n    u_xlat16_7.x = (-u_xlat16_7.x) +
            _Glossiness;\n    u_xlat16_7.x = u_xlat16_7.x + 1.0;\n    u_xlat16_7.x
            = clamp(u_xlat16_7.x, 0.0, 1.0);\n    u_xlat16_28.xyz = _LightColor0.xyz
            * vec3(u_xlat15) + u_xlat1.xyz;\n    u_xlat1.xyz = vec3(u_xlat45) * _LightColor0.xyz;\n   
            u_xlat16_56 = (-u_xlat0.x) + 1.0;\n    u_xlat16_57 = u_xlat16_56 * u_xlat16_56;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16_57;\n    u_xlat16_56 = u_xlat16_56
            * u_xlat16_57;\n    u_xlat16_14.xyz = (-u_xlat16_11.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(u_xlat16_56)
            + u_xlat16_11.xyz;\n    u_xlat0.xyw = u_xlat1.xyz * u_xlat16_14.xyz;\n   
            u_xlat0.xyw = u_xlat16_12.xyz * u_xlat16_28.xyz + u_xlat0.xyw;\n    u_xlat16_22.xyz
            = u_xlat16_22.xyz * vec3(u_xlat30);\n    u_xlat16_12.xyz = (-u_xlat16_11.xyz)
            + u_xlat16_7.xxx;\n    u_xlat16_11.xyz = vec3(u_xlat16_13) * u_xlat16_12.xyz
            + u_xlat16_11.xyz;\n    u_xlat0.xyz = u_xlat16_22.xyz * u_xlat16_11.xyz
            + u_xlat0.xyw;\n    SV_Target0.xyz = _RimColor.xyz * vec3(u_xlat3) +
            u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nout highp vec3 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD4;\nout
            highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD0.xyz = u_xlat0.xyz;\n   
            u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2 = u_xlat0.x * u_xlat0.x
            + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD2.xyz
            = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD4
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump float _Glossiness;\nuniform
            \tmediump float _Metallic;\nuniform \tmediump float _Strength;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _RimColor;\nUNITY_LOCATION(0)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(1) uniform
            mediump samplerCube unity_SpecCube1;\nin highp vec3 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec3 u_xlat1;\nvec3
            u_xlat2;\nfloat u_xlat3;\nfloat u_xlat4;\nmediump vec4 u_xlat16_5;\nvec4
            u_xlat6;\nmediump vec4 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump
            vec3 u_xlat16_12;\nmediump float u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat
            u_xlat15;\nfloat u_xlat17;\nvec3 u_xlat18;\nvec3 u_xlat19;\nbool u_xlatb19;\nvec3
            u_xlat21;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump vec3 u_xlat16_28;\nfloat
            u_xlat30;\nfloat u_xlat32;\nfloat u_xlat45;\nfloat u_xlat46;\nbool u_xlatb46;\nfloat
            u_xlat47;\nmediump float u_xlat16_50;\nfloat u_xlat51;\nmediump float
            u_xlat16_56;\nmediump float u_xlat16_57;\nvoid main()\n{\n    u_xlat0.xyz
            = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat45 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat45 = inversesqrt(u_xlat45);\n    u_xlat1.xyz
            = vec3(u_xlat45) * u_xlat0.xyz;\n    u_xlat46 = dot(vs_TEXCOORD0.xyz,
            vs_TEXCOORD0.xyz);\n    u_xlat46 = inversesqrt(u_xlat46);\n    u_xlat2.xyz
            = vec3(u_xlat46) * vs_TEXCOORD0.xyz;\n    u_xlat46 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n    u_xlat47 = u_xlat46;\n    u_xlat47 = clamp(u_xlat47,
            0.0, 1.0);\n    u_xlat47 = (-u_xlat47) + 1.0;\n    u_xlat3 = u_xlat47
            * _Strength;\n    u_xlat47 = (-_Strength) * u_xlat47 + 1.0;\n    u_xlat18.xyz
            = vec3(u_xlat47) * _Color.xyz;\n    u_xlat4 = (-_Glossiness) + 1.0;\n   
            u_xlat16_5.x = dot((-u_xlat1.xyz), vs_TEXCOORD0.xyz);\n    u_xlat16_5.x
            = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = vs_TEXCOORD0.xyz
            * (-u_xlat16_5.xxx) + (-u_xlat1.xyz);\n    u_xlat6.xyz = vs_TEXCOORD0.xyz;\n   
            u_xlat6.w = 1.0;\n    u_xlat16_7.x = dot(unity_SHAr, u_xlat6);\n    u_xlat16_7.y
            = dot(unity_SHAg, u_xlat6);\n    u_xlat16_7.z = dot(unity_SHAb, u_xlat6);\n   
            u_xlat16_7.xyz = u_xlat16_7.xyz + vs_TEXCOORD2.xyz;\n    u_xlat16_7.xyz
            = max(u_xlat16_7.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_7.xyz);\n   
            u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb19 =
            0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb19){\n        u_xlat19.x
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat19.x = inversesqrt(u_xlat19.x);\n       
            u_xlat19.xyz = u_xlat19.xxx * u_xlat16_5.xyz;\n        u_xlat6.xyz =
            (-vs_TEXCOORD1.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat6.xyz
            = u_xlat6.xyz / u_xlat19.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD1.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat19.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat19.xyzx).xyz;\n       
            {\n            vec4 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat6.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat6.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat6.z : u_xlat8.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat6.x = min(u_xlat6.y, u_xlat6.x);\n        u_xlat6.x
            = min(u_xlat6.z, u_xlat6.x);\n        u_xlat21.xyz = vs_TEXCOORD1.xyz
            + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat19.xyz = u_xlat19.xyz
            * u_xlat6.xxx + u_xlat21.xyz;\n    } else {\n        u_xlat19.xyz = u_xlat16_5.xyz;\n   
            }\n    u_xlat16_50 = (-u_xlat4) * 0.699999988 + 1.70000005;\n    u_xlat16_50
            = u_xlat4 * u_xlat16_50;\n    u_xlat16_50 = u_xlat16_50 * 6.0;\n    u_xlat16_6
            = textureLod(unity_SpecCube0, u_xlat19.xyz, u_xlat16_50);\n    u_xlat16_7.x
            = u_xlat16_6.w + -1.0;\n    u_xlat16_7.x = unity_SpecCube0_HDR.w * u_xlat16_7.x
            + 1.0;\n    u_xlat16_7.x = u_xlat16_7.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_22.xyz = u_xlat16_6.xyz * u_xlat16_7.xxx;\n    u_xlatb19 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb19){\n        u_xlatb19 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb19){\n            u_xlat19.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat19.x = inversesqrt(u_xlat19.x);\n            u_xlat19.xyz = u_xlat19.xxx
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD1.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat19.xyz;\n            u_xlat9.xyz =
            (-vs_TEXCOORD1.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz
            = u_xlat9.xyz / u_xlat19.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat19.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x)
            ? u_xlat8.x : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y)
            ? u_xlat8.y : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z)
            ? u_xlat8.z : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat51 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat51
            = min(u_xlat8.z, u_xlat51);\n            u_xlat8.xyz = vs_TEXCOORD1.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat19.xyz = u_xlat19.xyz
            * vec3(u_xlat51) + u_xlat8.xyz;\n        } else {\n            u_xlat19.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat19.xyz, u_xlat16_50);\n        u_xlat16_11.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_5.xyz * u_xlat16_11.xxx;\n        u_xlat19.xyz = u_xlat16_7.xxx
            * u_xlat16_6.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat19.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_11.xyz = _Color.xyz * vec3(u_xlat47) + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat16_11.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_11.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_7.x = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_12.xyz = u_xlat18.xyz * u_xlat16_7.xxx;\n    u_xlat0.xyz = u_xlat0.xyz
            * vec3(u_xlat45) + _WorldSpaceLightPos0.xyz;\n    u_xlat45 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat45 = max(u_xlat45, 0.00100000005);\n    u_xlat45
            = inversesqrt(u_xlat45);\n    u_xlat0.xyz = vec3(u_xlat45) * u_xlat0.xyz;\n   
            u_xlat45 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat45
            = clamp(u_xlat45, 0.0, 1.0);\n    u_xlat2.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_56
            = u_xlat0.x + u_xlat0.x;\n    u_xlat16_56 = u_xlat0.x * u_xlat16_56;\n   
            u_xlat16_56 = u_xlat16_56 * u_xlat4 + -0.5;\n    u_xlat16_57 = (-u_xlat45)
            + 1.0;\n    u_xlat16_13 = u_xlat16_57 * u_xlat16_57;\n    u_xlat16_13
            = u_xlat16_13 * u_xlat16_13;\n    u_xlat16_57 = u_xlat16_57 * u_xlat16_13;\n   
            u_xlat16_57 = u_xlat16_56 * u_xlat16_57 + 1.0;\n    u_xlat16_13 = -abs(u_xlat46)
            + 1.0;\n    u_xlat16_28.x = u_xlat16_13 * u_xlat16_13;\n    u_xlat16_28.x
            = u_xlat16_28.x * u_xlat16_28.x;\n    u_xlat16_13 = u_xlat16_13 * u_xlat16_28.x;\n   
            u_xlat16_56 = u_xlat16_56 * u_xlat16_13 + 1.0;\n    u_xlat16_56 = u_xlat16_56
            * u_xlat16_57;\n    u_xlat15 = u_xlat45 * u_xlat16_56;\n    u_xlat30
            = u_xlat4 * u_xlat4;\n    u_xlat30 = max(u_xlat30, 0.00200000009);\n   
            u_xlat17 = (-u_xlat30) + 1.0;\n    u_xlat32 = abs(u_xlat46) * u_xlat17
            + u_xlat30;\n    u_xlat17 = u_xlat45 * u_xlat17 + u_xlat30;\n    u_xlat46
            = abs(u_xlat46) * u_xlat17;\n    u_xlat46 = u_xlat45 * u_xlat32 + u_xlat46;\n   
            u_xlat46 = u_xlat46 + 9.99999975e-06;\n    u_xlat46 = 0.5 / u_xlat46;\n   
            u_xlat17 = u_xlat30 * u_xlat30;\n    u_xlat32 = u_xlat2.x * u_xlat17
            + (-u_xlat2.x);\n    u_xlat2.x = u_xlat32 * u_xlat2.x + 1.0;\n    u_xlat17
            = u_xlat17 * 0.318309873;\n    u_xlat2.x = u_xlat2.x * u_xlat2.x + 1.00000001e-07;\n   
            u_xlat2.x = u_xlat17 / u_xlat2.x;\n    u_xlat46 = u_xlat46 * u_xlat2.x;\n   
            u_xlat46 = u_xlat46 * 3.14159274;\n    u_xlat46 = max(u_xlat46, 9.99999975e-05);\n   
            u_xlat46 = sqrt(u_xlat46);\n    u_xlat45 = u_xlat45 * u_xlat46;\n   
            u_xlat30 = u_xlat30 * u_xlat4;\n    u_xlat30 = (-u_xlat30) * 0.280000001
            + 1.0;\n    u_xlat16_56 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n   
            u_xlatb46 = u_xlat16_56!=0.0;\n    u_xlat46 = u_xlatb46 ? 1.0 : float(0.0);\n   
            u_xlat45 = u_xlat45 * u_xlat46;\n    u_xlat16_7.x = (-u_xlat16_7.x) +
            _Glossiness;\n    u_xlat16_7.x = u_xlat16_7.x + 1.0;\n    u_xlat16_7.x
            = clamp(u_xlat16_7.x, 0.0, 1.0);\n    u_xlat16_28.xyz = _LightColor0.xyz
            * vec3(u_xlat15) + u_xlat1.xyz;\n    u_xlat1.xyz = vec3(u_xlat45) * _LightColor0.xyz;\n   
            u_xlat16_56 = (-u_xlat0.x) + 1.0;\n    u_xlat16_57 = u_xlat16_56 * u_xlat16_56;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16_57;\n    u_xlat16_56 = u_xlat16_56
            * u_xlat16_57;\n    u_xlat16_14.xyz = (-u_xlat16_11.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(u_xlat16_56)
            + u_xlat16_11.xyz;\n    u_xlat0.xyw = u_xlat1.xyz * u_xlat16_14.xyz;\n   
            u_xlat0.xyw = u_xlat16_12.xyz * u_xlat16_28.xyz + u_xlat0.xyw;\n    u_xlat16_22.xyz
            = u_xlat16_22.xyz * vec3(u_xlat30);\n    u_xlat16_12.xyz = (-u_xlat16_11.xyz)
            + u_xlat16_7.xxx;\n    u_xlat16_11.xyz = vec3(u_xlat16_13) * u_xlat16_12.xyz
            + u_xlat16_11.xyz;\n    u_xlat0.xyz = u_xlat16_22.xyz * u_xlat16_11.xyz
            + u_xlat0.xyw;\n    SV_Target0.xyz = _RimColor.xyz * vec3(u_xlat3) +
            u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nvarying highp
            vec3 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Glossiness;\nuniform \tmediump float _Metallic;\nuniform
            \tmediump float _Strength;\nuniform \tmediump vec4 _Color;\nvarying highp
            vec3 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump float u_xlat16_5;\nfloat
            u_xlat6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_9;\nfloat u_xlat12;\nfloat
            u_xlat13;\nmediump float u_xlat16_15;\nfloat u_xlat18;\nfloat u_xlat19;\nfloat
            u_xlat20;\nmediump float u_xlat16_21;\nmediump float u_xlat16_22;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat18) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat0.xyz = vec3(u_xlat18) * u_xlat0.xyz;\n    u_xlat18 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat18 = max(u_xlat18, 0.00100000005);\n    u_xlat18
            = inversesqrt(u_xlat18);\n    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;\n   
            u_xlat18 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat2.xyz = vec3(u_xlat18) * vs_TEXCOORD0.xyz;\n    u_xlat18 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat1.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);\n    u_xlat1.x = clamp(u_xlat1.x,
            0.0, 1.0);\n    u_xlat7 = (-_Glossiness) + 1.0;\n    u_xlat13 = u_xlat7
            * u_xlat7;\n    u_xlat13 = max(u_xlat13, 0.00200000009);\n    u_xlat19
            = u_xlat13 * u_xlat13;\n    u_xlat20 = u_xlat18 * u_xlat19 + (-u_xlat18);\n   
            u_xlat18 = u_xlat20 * u_xlat18 + 1.0;\n    u_xlat18 = u_xlat18 * u_xlat18
            + 1.00000001e-07;\n    u_xlat19 = u_xlat19 * 0.318309873;\n    u_xlat18
            = u_xlat19 / u_xlat18;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n   
            u_xlat6 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat6 =
            clamp(u_xlat6, 0.0, 1.0);\n    u_xlat12 = (-u_xlat13) + 1.0;\n    u_xlat19
            = abs(u_xlat0.x) * u_xlat12 + u_xlat13;\n    u_xlat12 = u_xlat6 * u_xlat12
            + u_xlat13;\n    u_xlat12 = u_xlat12 * abs(u_xlat0.x);\n    u_xlat12
            = u_xlat6 * u_xlat19 + u_xlat12;\n    u_xlat12 = u_xlat12 + 9.99999975e-06;\n   
            u_xlat12 = 0.5 / u_xlat12;\n    u_xlat12 = u_xlat18 * u_xlat12;\n   
            u_xlat12 = u_xlat12 * 3.14159274;\n    u_xlat12 = max(u_xlat12, 9.99999975e-05);\n   
            u_xlat12 = sqrt(u_xlat12);\n    u_xlat12 = u_xlat6 * u_xlat12;\n    u_xlat18
            = u_xlat0.x;\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat16_3.x
            = -abs(u_xlat0.x) + 1.0;\n    u_xlat0.x = (-u_xlat18) + 1.0;\n    u_xlat0.x
            = (-_Strength) * u_xlat0.x + 1.0;\n    u_xlat16_9.xyz = _Color.xyz *
            u_xlat0.xxx + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat2.xyz
            = u_xlat0.xxx * _Color.xyz;\n    u_xlat16_9.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_9.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.x = dot(u_xlat16_9.xyz, u_xlat16_9.xyz);\n   
            u_xlatb0 = u_xlat16_4.x!=0.0;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat12;\n    u_xlat0.xzw = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.xyz = (-u_xlat16_9.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_22
            = (-u_xlat1.x) + 1.0;\n    u_xlat16_5 = u_xlat16_22 * u_xlat16_22;\n   
            u_xlat16_5 = u_xlat16_5 * u_xlat16_5;\n    u_xlat16_22 = u_xlat16_22
            * u_xlat16_5;\n    u_xlat16_9.xyz = u_xlat16_4.xyz * vec3(u_xlat16_22)
            + u_xlat16_9.xyz;\n    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_9.xyz;\n   
            u_xlat16_9.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_9.x = u_xlat16_9.x
            * u_xlat16_9.x;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_9.x;\n   
            u_xlat16_9.x = u_xlat1.x + u_xlat1.x;\n    u_xlat16_9.x = u_xlat1.x *
            u_xlat16_9.x;\n    u_xlat16_9.x = u_xlat16_9.x * u_xlat7 + -0.5;\n   
            u_xlat16_3.x = u_xlat16_9.x * u_xlat16_3.x + 1.0;\n    u_xlat16_15 =
            (-u_xlat6) + 1.0;\n    u_xlat16_21 = u_xlat16_15 * u_xlat16_15;\n   
            u_xlat16_21 = u_xlat16_21 * u_xlat16_21;\n    u_xlat16_15 = u_xlat16_15
            * u_xlat16_21;\n    u_xlat16_9.x = u_xlat16_9.x * u_xlat16_15 + 1.0;\n   
            u_xlat16_3.x = u_xlat16_3.x * u_xlat16_9.x;\n    u_xlat6 = u_xlat6 *
            u_xlat16_3.x;\n    u_xlat16_3.xyz = vec3(u_xlat6) * _LightColor0.xyz;\n   
            u_xlat16_21 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat2.xyz * vec3(u_xlat16_21);\n    u_xlat0.xyz = u_xlat16_4.xyz
            * u_xlat16_3.xyz + u_xlat0.xzw;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nout highp vec3 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Glossiness;\nuniform \tmediump float _Metallic;\nuniform
            \tmediump float _Strength;\nuniform \tmediump vec4 _Color;\nin highp
            vec3 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nlayout(location = 0)
            out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec3 u_xlat1;\nvec3
            u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            float u_xlat16_5;\nfloat u_xlat6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat12;\nfloat u_xlat13;\nmediump float u_xlat16_15;\nfloat u_xlat18;\nfloat
            u_xlat19;\nfloat u_xlat20;\nmediump float u_xlat16_21;\nmediump float
            u_xlat16_22;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD1.xyz) +
            _WorldSpaceCameraPos.xyz;\n    u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat18)
            + _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = vec3(u_xlat18) * u_xlat0.xyz;\n   
            u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat18 = max(u_xlat18,
            0.00100000005);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.xyz
            = vec3(u_xlat18) * u_xlat1.xyz;\n    u_xlat18 = dot(vs_TEXCOORD0.xyz,
            vs_TEXCOORD0.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2.xyz
            = vec3(u_xlat18) * vs_TEXCOORD0.xyz;\n    u_xlat18 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat1.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);\n    u_xlat1.x = clamp(u_xlat1.x,
            0.0, 1.0);\n    u_xlat7 = (-_Glossiness) + 1.0;\n    u_xlat13 = u_xlat7
            * u_xlat7;\n    u_xlat13 = max(u_xlat13, 0.00200000009);\n    u_xlat19
            = u_xlat13 * u_xlat13;\n    u_xlat20 = u_xlat18 * u_xlat19 + (-u_xlat18);\n   
            u_xlat18 = u_xlat20 * u_xlat18 + 1.0;\n    u_xlat18 = u_xlat18 * u_xlat18
            + 1.00000001e-07;\n    u_xlat19 = u_xlat19 * 0.318309873;\n    u_xlat18
            = u_xlat19 / u_xlat18;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n   
            u_xlat6 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat6 =
            clamp(u_xlat6, 0.0, 1.0);\n    u_xlat12 = (-u_xlat13) + 1.0;\n    u_xlat19
            = abs(u_xlat0.x) * u_xlat12 + u_xlat13;\n    u_xlat12 = u_xlat6 * u_xlat12
            + u_xlat13;\n    u_xlat12 = u_xlat12 * abs(u_xlat0.x);\n    u_xlat12
            = u_xlat6 * u_xlat19 + u_xlat12;\n    u_xlat12 = u_xlat12 + 9.99999975e-06;\n   
            u_xlat12 = 0.5 / u_xlat12;\n    u_xlat12 = u_xlat18 * u_xlat12;\n   
            u_xlat12 = u_xlat12 * 3.14159274;\n    u_xlat12 = max(u_xlat12, 9.99999975e-05);\n   
            u_xlat12 = sqrt(u_xlat12);\n    u_xlat12 = u_xlat6 * u_xlat12;\n    u_xlat18
            = u_xlat0.x;\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat16_3.x
            = -abs(u_xlat0.x) + 1.0;\n    u_xlat0.x = (-u_xlat18) + 1.0;\n    u_xlat0.x
            = (-_Strength) * u_xlat0.x + 1.0;\n    u_xlat16_9.xyz = _Color.xyz *
            u_xlat0.xxx + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat2.xyz
            = u_xlat0.xxx * _Color.xyz;\n    u_xlat16_9.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_9.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.x = dot(u_xlat16_9.xyz, u_xlat16_9.xyz);\n   
            u_xlatb0 = u_xlat16_4.x!=0.0;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat12;\n    u_xlat0.xzw = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.xyz = (-u_xlat16_9.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_22
            = (-u_xlat1.x) + 1.0;\n    u_xlat16_5 = u_xlat16_22 * u_xlat16_22;\n   
            u_xlat16_5 = u_xlat16_5 * u_xlat16_5;\n    u_xlat16_22 = u_xlat16_22
            * u_xlat16_5;\n    u_xlat16_9.xyz = u_xlat16_4.xyz * vec3(u_xlat16_22)
            + u_xlat16_9.xyz;\n    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_9.xyz;\n   
            u_xlat16_9.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_9.x = u_xlat16_9.x
            * u_xlat16_9.x;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_9.x;\n   
            u_xlat16_9.x = u_xlat1.x + u_xlat1.x;\n    u_xlat16_9.x = u_xlat1.x *
            u_xlat16_9.x;\n    u_xlat16_9.x = u_xlat16_9.x * u_xlat7 + -0.5;\n   
            u_xlat16_3.x = u_xlat16_9.x * u_xlat16_3.x + 1.0;\n    u_xlat16_15 =
            (-u_xlat6) + 1.0;\n    u_xlat16_21 = u_xlat16_15 * u_xlat16_15;\n   
            u_xlat16_21 = u_xlat16_21 * u_xlat16_21;\n    u_xlat16_15 = u_xlat16_15
            * u_xlat16_21;\n    u_xlat16_9.x = u_xlat16_9.x * u_xlat16_15 + 1.0;\n   
            u_xlat16_3.x = u_xlat16_3.x * u_xlat16_9.x;\n    u_xlat6 = u_xlat6 *
            u_xlat16_3.x;\n    u_xlat16_3.xyz = vec3(u_xlat6) * _LightColor0.xyz;\n   
            u_xlat16_21 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat2.xyz * vec3(u_xlat16_21);\n    u_xlat0.xyz = u_xlat16_4.xyz
            * u_xlat16_3.xyz + u_xlat0.xzw;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_SHADOW_MIXING
        - POINT
        - POINT_COOKIE
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - SHADOWS_SOFT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 47
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
    ShaderPath: Assets/Hiker/Shaders/Builtin/HikerLit.shader
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SHADOWS_DEPTH
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    - SHADOWS_CUBE
    - SHADOWS_SOFT
    fallbackShader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: c0180f0ee2111ed458fba0f6cf03bbeb, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nvarying highp
            vec3 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tvec4 _Color;\nvarying highp vec3 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nmediump float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_0 = max(u_xlat16_0, 0.0);\n    u_xlat16_1.xyz = _LightColor0.xyz
            * _Color.xyz;\n    SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nout highp vec3 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tvec4 _Color;\nin highp vec3 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump float u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = dot(vs_TEXCOORD0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_0 = max(u_xlat16_0, 0.0);\n   
            u_xlat16_1.xyz = _LightColor0.xyz * _Color.xyz;\n    SV_Target0.xyz =
            vec3(u_xlat16_0) * u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec3 in_NORMAL0;\nvarying highp vec3 vs_TEXCOORD0;\nvarying highp
            vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD0.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD2.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tvec4 _Color;\nvarying highp vec3 vs_TEXCOORD0;\nvarying
            mediump vec3 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump
            float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvoid
            main()\n{\n    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_0 = max(u_xlat16_0, 0.0);\n    u_xlat16_2.xyz = _LightColor0.xyz
            * _Color.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD2.xyz * _Color.xyz;\n   
            SV_Target0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_0) + u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nout highp vec3 vs_TEXCOORD0;\nout
            highp vec3 vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nout highp vec4
            vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD0.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD2.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tvec4 _Color;\nin highp vec3 vs_TEXCOORD0;\nin
            mediump vec3 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvoid
            main()\n{\n    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_0 = max(u_xlat16_0, 0.0);\n    u_xlat16_2.xyz = _LightColor0.xyz
            * _Color.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD2.xyz * _Color.xyz;\n   
            SV_Target0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_0) + u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
    ShaderPath: Assets/Hiker/Shaders/Builtin/HikerToyColor.shader
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 9cc7b77cc1e147f4691b8fefcecd1d1a, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nvarying highp
            vec3 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Glossiness;\nuniform \tmediump vec4 _Color;\nuniform
            lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec3 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp vec4 u_xlat10_3;\nbool u_xlatb3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nbvec3 u_xlatb6;\nmediump float
            u_xlat16_7;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nmediump float
            u_xlat16_10;\nmediump float u_xlat16_11;\nfloat u_xlat12;\nfloat u_xlat13;\nvec3
            u_xlat19;\nmediump vec3 u_xlat16_19;\nmediump vec3 u_xlat16_22;\nfloat
            u_xlat24;\nfloat u_xlat25;\nfloat u_xlat36;\nfloat u_xlat37;\nmediump
            float u_xlat16_38;\nfloat u_xlat39;\nbool u_xlatb39;\nmediump float u_xlat16_45;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n   
            u_xlat1.xyz = vec3(u_xlat36) * u_xlat0.xyz;\n    u_xlat37 = (-_Glossiness)
            + 1.0;\n    u_xlat16_2.x = dot((-u_xlat1.xyz), vs_TEXCOORD0.xyz);\n   
            u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;\n    u_xlat16_2.xyz = vs_TEXCOORD0.xyz
            * (-u_xlat16_2.xxx) + (-u_xlat1.xyz);\n    u_xlatb3 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb3){\n        u_xlat3.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n       
            u_xlat3.x = inversesqrt(u_xlat3.x);\n        u_xlat3.xyz = u_xlat16_2.xyz
            * u_xlat3.xxx;\n        u_xlat4.xyz = (-vs_TEXCOORD1.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz / u_xlat3.xyz;\n        u_xlat5.xyz = (-vs_TEXCOORD1.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat5.xyz = u_xlat5.xyz / u_xlat3.xyz;\n       
            u_xlatb6.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat3.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat4;\n            hlslcc_movcTemp.x
            = (u_xlatb6.x) ? u_xlat4.x : u_xlat5.x;\n            hlslcc_movcTemp.y
            = (u_xlatb6.y) ? u_xlat4.y : u_xlat5.y;\n            hlslcc_movcTemp.z
            = (u_xlatb6.z) ? u_xlat4.z : u_xlat5.z;\n            u_xlat4 = hlslcc_movcTemp;\n       
            }\n        u_xlat39 = min(u_xlat4.y, u_xlat4.x);\n        u_xlat39 =
            min(u_xlat4.z, u_xlat39);\n        u_xlat4.xyz = vs_TEXCOORD1.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat3.xyz = u_xlat3.xyz * vec3(u_xlat39) + u_xlat4.xyz;\n    } else
            {\n        u_xlat3.xyz = u_xlat16_2.xyz;\n    }\n    u_xlat16_38 = (-u_xlat37)
            * 0.699999988 + 1.70000005;\n    u_xlat16_38 = u_xlat37 * u_xlat16_38;\n   
            u_xlat16_38 = u_xlat16_38 * 6.0;\n    u_xlat10_3 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat3.xyz, u_xlat16_38);\n    u_xlat16_7 = u_xlat10_3.w + -1.0;\n   
            u_xlat16_7 = unity_SpecCube0_HDR.w * u_xlat16_7 + 1.0;\n    u_xlat16_7
            = u_xlat16_7 * unity_SpecCube0_HDR.x;\n    u_xlat16_19.xyz = u_xlat10_3.xyz
            * vec3(u_xlat16_7);\n    u_xlatb39 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb39){\n        u_xlatb39 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb39){\n            u_xlat39 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n           
            u_xlat39 = inversesqrt(u_xlat39);\n            u_xlat4.xyz = u_xlat16_2.xyz
            * vec3(u_xlat39);\n            u_xlat5.xyz = (-vs_TEXCOORD1.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat5.xyz = u_xlat5.xyz / u_xlat4.xyz;\n            u_xlat6.xyz = (-vs_TEXCOORD1.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat6.xyz = u_xlat6.xyz
            / u_xlat4.xyz;\n            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat4.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat5;\n                hlslcc_movcTemp.x = (u_xlatb8.x) ? u_xlat5.x
            : u_xlat6.x;\n                hlslcc_movcTemp.y = (u_xlatb8.y) ? u_xlat5.y
            : u_xlat6.y;\n                hlslcc_movcTemp.z = (u_xlatb8.z) ? u_xlat5.z
            : u_xlat6.z;\n                u_xlat5 = hlslcc_movcTemp;\n           
            }\n            u_xlat39 = min(u_xlat5.y, u_xlat5.x);\n            u_xlat39
            = min(u_xlat5.z, u_xlat39);\n            u_xlat5.xyz = vs_TEXCOORD1.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat4.xyz = u_xlat4.xyz
            * vec3(u_xlat39) + u_xlat5.xyz;\n        } else {\n            u_xlat4.xyz
            = u_xlat16_2.xyz;\n        }\n        u_xlat10_2 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat4.xyz, u_xlat16_38);\n        u_xlat16_9.x = u_xlat10_2.w + -1.0;\n       
            u_xlat16_9.x = unity_SpecCube1_HDR.w * u_xlat16_9.x + 1.0;\n        u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube1_HDR.x;\n        u_xlat16_9.xyz = u_xlat10_2.xyz
            * u_xlat16_9.xxx;\n        u_xlat3.xyz = vec3(u_xlat16_7) * u_xlat10_3.xyz
            + (-u_xlat16_9.xyz);\n        u_xlat19.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat3.xyz + u_xlat16_9.xyz;\n        u_xlat16_19.xyz = u_xlat19.xyz;\n   
            }\n    u_xlat3.x = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat3.x
            = inversesqrt(u_xlat3.x);\n    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD0.xyz;\n   
            u_xlat16_9.xyz = _Color.xyz * vec3(0.779083729, 0.779083729, 0.779083729);\n   
            u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat36) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat36 = max(u_xlat36,
            0.00100000005);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat0.xyz
            = vec3(u_xlat36) * u_xlat0.xyz;\n    u_xlat36 = dot(u_xlat3.xyz, u_xlat1.xyz);\n   
            u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat13 = dot(u_xlat3.xyz, u_xlat0.xyz);\n   
            u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_7
            = u_xlat0.x + u_xlat0.x;\n    u_xlat16_7 = u_xlat0.x * u_xlat16_7;\n   
            u_xlat16_7 = u_xlat16_7 * u_xlat37 + -0.5;\n    u_xlat16_45 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_10 = u_xlat16_45 * u_xlat16_45;\n    u_xlat16_10
            = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_45 = u_xlat16_45 * u_xlat16_10;\n   
            u_xlat16_45 = u_xlat16_7 * u_xlat16_45 + 1.0;\n    u_xlat16_10 = -abs(u_xlat36)
            + 1.0;\n    u_xlat16_22.x = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_22.x
            = u_xlat16_22.x * u_xlat16_22.x;\n    u_xlat16_10 = u_xlat16_10 * u_xlat16_22.x;\n   
            u_xlat16_7 = u_xlat16_7 * u_xlat16_10 + 1.0;\n    u_xlat16_7 = u_xlat16_7
            * u_xlat16_45;\n    u_xlat12 = u_xlat1.x * u_xlat16_7;\n    u_xlat24
            = u_xlat37 * u_xlat37;\n    u_xlat24 = max(u_xlat24, 0.00200000009);\n   
            u_xlat25 = (-u_xlat24) + 1.0;\n    u_xlat3.x = abs(u_xlat36) * u_xlat25
            + u_xlat24;\n    u_xlat25 = u_xlat1.x * u_xlat25 + u_xlat24;\n    u_xlat36
            = abs(u_xlat36) * u_xlat25;\n    u_xlat36 = u_xlat1.x * u_xlat3.x + u_xlat36;\n   
            u_xlat36 = u_xlat36 + 9.99999975e-06;\n    u_xlat36 = 0.5 / u_xlat36;\n   
            u_xlat25 = u_xlat24 * u_xlat24;\n    u_xlat3.x = u_xlat13 * u_xlat25
            + (-u_xlat13);\n    u_xlat13 = u_xlat3.x * u_xlat13 + 1.0;\n    u_xlat25
            = u_xlat25 * 0.318309873;\n    u_xlat13 = u_xlat13 * u_xlat13 + 1.00000001e-07;\n   
            u_xlat13 = u_xlat25 / u_xlat13;\n    u_xlat36 = u_xlat36 * u_xlat13;\n   
            u_xlat36 = u_xlat36 * 3.14159274;\n    u_xlat36 = max(u_xlat36, 9.99999975e-05);\n   
            u_xlat36 = sqrt(u_xlat36);\n    u_xlat36 = u_xlat1.x * u_xlat36;\n   
            u_xlat24 = u_xlat24 * u_xlat37;\n    u_xlat24 = (-u_xlat24) * 0.280000001
            + 1.0;\n    u_xlat16_7 = _Glossiness + 0.220916271;\n    u_xlat16_7 =
            clamp(u_xlat16_7, 0.0, 1.0);\n    u_xlat16_22.xyz = vec3(u_xlat12) *
            _LightColor0.xyz;\n    u_xlat1.xyz = vec3(u_xlat36) * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat0.x) + 1.0;\n    u_xlat16_11 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_11 = u_xlat16_11 * u_xlat16_11;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_11;\n    u_xlat16_45 = u_xlat16_45 * 0.779083729 + 0.220916301;\n   
            u_xlat0.xyw = u_xlat1.xyz * vec3(u_xlat16_45);\n    u_xlat0.xyw = u_xlat16_9.xyz
            * u_xlat16_22.xyz + u_xlat0.xyw;\n    u_xlat16_19.xyz = u_xlat16_19.xyz
            * vec3(u_xlat24);\n    u_xlat16_7 = u_xlat16_7 + -0.220916301;\n    u_xlat16_7
            = u_xlat16_10 * u_xlat16_7 + 0.220916301;\n    u_xlat0.xyz = u_xlat16_19.xyz
            * vec3(u_xlat16_7) + u_xlat0.xyw;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nout highp vec3 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD4;\nout highp vec4 vs_TEXCOORD5;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Glossiness;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(1) uniform
            mediump samplerCube unity_SpecCube1;\nin highp vec3 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nvec3 u_xlat1;\nmediump vec4 u_xlat16_2;\nvec3 u_xlat3;\nmediump
            vec4 u_xlat16_3;\nbool u_xlatb3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nvec3
            u_xlat6;\nbvec3 u_xlatb6;\nmediump float u_xlat16_7;\nbvec3 u_xlatb8;\nmediump
            vec3 u_xlat16_9;\nmediump float u_xlat16_10;\nmediump float u_xlat16_11;\nfloat
            u_xlat12;\nfloat u_xlat13;\nvec3 u_xlat19;\nmediump vec3 u_xlat16_19;\nmediump
            vec3 u_xlat16_22;\nfloat u_xlat24;\nfloat u_xlat25;\nfloat u_xlat36;\nfloat
            u_xlat37;\nmediump float u_xlat16_38;\nfloat u_xlat39;\nbool u_xlatb39;\nmediump
            float u_xlat16_45;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD1.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz = vec3(u_xlat36) *
            u_xlat0.xyz;\n    u_xlat37 = (-_Glossiness) + 1.0;\n    u_xlat16_2.x
            = dot((-u_xlat1.xyz), vs_TEXCOORD0.xyz);\n    u_xlat16_2.x = u_xlat16_2.x
            + u_xlat16_2.x;\n    u_xlat16_2.xyz = vs_TEXCOORD0.xyz * (-u_xlat16_2.xxx)
            + (-u_xlat1.xyz);\n    u_xlatb3 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb3){\n        u_xlat3.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n       
            u_xlat3.x = inversesqrt(u_xlat3.x);\n        u_xlat3.xyz = u_xlat16_2.xyz
            * u_xlat3.xxx;\n        u_xlat4.xyz = (-vs_TEXCOORD1.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz / u_xlat3.xyz;\n        u_xlat5.xyz = (-vs_TEXCOORD1.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat5.xyz = u_xlat5.xyz / u_xlat3.xyz;\n       
            u_xlatb6.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat3.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat4;\n            hlslcc_movcTemp.x
            = (u_xlatb6.x) ? u_xlat4.x : u_xlat5.x;\n            hlslcc_movcTemp.y
            = (u_xlatb6.y) ? u_xlat4.y : u_xlat5.y;\n            hlslcc_movcTemp.z
            = (u_xlatb6.z) ? u_xlat4.z : u_xlat5.z;\n            u_xlat4 = hlslcc_movcTemp;\n       
            }\n        u_xlat39 = min(u_xlat4.y, u_xlat4.x);\n        u_xlat39 =
            min(u_xlat4.z, u_xlat39);\n        u_xlat4.xyz = vs_TEXCOORD1.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat3.xyz = u_xlat3.xyz * vec3(u_xlat39) + u_xlat4.xyz;\n    } else
            {\n        u_xlat3.xyz = u_xlat16_2.xyz;\n    }\n    u_xlat16_38 = (-u_xlat37)
            * 0.699999988 + 1.70000005;\n    u_xlat16_38 = u_xlat37 * u_xlat16_38;\n   
            u_xlat16_38 = u_xlat16_38 * 6.0;\n    u_xlat16_3 = textureLod(unity_SpecCube0,
            u_xlat3.xyz, u_xlat16_38);\n    u_xlat16_7 = u_xlat16_3.w + -1.0;\n   
            u_xlat16_7 = unity_SpecCube0_HDR.w * u_xlat16_7 + 1.0;\n    u_xlat16_7
            = u_xlat16_7 * unity_SpecCube0_HDR.x;\n    u_xlat16_19.xyz = u_xlat16_3.xyz
            * vec3(u_xlat16_7);\n    u_xlatb39 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb39){\n        u_xlatb39 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb39){\n            u_xlat39 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n           
            u_xlat39 = inversesqrt(u_xlat39);\n            u_xlat4.xyz = u_xlat16_2.xyz
            * vec3(u_xlat39);\n            u_xlat5.xyz = (-vs_TEXCOORD1.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat5.xyz = u_xlat5.xyz / u_xlat4.xyz;\n            u_xlat6.xyz = (-vs_TEXCOORD1.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat6.xyz = u_xlat6.xyz
            / u_xlat4.xyz;\n            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat4.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat5;\n                hlslcc_movcTemp.x = (u_xlatb8.x) ? u_xlat5.x
            : u_xlat6.x;\n                hlslcc_movcTemp.y = (u_xlatb8.y) ? u_xlat5.y
            : u_xlat6.y;\n                hlslcc_movcTemp.z = (u_xlatb8.z) ? u_xlat5.z
            : u_xlat6.z;\n                u_xlat5 = hlslcc_movcTemp;\n           
            }\n            u_xlat39 = min(u_xlat5.y, u_xlat5.x);\n            u_xlat39
            = min(u_xlat5.z, u_xlat39);\n            u_xlat5.xyz = vs_TEXCOORD1.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat4.xyz = u_xlat4.xyz
            * vec3(u_xlat39) + u_xlat5.xyz;\n        } else {\n            u_xlat4.xyz
            = u_xlat16_2.xyz;\n        }\n        u_xlat16_2 = textureLod(unity_SpecCube1,
            u_xlat4.xyz, u_xlat16_38);\n        u_xlat16_9.x = u_xlat16_2.w + -1.0;\n       
            u_xlat16_9.x = unity_SpecCube1_HDR.w * u_xlat16_9.x + 1.0;\n        u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube1_HDR.x;\n        u_xlat16_9.xyz = u_xlat16_2.xyz
            * u_xlat16_9.xxx;\n        u_xlat3.xyz = vec3(u_xlat16_7) * u_xlat16_3.xyz
            + (-u_xlat16_9.xyz);\n        u_xlat19.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat3.xyz + u_xlat16_9.xyz;\n        u_xlat16_19.xyz = u_xlat19.xyz;\n   
            }\n    u_xlat3.x = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat3.x
            = inversesqrt(u_xlat3.x);\n    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD0.xyz;\n   
            u_xlat16_9.xyz = _Color.xyz * vec3(0.779083729, 0.779083729, 0.779083729);\n   
            u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat36) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat36 = max(u_xlat36,
            0.00100000005);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat0.xyz
            = vec3(u_xlat36) * u_xlat0.xyz;\n    u_xlat36 = dot(u_xlat3.xyz, u_xlat1.xyz);\n   
            u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat13 = dot(u_xlat3.xyz, u_xlat0.xyz);\n   
            u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_7
            = u_xlat0.x + u_xlat0.x;\n    u_xlat16_7 = u_xlat0.x * u_xlat16_7;\n   
            u_xlat16_7 = u_xlat16_7 * u_xlat37 + -0.5;\n    u_xlat16_45 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_10 = u_xlat16_45 * u_xlat16_45;\n    u_xlat16_10
            = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_45 = u_xlat16_45 * u_xlat16_10;\n   
            u_xlat16_45 = u_xlat16_7 * u_xlat16_45 + 1.0;\n    u_xlat16_10 = -abs(u_xlat36)
            + 1.0;\n    u_xlat16_22.x = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_22.x
            = u_xlat16_22.x * u_xlat16_22.x;\n    u_xlat16_10 = u_xlat16_10 * u_xlat16_22.x;\n   
            u_xlat16_7 = u_xlat16_7 * u_xlat16_10 + 1.0;\n    u_xlat16_7 = u_xlat16_7
            * u_xlat16_45;\n    u_xlat12 = u_xlat1.x * u_xlat16_7;\n    u_xlat24
            = u_xlat37 * u_xlat37;\n    u_xlat24 = max(u_xlat24, 0.00200000009);\n   
            u_xlat25 = (-u_xlat24) + 1.0;\n    u_xlat3.x = abs(u_xlat36) * u_xlat25
            + u_xlat24;\n    u_xlat25 = u_xlat1.x * u_xlat25 + u_xlat24;\n    u_xlat36
            = abs(u_xlat36) * u_xlat25;\n    u_xlat36 = u_xlat1.x * u_xlat3.x + u_xlat36;\n   
            u_xlat36 = u_xlat36 + 9.99999975e-06;\n    u_xlat36 = 0.5 / u_xlat36;\n   
            u_xlat25 = u_xlat24 * u_xlat24;\n    u_xlat3.x = u_xlat13 * u_xlat25
            + (-u_xlat13);\n    u_xlat13 = u_xlat3.x * u_xlat13 + 1.0;\n    u_xlat25
            = u_xlat25 * 0.318309873;\n    u_xlat13 = u_xlat13 * u_xlat13 + 1.00000001e-07;\n   
            u_xlat13 = u_xlat25 / u_xlat13;\n    u_xlat36 = u_xlat36 * u_xlat13;\n   
            u_xlat36 = u_xlat36 * 3.14159274;\n    u_xlat36 = max(u_xlat36, 9.99999975e-05);\n   
            u_xlat36 = sqrt(u_xlat36);\n    u_xlat36 = u_xlat1.x * u_xlat36;\n   
            u_xlat24 = u_xlat24 * u_xlat37;\n    u_xlat24 = (-u_xlat24) * 0.280000001
            + 1.0;\n    u_xlat16_7 = _Glossiness + 0.220916271;\n    u_xlat16_7 =
            clamp(u_xlat16_7, 0.0, 1.0);\n    u_xlat16_22.xyz = vec3(u_xlat12) *
            _LightColor0.xyz;\n    u_xlat1.xyz = vec3(u_xlat36) * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat0.x) + 1.0;\n    u_xlat16_11 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_11 = u_xlat16_11 * u_xlat16_11;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_11;\n    u_xlat16_45 = u_xlat16_45 * 0.779083729 + 0.220916301;\n   
            u_xlat0.xyw = u_xlat1.xyz * vec3(u_xlat16_45);\n    u_xlat0.xyw = u_xlat16_9.xyz
            * u_xlat16_22.xyz + u_xlat0.xyw;\n    u_xlat16_19.xyz = u_xlat16_19.xyz
            * vec3(u_xlat24);\n    u_xlat16_7 = u_xlat16_7 + -0.220916301;\n    u_xlat16_7
            = u_xlat16_10 * u_xlat16_7 + 0.220916301;\n    u_xlat0.xyz = u_xlat16_19.xyz
            * vec3(u_xlat16_7) + u_xlat0.xyw;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nvarying highp
            vec3 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying mediump
            vec3 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4
            vs_TEXCOORD5;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD0.xyz = u_xlat0.xyz;\n   
            u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2 = u_xlat0.x * u_xlat0.x
            + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD2.xyz
            = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD4
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump
            vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump float _Glossiness;\nuniform
            \tmediump vec4 _Color;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec3 vs_TEXCOORD0;\nvarying
            highp vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec3 u_xlat1;\nmediump vec3
            u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_4;\nlowp
            vec4 u_xlat10_4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nbvec3
            u_xlatb8;\nmediump float u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            float u_xlat16_11;\nmediump float u_xlat16_12;\nfloat u_xlat13;\nfloat
            u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat
            u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nmediump
            float u_xlat16_41;\nfloat u_xlat42;\nbool u_xlatb42;\nmediump float u_xlat16_49;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n   
            u_xlat1.xyz = vec3(u_xlat39) * u_xlat0.xyz;\n    u_xlat40 = (-_Glossiness)
            + 1.0;\n    u_xlat16_2.x = dot((-u_xlat1.xyz), vs_TEXCOORD0.xyz);\n   
            u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;\n    u_xlat16_2.xyz = vs_TEXCOORD0.xyz
            * (-u_xlat16_2.xxx) + (-u_xlat1.xyz);\n    u_xlat3.xyz = vs_TEXCOORD0.xyz;\n   
            u_xlat3.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_4.y
            = dot(unity_SHAg, u_xlat3);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat3);\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD2.xyz;\n    u_xlat16_4.xyz
            = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat3.xyz = log2(u_xlat16_4.xyz);\n   
            u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat3.xyz = exp2(u_xlat3.xyz);\n    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 =
            0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb42){\n        u_xlat42
            = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n        u_xlat42 = inversesqrt(u_xlat42);\n       
            u_xlat5.xyz = u_xlat16_2.xyz * vec3(u_xlat42);\n        u_xlat6.xyz =
            (-vs_TEXCOORD1.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat6.xyz
            = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD1.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat42 =
            min(u_xlat6.z, u_xlat42);\n        u_xlat6.xyz = vs_TEXCOORD1.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat42) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_2.xyz;\n    }\n    u_xlat16_41 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_41 = u_xlat40 * u_xlat16_41;\n   
            u_xlat16_41 = u_xlat16_41 * 6.0;\n    u_xlat10_4 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_41);\n    u_xlat16_9 = u_xlat10_4.w + -1.0;\n   
            u_xlat16_9 = unity_SpecCube0_HDR.w * u_xlat16_9 + 1.0;\n    u_xlat16_9
            = u_xlat16_9 * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_4.xyz
            * vec3(u_xlat16_9);\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat5.xyz = u_xlat16_2.xyz
            * vec3(u_xlat42);\n            u_xlat6.xyz = (-vs_TEXCOORD1.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n            u_xlat7.xyz = (-vs_TEXCOORD1.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat7.xyz = u_xlat7.xyz
            / u_xlat5.xyz;\n            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat5.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat6;\n                hlslcc_movcTemp.x = (u_xlatb8.x) ? u_xlat6.x
            : u_xlat7.x;\n                hlslcc_movcTemp.y = (u_xlatb8.y) ? u_xlat6.y
            : u_xlat7.y;\n                hlslcc_movcTemp.z = (u_xlatb8.z) ? u_xlat6.z
            : u_xlat7.z;\n                u_xlat6 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat6.y, u_xlat6.x);\n            u_xlat42
            = min(u_xlat6.z, u_xlat42);\n            u_xlat6.xyz = vs_TEXCOORD1.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat5.xyz = u_xlat5.xyz
            * vec3(u_xlat42) + u_xlat6.xyz;\n        } else {\n            u_xlat5.xyz
            = u_xlat16_2.xyz;\n        }\n        u_xlat10_2 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat5.xyz, u_xlat16_41);\n        u_xlat16_10.x = u_xlat10_2.w + -1.0;\n       
            u_xlat16_10.x = unity_SpecCube1_HDR.w * u_xlat16_10.x + 1.0;\n       
            u_xlat16_10.x = u_xlat16_10.x * unity_SpecCube1_HDR.x;\n        u_xlat16_10.xyz
            = u_xlat10_2.xyz * u_xlat16_10.xxx;\n        u_xlat5.xyz = vec3(u_xlat16_9)
            * u_xlat10_4.xyz + (-u_xlat16_10.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_10.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat42 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat42
            = inversesqrt(u_xlat42);\n    u_xlat5.xyz = vec3(u_xlat42) * vs_TEXCOORD0.xyz;\n   
            u_xlat16_10.xyz = _Color.xyz * vec3(0.779083729, 0.779083729, 0.779083729);\n   
            u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat0.xyz
            = vec3(u_xlat39) * u_xlat0.xyz;\n    u_xlat39 = dot(u_xlat5.xyz, u_xlat1.xyz);\n   
            u_xlat1.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat14 = dot(u_xlat5.xyz, u_xlat0.xyz);\n   
            u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_9
            = u_xlat0.x + u_xlat0.x;\n    u_xlat16_9 = u_xlat0.x * u_xlat16_9;\n   
            u_xlat16_9 = u_xlat16_9 * u_xlat40 + -0.5;\n    u_xlat16_49 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11 = u_xlat16_49 * u_xlat16_49;\n    u_xlat16_11
            = u_xlat16_11 * u_xlat16_11;\n    u_xlat16_49 = u_xlat16_49 * u_xlat16_11;\n   
            u_xlat16_49 = u_xlat16_9 * u_xlat16_49 + 1.0;\n    u_xlat16_11 = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11 * u_xlat16_11;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11 = u_xlat16_11 * u_xlat16_24.x;\n   
            u_xlat16_9 = u_xlat16_9 * u_xlat16_11 + 1.0;\n    u_xlat16_9 = u_xlat16_9
            * u_xlat16_49;\n    u_xlat13 = u_xlat1.x * u_xlat16_9;\n    u_xlat26
            = u_xlat40 * u_xlat40;\n    u_xlat26 = max(u_xlat26, 0.00200000009);\n   
            u_xlat27 = (-u_xlat26) + 1.0;\n    u_xlat42 = abs(u_xlat39) * u_xlat27
            + u_xlat26;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat26;\n    u_xlat39
            = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat42 + u_xlat39;\n   
            u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39 = 0.5 / u_xlat39;\n   
            u_xlat27 = u_xlat26 * u_xlat26;\n    u_xlat42 = u_xlat14 * u_xlat27 +
            (-u_xlat14);\n    u_xlat14 = u_xlat42 * u_xlat14 + 1.0;\n    u_xlat27
            = u_xlat27 * 0.318309873;\n    u_xlat14 = u_xlat14 * u_xlat14 + 1.00000001e-07;\n   
            u_xlat14 = u_xlat27 / u_xlat14;\n    u_xlat39 = u_xlat39 * u_xlat14;\n   
            u_xlat39 = u_xlat39 * 3.14159274;\n    u_xlat39 = max(u_xlat39, 9.99999975e-05);\n   
            u_xlat39 = sqrt(u_xlat39);\n    u_xlat39 = u_xlat1.x * u_xlat39;\n   
            u_xlat26 = u_xlat26 * u_xlat40;\n    u_xlat26 = (-u_xlat26) * 0.280000001
            + 1.0;\n    u_xlat16_9 = _Glossiness + 0.220916271;\n    u_xlat16_9 =
            clamp(u_xlat16_9, 0.0, 1.0);\n    u_xlat16_24.xyz = _LightColor0.xyz
            * vec3(u_xlat13) + u_xlat3.xyz;\n    u_xlat1.xyz = vec3(u_xlat39) * _LightColor0.xyz;\n   
            u_xlat16_49 = (-u_xlat0.x) + 1.0;\n    u_xlat16_12 = u_xlat16_49 * u_xlat16_49;\n   
            u_xlat16_12 = u_xlat16_12 * u_xlat16_12;\n    u_xlat16_49 = u_xlat16_49
            * u_xlat16_12;\n    u_xlat16_49 = u_xlat16_49 * 0.779083729 + 0.220916301;\n   
            u_xlat0.xyw = u_xlat1.xyz * vec3(u_xlat16_49);\n    u_xlat0.xyw = u_xlat16_10.xyz
            * u_xlat16_24.xyz + u_xlat0.xyw;\n    u_xlat16_22.xyz = u_xlat16_22.xyz
            * vec3(u_xlat26);\n    u_xlat16_9 = u_xlat16_9 + -0.220916301;\n    u_xlat16_9
            = u_xlat16_11 * u_xlat16_9 + 0.220916301;\n    u_xlat0.xyz = u_xlat16_22.xyz
            * vec3(u_xlat16_9) + u_xlat0.xyw;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nout highp vec3 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD4;\nout
            highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD0.xyz = u_xlat0.xyz;\n   
            u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2 = u_xlat0.x * u_xlat0.x
            + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD2.xyz
            = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD4
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump float _Glossiness;\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(1) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec3 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin mediump vec3
            vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nvec3 u_xlat1;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nmediump
            vec4 u_xlat16_4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nbvec3
            u_xlatb8;\nmediump float u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            float u_xlat16_11;\nmediump float u_xlat16_12;\nfloat u_xlat13;\nfloat
            u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat
            u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nmediump
            float u_xlat16_41;\nfloat u_xlat42;\nbool u_xlatb42;\nmediump float u_xlat16_49;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n   
            u_xlat1.xyz = vec3(u_xlat39) * u_xlat0.xyz;\n    u_xlat40 = (-_Glossiness)
            + 1.0;\n    u_xlat16_2.x = dot((-u_xlat1.xyz), vs_TEXCOORD0.xyz);\n   
            u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;\n    u_xlat16_2.xyz = vs_TEXCOORD0.xyz
            * (-u_xlat16_2.xxx) + (-u_xlat1.xyz);\n    u_xlat3.xyz = vs_TEXCOORD0.xyz;\n   
            u_xlat3.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_4.y
            = dot(unity_SHAg, u_xlat3);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat3);\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD2.xyz;\n    u_xlat16_4.xyz
            = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat3.xyz = log2(u_xlat16_4.xyz);\n   
            u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat3.xyz = exp2(u_xlat3.xyz);\n    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 =
            0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb42){\n        u_xlat42
            = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n        u_xlat42 = inversesqrt(u_xlat42);\n       
            u_xlat5.xyz = u_xlat16_2.xyz * vec3(u_xlat42);\n        u_xlat6.xyz =
            (-vs_TEXCOORD1.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat6.xyz
            = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD1.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat42 =
            min(u_xlat6.z, u_xlat42);\n        u_xlat6.xyz = vs_TEXCOORD1.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat42) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_2.xyz;\n    }\n    u_xlat16_41 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_41 = u_xlat40 * u_xlat16_41;\n   
            u_xlat16_41 = u_xlat16_41 * 6.0;\n    u_xlat16_4 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_41);\n    u_xlat16_9 = u_xlat16_4.w + -1.0;\n   
            u_xlat16_9 = unity_SpecCube0_HDR.w * u_xlat16_9 + 1.0;\n    u_xlat16_9
            = u_xlat16_9 * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_4.xyz
            * vec3(u_xlat16_9);\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat5.xyz = u_xlat16_2.xyz
            * vec3(u_xlat42);\n            u_xlat6.xyz = (-vs_TEXCOORD1.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n            u_xlat7.xyz = (-vs_TEXCOORD1.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat7.xyz = u_xlat7.xyz
            / u_xlat5.xyz;\n            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat5.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat6;\n                hlslcc_movcTemp.x = (u_xlatb8.x) ? u_xlat6.x
            : u_xlat7.x;\n                hlslcc_movcTemp.y = (u_xlatb8.y) ? u_xlat6.y
            : u_xlat7.y;\n                hlslcc_movcTemp.z = (u_xlatb8.z) ? u_xlat6.z
            : u_xlat7.z;\n                u_xlat6 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat6.y, u_xlat6.x);\n            u_xlat42
            = min(u_xlat6.z, u_xlat42);\n            u_xlat6.xyz = vs_TEXCOORD1.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat5.xyz = u_xlat5.xyz
            * vec3(u_xlat42) + u_xlat6.xyz;\n        } else {\n            u_xlat5.xyz
            = u_xlat16_2.xyz;\n        }\n        u_xlat16_2 = textureLod(unity_SpecCube1,
            u_xlat5.xyz, u_xlat16_41);\n        u_xlat16_10.x = u_xlat16_2.w + -1.0;\n       
            u_xlat16_10.x = unity_SpecCube1_HDR.w * u_xlat16_10.x + 1.0;\n       
            u_xlat16_10.x = u_xlat16_10.x * unity_SpecCube1_HDR.x;\n        u_xlat16_10.xyz
            = u_xlat16_2.xyz * u_xlat16_10.xxx;\n        u_xlat5.xyz = vec3(u_xlat16_9)
            * u_xlat16_4.xyz + (-u_xlat16_10.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_10.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat42 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat42
            = inversesqrt(u_xlat42);\n    u_xlat5.xyz = vec3(u_xlat42) * vs_TEXCOORD0.xyz;\n   
            u_xlat16_10.xyz = _Color.xyz * vec3(0.779083729, 0.779083729, 0.779083729);\n   
            u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat0.xyz
            = vec3(u_xlat39) * u_xlat0.xyz;\n    u_xlat39 = dot(u_xlat5.xyz, u_xlat1.xyz);\n   
            u_xlat1.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat14 = dot(u_xlat5.xyz, u_xlat0.xyz);\n   
            u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_9
            = u_xlat0.x + u_xlat0.x;\n    u_xlat16_9 = u_xlat0.x * u_xlat16_9;\n   
            u_xlat16_9 = u_xlat16_9 * u_xlat40 + -0.5;\n    u_xlat16_49 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11 = u_xlat16_49 * u_xlat16_49;\n    u_xlat16_11
            = u_xlat16_11 * u_xlat16_11;\n    u_xlat16_49 = u_xlat16_49 * u_xlat16_11;\n   
            u_xlat16_49 = u_xlat16_9 * u_xlat16_49 + 1.0;\n    u_xlat16_11 = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11 * u_xlat16_11;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11 = u_xlat16_11 * u_xlat16_24.x;\n   
            u_xlat16_9 = u_xlat16_9 * u_xlat16_11 + 1.0;\n    u_xlat16_9 = u_xlat16_9
            * u_xlat16_49;\n    u_xlat13 = u_xlat1.x * u_xlat16_9;\n    u_xlat26
            = u_xlat40 * u_xlat40;\n    u_xlat26 = max(u_xlat26, 0.00200000009);\n   
            u_xlat27 = (-u_xlat26) + 1.0;\n    u_xlat42 = abs(u_xlat39) * u_xlat27
            + u_xlat26;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat26;\n    u_xlat39
            = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat42 + u_xlat39;\n   
            u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39 = 0.5 / u_xlat39;\n   
            u_xlat27 = u_xlat26 * u_xlat26;\n    u_xlat42 = u_xlat14 * u_xlat27 +
            (-u_xlat14);\n    u_xlat14 = u_xlat42 * u_xlat14 + 1.0;\n    u_xlat27
            = u_xlat27 * 0.318309873;\n    u_xlat14 = u_xlat14 * u_xlat14 + 1.00000001e-07;\n   
            u_xlat14 = u_xlat27 / u_xlat14;\n    u_xlat39 = u_xlat39 * u_xlat14;\n   
            u_xlat39 = u_xlat39 * 3.14159274;\n    u_xlat39 = max(u_xlat39, 9.99999975e-05);\n   
            u_xlat39 = sqrt(u_xlat39);\n    u_xlat39 = u_xlat1.x * u_xlat39;\n   
            u_xlat26 = u_xlat26 * u_xlat40;\n    u_xlat26 = (-u_xlat26) * 0.280000001
            + 1.0;\n    u_xlat16_9 = _Glossiness + 0.220916271;\n    u_xlat16_9 =
            clamp(u_xlat16_9, 0.0, 1.0);\n    u_xlat16_24.xyz = _LightColor0.xyz
            * vec3(u_xlat13) + u_xlat3.xyz;\n    u_xlat1.xyz = vec3(u_xlat39) * _LightColor0.xyz;\n   
            u_xlat16_49 = (-u_xlat0.x) + 1.0;\n    u_xlat16_12 = u_xlat16_49 * u_xlat16_49;\n   
            u_xlat16_12 = u_xlat16_12 * u_xlat16_12;\n    u_xlat16_49 = u_xlat16_49
            * u_xlat16_12;\n    u_xlat16_49 = u_xlat16_49 * 0.779083729 + 0.220916301;\n   
            u_xlat0.xyw = u_xlat1.xyz * vec3(u_xlat16_49);\n    u_xlat0.xyw = u_xlat16_10.xyz
            * u_xlat16_24.xyz + u_xlat0.xyw;\n    u_xlat16_22.xyz = u_xlat16_22.xyz
            * vec3(u_xlat26);\n    u_xlat16_9 = u_xlat16_9 + -0.220916301;\n    u_xlat16_9
            = u_xlat16_11 * u_xlat16_9 + 0.220916301;\n    u_xlat0.xyz = u_xlat16_22.xyz
            * vec3(u_xlat16_9) + u_xlat0.xyw;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nvarying highp
            vec3 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Glossiness;\nuniform \tmediump vec4 _Color;\nvarying
            highp vec3 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat5;\nfloat u_xlat6;\nmediump
            float u_xlat16_8;\nfloat u_xlat10;\nfloat u_xlat11;\nmediump float u_xlat16_13;\nfloat
            u_xlat15;\nfloat u_xlat16;\nfloat u_xlat17;\nmediump float u_xlat16_18;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat15 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat15 = max(u_xlat15, 0.00100000005);\n    u_xlat15
            = inversesqrt(u_xlat15);\n    u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;\n   
            u_xlat15 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat2.xyz = vec3(u_xlat15) * vs_TEXCOORD0.xyz;\n    u_xlat15 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat1.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);\n    u_xlat1.x = clamp(u_xlat1.x,
            0.0, 1.0);\n    u_xlat6 = (-_Glossiness) + 1.0;\n    u_xlat11 = u_xlat6
            * u_xlat6;\n    u_xlat11 = max(u_xlat11, 0.00200000009);\n    u_xlat16
            = u_xlat11 * u_xlat11;\n    u_xlat17 = u_xlat15 * u_xlat16 + (-u_xlat15);\n   
            u_xlat15 = u_xlat17 * u_xlat15 + 1.0;\n    u_xlat15 = u_xlat15 * u_xlat15
            + 1.00000001e-07;\n    u_xlat16 = u_xlat16 * 0.318309873;\n    u_xlat15
            = u_xlat16 / u_xlat15;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n   
            u_xlat5 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat5 =
            clamp(u_xlat5, 0.0, 1.0);\n    u_xlat10 = (-u_xlat11) + 1.0;\n    u_xlat16
            = abs(u_xlat0.x) * u_xlat10 + u_xlat11;\n    u_xlat10 = u_xlat5 * u_xlat10
            + u_xlat11;\n    u_xlat10 = u_xlat10 * abs(u_xlat0.x);\n    u_xlat16_3.x
            = -abs(u_xlat0.x) + 1.0;\n    u_xlat0.x = u_xlat5 * u_xlat16 + u_xlat10;\n   
            u_xlat0.x = u_xlat0.x + 9.99999975e-06;\n    u_xlat0.x = 0.5 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat15 * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat5 * u_xlat0.x;\n    u_xlat0.xzw = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_8 = (-u_xlat1.x) + 1.0;\n    u_xlat16_13 = u_xlat16_8 * u_xlat16_8;\n   
            u_xlat16_13 = u_xlat16_13 * u_xlat16_13;\n    u_xlat16_8 = u_xlat16_8
            * u_xlat16_13;\n    u_xlat16_8 = u_xlat16_8 * 0.779083729 + 0.220916301;\n   
            u_xlat0.xzw = u_xlat0.xzw * vec3(u_xlat16_8);\n    u_xlat16_8 = u_xlat16_3.x
            * u_xlat16_3.x;\n    u_xlat16_8 = u_xlat16_8 * u_xlat16_8;\n    u_xlat16_3.x
            = u_xlat16_3.x * u_xlat16_8;\n    u_xlat16_8 = u_xlat1.x + u_xlat1.x;\n   
            u_xlat16_8 = u_xlat1.x * u_xlat16_8;\n    u_xlat16_8 = u_xlat16_8 * u_xlat6
            + -0.5;\n    u_xlat16_3.x = u_xlat16_8 * u_xlat16_3.x + 1.0;\n    u_xlat16_13
            = (-u_xlat5) + 1.0;\n    u_xlat16_18 = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_13
            * u_xlat16_18;\n    u_xlat16_8 = u_xlat16_8 * u_xlat16_13 + 1.0;\n   
            u_xlat16_3.x = u_xlat16_3.x * u_xlat16_8;\n    u_xlat5 = u_xlat5 * u_xlat16_3.x;\n   
            u_xlat16_3.xyz = vec3(u_xlat5) * _LightColor0.xyz;\n    u_xlat16_4.xyz
            = _Color.xyz * vec3(0.779083729, 0.779083729, 0.779083729);\n    u_xlat0.xyz
            = u_xlat16_4.xyz * u_xlat16_3.xyz + u_xlat0.xzw;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin
            highp vec3 in_NORMAL0;\nout highp vec3 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Glossiness;\nuniform \tmediump vec4 _Color;\nin highp
            vec3 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nlayout(location = 0)
            out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat5;\nfloat u_xlat6;\nmediump
            float u_xlat16_8;\nfloat u_xlat10;\nfloat u_xlat11;\nmediump float u_xlat16_13;\nfloat
            u_xlat15;\nfloat u_xlat16;\nfloat u_xlat17;\nmediump float u_xlat16_18;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat15 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat15 = max(u_xlat15, 0.00100000005);\n    u_xlat15
            = inversesqrt(u_xlat15);\n    u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;\n   
            u_xlat15 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat2.xyz = vec3(u_xlat15) * vs_TEXCOORD0.xyz;\n    u_xlat15 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat1.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);\n    u_xlat1.x = clamp(u_xlat1.x,
            0.0, 1.0);\n    u_xlat6 = (-_Glossiness) + 1.0;\n    u_xlat11 = u_xlat6
            * u_xlat6;\n    u_xlat11 = max(u_xlat11, 0.00200000009);\n    u_xlat16
            = u_xlat11 * u_xlat11;\n    u_xlat17 = u_xlat15 * u_xlat16 + (-u_xlat15);\n   
            u_xlat15 = u_xlat17 * u_xlat15 + 1.0;\n    u_xlat15 = u_xlat15 * u_xlat15
            + 1.00000001e-07;\n    u_xlat16 = u_xlat16 * 0.318309873;\n    u_xlat15
            = u_xlat16 / u_xlat15;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n   
            u_xlat5 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat5 =
            clamp(u_xlat5, 0.0, 1.0);\n    u_xlat10 = (-u_xlat11) + 1.0;\n    u_xlat16
            = abs(u_xlat0.x) * u_xlat10 + u_xlat11;\n    u_xlat10 = u_xlat5 * u_xlat10
            + u_xlat11;\n    u_xlat10 = u_xlat10 * abs(u_xlat0.x);\n    u_xlat16_3.x
            = -abs(u_xlat0.x) + 1.0;\n    u_xlat0.x = u_xlat5 * u_xlat16 + u_xlat10;\n   
            u_xlat0.x = u_xlat0.x + 9.99999975e-06;\n    u_xlat0.x = 0.5 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat15 * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat5 * u_xlat0.x;\n    u_xlat0.xzw = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_8 = (-u_xlat1.x) + 1.0;\n    u_xlat16_13 = u_xlat16_8 * u_xlat16_8;\n   
            u_xlat16_13 = u_xlat16_13 * u_xlat16_13;\n    u_xlat16_8 = u_xlat16_8
            * u_xlat16_13;\n    u_xlat16_8 = u_xlat16_8 * 0.779083729 + 0.220916301;\n   
            u_xlat0.xzw = u_xlat0.xzw * vec3(u_xlat16_8);\n    u_xlat16_8 = u_xlat16_3.x
            * u_xlat16_3.x;\n    u_xlat16_8 = u_xlat16_8 * u_xlat16_8;\n    u_xlat16_3.x
            = u_xlat16_3.x * u_xlat16_8;\n    u_xlat16_8 = u_xlat1.x + u_xlat1.x;\n   
            u_xlat16_8 = u_xlat1.x * u_xlat16_8;\n    u_xlat16_8 = u_xlat16_8 * u_xlat6
            + -0.5;\n    u_xlat16_3.x = u_xlat16_8 * u_xlat16_3.x + 1.0;\n    u_xlat16_13
            = (-u_xlat5) + 1.0;\n    u_xlat16_18 = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_13
            * u_xlat16_18;\n    u_xlat16_8 = u_xlat16_8 * u_xlat16_13 + 1.0;\n   
            u_xlat16_3.x = u_xlat16_3.x * u_xlat16_8;\n    u_xlat5 = u_xlat5 * u_xlat16_3.x;\n   
            u_xlat16_3.xyz = vec3(u_xlat5) * _LightColor0.xyz;\n    u_xlat16_4.xyz
            = _Color.xyz * vec3(0.779083729, 0.779083729, 0.779083729);\n    u_xlat0.xyz
            = u_xlat16_4.xyz * u_xlat16_3.xyz + u_xlat0.xzw;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_SHADOW_MIXING
        - POINT
        - POINT_COOKIE
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - SHADOWS_SOFT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 47
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
    ShaderPath: Assets/Hiker/Shaders/Builtin/HikerToyColorStandard.shader
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SHADOWS_DEPTH
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    - SHADOWS_CUBE
    - SHADOWS_SOFT
    fallbackShader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 9a21c47c520b11b439f39272873be47f, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = vec3(0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Color;\nuniform lowp sampler2D _MainTex;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD3;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    SV_Target0.xyz = u_xlat0.xyz
            * vs_TEXCOORD3.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD5;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = vec3(0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Color;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin mediump
            vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvoid main()\n{\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    SV_Target0.xyz = u_xlat0.xyz * vs_TEXCOORD3.xyz +
            u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = vec3(0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Color;\nuniform lowp sampler2D _MainTex;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD3;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    SV_Target0.xyz = u_xlat0.xyz
            * vs_TEXCOORD3.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD5;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz
            = vec3(0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Color;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin mediump
            vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvoid main()\n{\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    SV_Target0.xyz = u_xlat0.xyz * vs_TEXCOORD3.xyz +
            u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
    ShaderPath: Assets/Hiker/Shaders/Builtin/HikerUnlitSupportShadowmap.shader
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 053c4734a60b4e64d9b9a034da26b7c9, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D
            _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nmediump float u_xlat16_7;\nvoid main()\n{\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlat16_1.xyz = u_xlat0.xyz * _LightColor0.xyz;\n   
            u_xlat16_7 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_7
            = max(u_xlat16_7, 0.0);\n    SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump
            float u_xlat16_7;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_1.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    u_xlat16_7 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_7 = max(u_xlat16_7, 0.0);\n   
            SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute
            highp vec4 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp
            vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying mediump
            vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D
            _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nmediump
            float u_xlat16_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec3
            u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0
            = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0 =
            max(u_xlat16_0, 0.0);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = u_xlat1.xyz
            * _LightColor0.xyz;\n    u_xlat16_2.xyz = u_xlat1.xyz * vs_TEXCOORD3.xyz;\n   
            SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_0) + u_xlat16_2.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec4 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4
            u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump float u_xlat16_0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid
            main()\n{\n    u_xlat16_0 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_0 = max(u_xlat16_0, 0.0);\n    u_xlat16_1.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * _LightColor0.xyz;\n    u_xlat16_2.xyz
            = u_xlat1.xyz * vs_TEXCOORD3.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz
            * vec3(u_xlat16_0) + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D
            _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nmediump float u_xlat16_7;\nvoid main()\n{\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlat16_1.xyz = u_xlat0.xyz * _LightColor0.xyz;\n   
            u_xlat16_7 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_7
            = max(u_xlat16_7, 0.0);\n    SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump
            float u_xlat16_7;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_1.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    u_xlat16_7 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_7 = max(u_xlat16_7, 0.0);\n   
            SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - POINT_COOKIE
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        KeywordsMinimalCardinality: 5
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tvec4 unity_LightPosition[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 glstate_lightmodel_ambient;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Emission;\nuniform
            \tmediump float _Shininess;\nuniform \tvec4 _MainTex_ST;\nattribute highp
            vec3 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec3 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nvec3
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump
            vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat
            u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump float
            u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz,
            in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz
            = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz *
            glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess
            * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n   
            u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<8 ; u_xlati_loop_1++)\n    {\n       
            u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n           
            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44
            = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44)
            * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n           
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n           
            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n           
            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44
            * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0
            gl_FragData[0]\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_1.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz;\n    SV_Target0.xyz
            = u_xlat16_1.xyz * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: Vertex
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump
            vec4 _Emission;\nuniform \tmediump float _Shininess;\nuniform \tivec4
            unity_VertexLightParams;\nuniform \tvec4 _MainTex_ST;\nin highp vec3
            in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec3 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec3 vs_COLOR1;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3
            u_xlat3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump
            float u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz,
            in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz
            = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz *
            glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess
            * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n   
            u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<unity_VertexLightParams.x ; u_xlati_loop_1++)\n   
            {\n        u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n           
            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44
            = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44)
            * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n           
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n           
            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n           
            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44
            * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec3 vs_COLOR1;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec3 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vs_COLOR0.xyz;\n   
            SV_Target0.xyz = u_xlat16_1.xyz * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: Vertex
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        KeywordGroups:
        - Keywords:
          - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - POINT
          - SPOT
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: Vertex
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 unity_LightmapST;\nuniform
            \tvec4 unity_Lightmap_ST;\nuniform \tvec4 _MainTex_ST;\nattribute highp
            vec3 in_POSITION0;\nattribute highp vec3 in_TEXCOORD1;\nattribute highp
            vec3 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy
            + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD1.xy * unity_Lightmap_ST.xy
            + unity_Lightmap_ST.zw;\n    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform \tmediump
            vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform mediump sampler2D
            unity_Lightmap;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp
            vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = texture2D(unity_Lightmap, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * unity_Lightmap_HDR.x;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xxx;\n   
            u_xlat16_1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD2.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat10_0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 unity_LightmapST;\nuniform \tvec4 unity_Lightmap_ST;\nuniform
            \tvec4 _MainTex_ST;\nin highp vec3 in_POSITION0;\nin highp vec3 in_TEXCOORD1;\nin
            highp vec3 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec2
            vs_TEXCOORD1;\nout highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy
            + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD1.xy * unity_Lightmap_ST.xy
            + unity_Lightmap_ST.zw;\n    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D unity_Lightmap;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec2 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = texture(unity_Lightmap, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * unity_Lightmap_HDR.x;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xxx;\n   
            u_xlat16_1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD2.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: VertexLM
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - POINT
    - SPOT
    - SHADOWS_DEPTH
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    - INSTANCING_ON
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 10721, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec3 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec3 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            vs_COLOR0 = in_COLOR0;\n    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nlowp vec4
            u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            SV_Target0 = u_xlat10_0 * vs_COLOR0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec3 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec3 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    vs_COLOR0
            = in_COLOR0;\n    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    SV_Target0 = u_xlat16_0
            * vs_COLOR0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        KeywordGroups:
        - Keywords:
          - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 10721, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 10721, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 10721, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 10721, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 10721, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 10721, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tvec4 unity_LightPosition[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 glstate_lightmodel_ambient;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec3 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec3 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nfloat u_xlat15;\nmediump float u_xlat16_17;\nvoid main()\n{\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].zzz + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].www
            + u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat1.xyz;\n    u_xlat0.y = dot(u_xlat1.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].www
            + u_xlat1.xyz;\n    u_xlat0.z = dot(u_xlat1.xyz, in_NORMAL0.xyz);\n   
            u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat16_2.x = dot(u_xlat0.xyz,
            unity_LightPosition[0].xyz);\n    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_2.xxx * unity_LightColor[0].xyz;\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_2.xyz = min(u_xlat16_2.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_2.xyz = u_xlat16_2.xyz + glstate_lightmodel_ambient.xyz;\n   
            u_xlat16_17 = dot(u_xlat0.xyz, unity_LightPosition[1].xyz);\n    u_xlat16_17
            = max(u_xlat16_17, 0.0);\n    u_xlat16_3.xyz = vec3(u_xlat16_17) * unity_LightColor[1].xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_3.xyz
            = min(u_xlat16_3.xyz, vec3(1.0, 1.0, 1.0));\n    u_xlat16_2.xyz = u_xlat16_2.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_17 = dot(u_xlat0.xyz, unity_LightPosition[2].xyz);\n   
            u_xlat16_17 = max(u_xlat16_17, 0.0);\n    u_xlat16_3.xyz = vec3(u_xlat16_17)
            * unity_LightColor[2].xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.5,
            0.5, 0.5);\n    u_xlat16_3.xyz = min(u_xlat16_3.xyz, vec3(1.0, 1.0, 1.0));\n   
            u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_17 =
            dot(u_xlat0.xyz, unity_LightPosition[3].xyz);\n    u_xlat16_17 = max(u_xlat16_17,
            0.0);\n    u_xlat16_3.xyz = vec3(u_xlat16_17) * unity_LightColor[3].xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_3.xyz
            = min(u_xlat16_3.xyz, vec3(1.0, 1.0, 1.0));\n    u_xlat16_2.xyz = u_xlat16_2.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_17 = dot(u_xlat0.xyz, unity_LightPosition[4].xyz);\n   
            u_xlat16_17 = max(u_xlat16_17, 0.0);\n    u_xlat16_3.xyz = vec3(u_xlat16_17)
            * unity_LightColor[4].xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.5,
            0.5, 0.5);\n    u_xlat16_3.xyz = min(u_xlat16_3.xyz, vec3(1.0, 1.0, 1.0));\n   
            u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_17 =
            dot(u_xlat0.xyz, unity_LightPosition[5].xyz);\n    u_xlat16_17 = max(u_xlat16_17,
            0.0);\n    u_xlat16_3.xyz = vec3(u_xlat16_17) * unity_LightColor[5].xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_3.xyz
            = min(u_xlat16_3.xyz, vec3(1.0, 1.0, 1.0));\n    u_xlat16_2.xyz = u_xlat16_2.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_17 = dot(u_xlat0.xyz, unity_LightPosition[6].xyz);\n   
            u_xlat16_3.x = dot(u_xlat0.xyz, unity_LightPosition[7].xyz);\n    u_xlat16_3.x
            = max(u_xlat16_3.x, 0.0);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * unity_LightColor[7].xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_3.xyz
            = min(u_xlat16_3.xyz, vec3(1.0, 1.0, 1.0));\n    u_xlat16_17 = max(u_xlat16_17,
            0.0);\n    u_xlat16_4.xyz = vec3(u_xlat16_17) * unity_LightColor[6].xyz;\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_4.xyz
            = min(u_xlat16_4.xyz, vec3(1.0, 1.0, 1.0));\n    u_xlat16_2.xyz = u_xlat16_2.xyz
            + u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_3.xyz + u_xlat16_2.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = 1.0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nlowp vec3
            u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = u_xlat10_0.xyz
            * vs_COLOR0.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz + u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: Vertex
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tivec4 unity_VertexLightParams;\nuniform
            \tvec4 _MainTex_ST;\nin highp vec3 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec3 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat15;\nint u_xlati15;\nmediump
            float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat2.xyz;\n    u_xlat0.x
            = dot(u_xlat0.xyz, in_NORMAL0.xyz);\n    u_xlat0.y = dot(u_xlat1.xyz,
            in_NORMAL0.xyz);\n    u_xlat0.z = dot(u_xlat2.xyz, in_NORMAL0.xyz);\n   
            u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat16_3.xyz = glstate_lightmodel_ambient.xyz;\n   
            for(int u_xlati_loop_1 = 0 ; u_xlati_loop_1<unity_VertexLightParams.x
            ; u_xlati_loop_1++)\n    {\n        u_xlat16_18 = dot(u_xlat0.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_18 = max(u_xlat16_18, 0.0);\n        u_xlat16_4.xyz = vec3(u_xlat16_18)
            * unity_LightColor[u_xlati_loop_1].xyz;\n        u_xlat16_4.xyz = u_xlat16_4.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_4.xyz = min(u_xlat16_4.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat16_4.xyz;\n   
            }\n    vs_COLOR0.xyz = u_xlat16_3.xyz;\n    vs_COLOR0.xyz = clamp(vs_COLOR0.xyz,
            0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy +
            _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0.w = 1.0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec3 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vs_COLOR0.xyz;\n   
            SV_Target0.xyz = u_xlat16_1.xyz + u_xlat16_1.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: Vertex
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        KeywordGroups:
        - Keywords:
          - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - POINT
          - SPOT
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: Vertex
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 unity_LightmapST;\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec3 in_POSITION0;\nattribute highp
            vec3 in_TEXCOORD1;\nattribute highp vec3 in_TEXCOORD0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy
            + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform lowp
            sampler2D _MainTex;\nuniform mediump sampler2D unity_Lightmap;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp vec3 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = texture2D(unity_Lightmap,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w * unity_Lightmap_HDR.x;\n   
            u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xxx;\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * u_xlat10_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 unity_LightmapST;\nuniform \tvec4 _MainTex_ST;\nin highp vec3
            in_POSITION0;\nin highp vec3 in_TEXCOORD1;\nin highp vec3 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec2 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy
            + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 unity_Lightmap_HDR;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D unity_Lightmap;\nin highp vec2 vs_TEXCOORD0;\nin highp vec2
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = texture(unity_Lightmap, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * unity_Lightmap_HDR.x;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xxx;\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD1.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_1.xyz * u_xlat16_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: VertexLM
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - POINT
    - SPOT
    - SHADOWS_DEPTH
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    - INSTANCING_ON
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 10701, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec4 in_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            vs_COLOR0 = in_COLOR0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying
            highp vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nlowp vec4 u_xlat10_0;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            SV_Target0 = u_xlat10_0 * vs_COLOR0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec4
            in_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4 vs_COLOR0;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_COLOR0 = in_COLOR0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_COLOR0;\nlayout(location =
            0) out highp vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    SV_Target0 = u_xlat16_0
            * vs_COLOR0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec4 in_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            vs_COLOR0 = in_COLOR0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying
            highp vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nlowp vec4 u_xlat10_0;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat10_0.xyz = u_xlat10_0.www * u_xlat10_0.xyz;\n    SV_Target0 = u_xlat10_0
            * vs_COLOR0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _STRAIGHT_ALPHA_INPUT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec4
            in_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4 vs_COLOR0;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_COLOR0 = in_COLOR0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_COLOR0;\nlayout(location =
            0) out highp vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0.xyz
            = u_xlat16_0.www * u_xlat16_0.xyz;\n    SV_Target0 = u_xlat16_0 * vs_COLOR0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _STRAIGHT_ALPHA_INPUT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _STRAIGHT_ALPHA_INPUT
        - _
        KeywordGroups:
        - Keywords:
          - _
          - _STRAIGHT_ALPHA_INPUT
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _STRAIGHT_ALPHA_INPUT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _STRAIGHT_ALPHA_INPUT
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
        ShaderVariants: []
        DefinedKeywords:
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups:
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
    ShaderPath: Assets/Spine/Runtime/spine-unity/Shaders/Spine-Skeleton.shader
    ShaderDefinedKeywords:
    - _STRAIGHT_ALPHA_INPUT
    - SHADOWS_DEPTH
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _STRAIGHT_ALPHA_INPUT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 1e8a610c9e01c3648bac42585e5fc676, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _STRAIGHT_ALPHA_INPUT
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvoid main()\n{\n    u_xlatb0.xy =
            greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n    u_xlatb0.zw
            = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n    u_xlat0.x
            = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y ? float(1.0)
            : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n    u_xlat0.w
            = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw * u_xlat0.xy;\n   
            u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_1 + _TextureSampleAdd;\n   
            u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_1;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump vec4
            u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4 u_xlat16_1;\nvoid main()\n{\n   
            u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_1 +
            _TextureSampleAdd;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat0
            = u_xlat0.xxxx * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec4 u_xlat16_2;\nvoid main()\n{\n   
            u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_2.xyz = u_xlat10_1.xyz
            * u_xlat10_1.www + _TextureSampleAdd.xyz;\n    u_xlat16_2.w = u_xlat10_1.w
            + _TextureSampleAdd.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat0 = u_xlat0.xxxx * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _STRAIGHT_ALPHA_INPUT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump vec4
            u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nvoid
            main()\n{\n    u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_2.xyz = u_xlat16_1.xyz
            * u_xlat16_1.www + _TextureSampleAdd.xyz;\n    u_xlat16_2.w = u_xlat16_1.w
            + _TextureSampleAdd.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat0 = u_xlat0.xxxx * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _STRAIGHT_ALPHA_INPUT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nvoid main()\n{\n   
            u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_1
            + _TextureSampleAdd;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat16_2
            = u_xlat16_1.w * u_xlat0.x + -0.00100000005;\n    u_xlat0 = u_xlat0.xxxx
            * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    u_xlatb0.x = u_xlat16_2<0.0;\n   
            if(u_xlatb0.x){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump vec4
            u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4 u_xlat16_1;\nmediump float u_xlat16_2;\nvoid
            main()\n{\n    u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_1 +
            _TextureSampleAdd;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat16_2
            = u_xlat16_1.w * u_xlat0.x + -0.00100000005;\n    u_xlat0 = u_xlat0.xxxx
            * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    u_xlatb0.x = u_xlat16_2<0.0;\n   
            if(u_xlatb0.x){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec4 u_xlat16_2;\nvoid main()\n{\n   
            u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_2.xyz = u_xlat10_1.xyz
            * u_xlat10_1.www + _TextureSampleAdd.xyz;\n    u_xlat16_2.w = u_xlat10_1.w
            + _TextureSampleAdd.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.x = u_xlat16_1.w * u_xlat0.x + -0.00100000005;\n    u_xlat0
            = u_xlat0.xxxx * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    u_xlatb0.x
            = u_xlat16_2.x<0.0;\n    if(u_xlatb0.x){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - _STRAIGHT_ALPHA_INPUT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump vec4
            u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nvoid
            main()\n{\n    u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_2.xyz = u_xlat16_1.xyz
            * u_xlat16_1.www + _TextureSampleAdd.xyz;\n    u_xlat16_2.w = u_xlat16_1.w
            + _TextureSampleAdd.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.x = u_xlat16_1.w * u_xlat0.x + -0.00100000005;\n    u_xlat0
            = u_xlat0.xxxx * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    u_xlatb0.x
            = u_xlat16_2.x<0.0;\n    if(u_xlatb0.x){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - _STRAIGHT_ALPHA_INPUT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _CANVAS_GROUP_COMPATIBLE
        - _STRAIGHT_ALPHA_INPUT
        - _
        - __
        - UNITY_UI_ALPHACLIP
        KeywordGroups:
        - Keywords:
          - _
          - _STRAIGHT_ALPHA_INPUT
          hasDiscard: 1
        - Keywords:
          - _
          - _CANVAS_GROUP_COMPATIBLE
          hasDiscard: 1
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _STRAIGHT_ALPHA_INPUT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _STRAIGHT_ALPHA_INPUT
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - _STRAIGHT_ALPHA_INPUT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - _STRAIGHT_ALPHA_INPUT
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
    ShaderPath: Assets/Spine/Runtime/spine-unity/Shaders/SkeletonGraphic/Spine-SkeletonGraphic.shader
    ShaderDefinedKeywords:
    - _CANVAS_GROUP_COMPATIBLE
    - _STRAIGHT_ALPHA_INPUT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    - UNITY_UI_ALPHACLIP
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _STRAIGHT_ALPHA_INPUT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _STRAIGHT_ALPHA_INPUT
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - _STRAIGHT_ALPHA_INPUT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fa95b0fb6983c0f40a152e6f9aa82bfb, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - _STRAIGHT_ALPHA_INPUT
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvoid main()\n{\n    u_xlatb0.xy =
            greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n    u_xlatb0.zw
            = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n    u_xlat0.x
            = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y ? float(1.0)
            : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n    u_xlat0.w
            = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw * u_xlat0.xy;\n   
            u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_1 + _TextureSampleAdd;\n   
            u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_1;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump vec4
            u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4 u_xlat16_1;\nvoid main()\n{\n   
            u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_1 +
            _TextureSampleAdd;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat0
            = u_xlat0.xxxx * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nvoid main()\n{\n   
            u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_1
            + _TextureSampleAdd;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat16_2
            = u_xlat16_1.w * u_xlat0.x + -0.00100000005;\n    u_xlat0 = u_xlat0.xxxx
            * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    u_xlatb0.x = u_xlat16_2<0.0;\n   
            if(u_xlatb0.x){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump vec4
            u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4 u_xlat16_1;\nmediump float u_xlat16_2;\nvoid
            main()\n{\n    u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_1 +
            _TextureSampleAdd;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat16_2
            = u_xlat16_1.w * u_xlat0.x + -0.00100000005;\n    u_xlat0 = u_xlat0.xxxx
            * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    u_xlatb0.x = u_xlat16_2<0.0;\n   
            if(u_xlatb0.x){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _CANVAS_GROUP_COMPATIBLE
        - _STRAIGHT_ALPHA_INPUT
        - _
        - __
        - UNITY_UI_ALPHACLIP
        KeywordGroups:
        - Keywords:
          - _
          - _STRAIGHT_ALPHA_INPUT
          hasDiscard: 1
        - Keywords:
          - _
          - _CANVAS_GROUP_COMPATIBLE
          hasDiscard: 1
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
    ShaderPath: Assets/Spine/Runtime/spine-unity/Shaders/SkeletonGraphic/Spine-SkeletonGraphic-Additive.shader
    ShaderDefinedKeywords:
    - _CANVAS_GROUP_COMPATIBLE
    - _STRAIGHT_ALPHA_INPUT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    - UNITY_UI_ALPHACLIP
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: a1e4ab34b07f81e4e94f0d241c416669, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvoid main()\n{\n    u_xlatb0.xy =
            greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n    u_xlatb0.zw
            = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n    u_xlat0.x
            = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y ? float(1.0)
            : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n    u_xlat0.w
            = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw * u_xlat0.xy;\n   
            u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_1 + _TextureSampleAdd;\n   
            u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_1;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump vec4
            u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4 u_xlat16_1;\nvoid main()\n{\n   
            u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_1 +
            _TextureSampleAdd;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat0
            = u_xlat0.xxxx * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nvoid main()\n{\n   
            u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_1
            + _TextureSampleAdd;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat16_2
            = u_xlat16_1.w * u_xlat0.x + -0.00100000005;\n    u_xlat0 = u_xlat0.xxxx
            * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    u_xlatb0.x = u_xlat16_2<0.0;\n   
            if(u_xlatb0.x){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump vec4
            u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4 u_xlat16_1;\nmediump float u_xlat16_2;\nvoid
            main()\n{\n    u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_1 +
            _TextureSampleAdd;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat16_2
            = u_xlat16_1.w * u_xlat0.x + -0.00100000005;\n    u_xlat0 = u_xlat0.xxxx
            * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    u_xlatb0.x = u_xlat16_2<0.0;\n   
            if(u_xlatb0.x){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _CANVAS_GROUP_COMPATIBLE
        - _STRAIGHT_ALPHA_INPUT
        - _
        - __
        - UNITY_UI_ALPHACLIP
        KeywordGroups:
        - Keywords:
          - _
          - _STRAIGHT_ALPHA_INPUT
          hasDiscard: 1
        - Keywords:
          - _
          - _CANVAS_GROUP_COMPATIBLE
          hasDiscard: 1
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
    ShaderPath: Assets/Spine/Runtime/spine-unity/Shaders/SkeletonGraphic/Spine-SkeletonGraphic-Multiply.shader
    ShaderDefinedKeywords:
    - _CANVAS_GROUP_COMPATIBLE
    - _STRAIGHT_ALPHA_INPUT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    - UNITY_UI_ALPHACLIP
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: cfbf95ed0fe6c554c8c2ee6c8325937c, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvoid main()\n{\n    u_xlatb0.xy =
            greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n    u_xlatb0.zw
            = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n    u_xlat0.x
            = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y ? float(1.0)
            : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n    u_xlat0.w
            = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw * u_xlat0.xy;\n   
            u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_1 + _TextureSampleAdd;\n   
            u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_1;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump vec4
            u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4 u_xlat16_1;\nvoid main()\n{\n   
            u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_1 +
            _TextureSampleAdd;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat0
            = u_xlat0.xxxx * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nvoid main()\n{\n   
            u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_1
            + _TextureSampleAdd;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat16_2
            = u_xlat16_1.w * u_xlat0.x + -0.00100000005;\n    u_xlat0 = u_xlat0.xxxx
            * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    u_xlatb0.x = u_xlat16_2<0.0;\n   
            if(u_xlatb0.x){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump vec4
            u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz
            = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0
            = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4 u_xlat16_1;\nmediump float u_xlat16_2;\nvoid
            main()\n{\n    u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_1 +
            _TextureSampleAdd;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0;\n    u_xlat16_2
            = u_xlat16_1.w * u_xlat0.x + -0.00100000005;\n    u_xlat0 = u_xlat0.xxxx
            * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    u_xlatb0.x = u_xlat16_2<0.0;\n   
            if(u_xlatb0.x){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _CANVAS_GROUP_COMPATIBLE
        - _STRAIGHT_ALPHA_INPUT
        - _
        - __
        - UNITY_UI_ALPHACLIP
        KeywordGroups:
        - Keywords:
          - _
          - _STRAIGHT_ALPHA_INPUT
          hasDiscard: 1
        - Keywords:
          - _
          - _CANVAS_GROUP_COMPATIBLE
          hasDiscard: 1
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
    ShaderPath: Assets/Spine/Runtime/spine-unity/Shaders/SkeletonGraphic/Spine-SkeletonGraphic-Screen.shader
    ShaderDefinedKeywords:
    - _CANVAS_GROUP_COMPATIBLE
    - _STRAIGHT_ALPHA_INPUT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    - UNITY_UI_ALPHACLIP
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: c61244023592f95479fddd71b5067683, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _RendererColor;\nuniform
            \tmediump vec2 _Flip;\nuniform \tmediump vec4 _Color;\nattribute highp
            vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp
            vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy * _Flip.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    u_xlat0
            = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump
            vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat10_0
            * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _RendererColor;\nuniform \tmediump vec2 _Flip;\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy * _Flip.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    u_xlat0
            = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat16_0
            * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _RendererColor;\nuniform \tmediump vec2 _Flip;\nuniform
            \tmediump vec4 _Color;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5);
            return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2
            a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a;
            }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a)
            { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z);
            a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy * _Flip.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0.xy = u_xlat0.xy / u_xlat0.ww;\n   
            u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat0.xy = u_xlat0.xy
            * u_xlat1.xy;\n    u_xlat0.xy = unity_roundEven(u_xlat0.xy);\n    u_xlat0.xy
            = u_xlat0.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat0.ww * u_xlat0.xy;\n   
            gl_Position.zw = u_xlat0.zw;\n    u_xlat0 = in_COLOR0 * _Color;\n   
            u_xlat0 = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump
            vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat10_0
            * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - PIXELSNAP_ON
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _RendererColor;\nuniform
            \tmediump vec2 _Flip;\nuniform \tmediump vec4 _Color;\nin highp vec4
            in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy * _Flip.xy;\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0.xy = u_xlat0.xy / u_xlat0.ww;\n   
            u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat0.xy = u_xlat0.xy
            * u_xlat1.xy;\n    u_xlat0.xy = roundEven(u_xlat0.xy);\n    u_xlat0.xy
            = u_xlat0.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat0.ww * u_xlat0.xy;\n   
            gl_Position.zw = u_xlat0.zw;\n    u_xlat0 = in_COLOR0 * _Color;\n   
            u_xlat0 = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat16_0
            * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - PIXELSNAP_ON
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - ETC1_EXTERNAL_ALPHA
        - INSTANCING_ON
        - PIXELSNAP_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        - __
        KeywordGroups:
        - Keywords:
          - _
          - ETC1_EXTERNAL_ALPHA
          hasDiscard: 1
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - _
          - PIXELSNAP_ON
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - PIXELSNAP_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - PIXELSNAP_ON
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - PIXELSNAP_ON
    - ETC1_EXTERNAL_ALPHA
    - INSTANCING_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - PIXELSNAP_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - PIXELSNAP_ON
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec3
            u_xlat5;\nlowp vec4 u_xlat10_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat
            u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump
            vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat
            u_xlat40;\nlowp float u_xlat10_40;\nmediump float u_xlat16_41;\nmediump
            float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat u_xlat44;\nbool
            u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat10_40 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat10_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(3) uniform
            mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin highp vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nmediump vec4 u_xlat16_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat
            u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump
            vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat
            u_xlat40;\nmediump float u_xlat16_40;\nmediump float u_xlat16_41;\nmediump
            float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat u_xlat44;\nbool
            u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat16_0.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp
            sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvec4 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nlowp vec4
            u_xlat10_5;\nmediump vec3 u_xlat16_6;\nlowp vec4 u_xlat10_6;\nvec3 u_xlat7;\nvec3
            u_xlat8;\nvec3 u_xlat9;\nvec3 u_xlat10;\nbvec3 u_xlatb11;\nmediump vec3
            u_xlat16_12;\nmediump vec4 u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat
            u_xlat15;\nfloat u_xlat16;\nlowp float u_xlat10_16;\nvec3 u_xlat27;\nmediump
            vec3 u_xlat16_27;\nmediump float u_xlat16_28;\nfloat u_xlat30;\nfloat
            u_xlat31;\nmediump float u_xlat16_43;\nfloat u_xlat45;\nbool u_xlatb45;\nfloat
            u_xlat46;\nmediump float u_xlat16_47;\nmediump float u_xlat16_48;\nmediump
            float u_xlat16_50;\nmediump float u_xlat16_57;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_0 * _Color;\n   
            u_xlat16_2.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_47 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_47);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat4.xyz
            = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat16_3.xyz = u_xlat1.www *
            u_xlat16_3.xyz;\n    u_xlat16_48 = (-u_xlat16_47) + 1.0;\n    SV_Target0.w
            = u_xlat1.w * u_xlat16_47 + u_xlat16_48;\n    u_xlat10_16 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_47 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_47 = u_xlat10_16 * _OcclusionStrength + u_xlat16_47;\n    u_xlat16
            = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat4.xyz, u_xlat0.xyz);\n   
            u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz
            * (-u_xlat16_5.xxx) + u_xlat4.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat7.xyz = log2(u_xlat16_6.xyz);\n    u_xlat7.xyz
            = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat7.xyz
            = exp2(u_xlat7.xyz);\n    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat7.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb45 =
            0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb45){\n        u_xlat45
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat45 = inversesqrt(u_xlat45);\n       
            u_xlat8.xyz = vec3(u_xlat45) * u_xlat16_5.xyz;\n        u_xlat9.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat9.xyz
            = u_xlat9.xyz / u_xlat8.xyz;\n        u_xlat10.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat10.xyz = u_xlat10.xyz /
            u_xlat8.xyz;\n        u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0),
            u_xlat8.xyzx).xyz;\n        {\n            vec3 hlslcc_movcTemp = u_xlat9;\n           
            hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat9.x : u_xlat10.x;\n           
            hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat9.y : u_xlat10.y;\n           
            hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat9.z : u_xlat10.z;\n           
            u_xlat9 = hlslcc_movcTemp;\n        }\n        u_xlat45 = min(u_xlat9.y,
            u_xlat9.x);\n        u_xlat45 = min(u_xlat9.z, u_xlat45);\n        u_xlat9.xyz
            = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat8.xyz
            = u_xlat8.xyz * vec3(u_xlat45) + u_xlat9.xyz;\n    } else {\n       
            u_xlat8.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_50 = (-u_xlat16) *
            0.699999988 + 1.70000005;\n    u_xlat16_50 = u_xlat16 * u_xlat16_50;\n   
            u_xlat16_50 = u_xlat16_50 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat8.xyz, u_xlat16_50);\n    u_xlat16_12.x = u_xlat10_6.w + -1.0;\n   
            u_xlat16_12.x = unity_SpecCube0_HDR.w * u_xlat16_12.x + 1.0;\n    u_xlat16_12.x
            = u_xlat16_12.x * unity_SpecCube0_HDR.x;\n    u_xlat16_27.xyz = u_xlat10_6.xyz
            * u_xlat16_12.xxx;\n    u_xlatb45 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb45){\n        u_xlatb45 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb45){\n            u_xlat45 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat45 = inversesqrt(u_xlat45);\n            u_xlat8.xyz = vec3(u_xlat45)
            * u_xlat16_5.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat9.xyz = u_xlat9.xyz / u_xlat8.xyz;\n            u_xlat10.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat10.xyz
            = u_xlat10.xyz / u_xlat8.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat8.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat9;\n                hlslcc_movcTemp.x = (u_xlatb11.x)
            ? u_xlat9.x : u_xlat10.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y)
            ? u_xlat9.y : u_xlat10.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z)
            ? u_xlat9.z : u_xlat10.z;\n                u_xlat9 = hlslcc_movcTemp;\n           
            }\n            u_xlat45 = min(u_xlat9.y, u_xlat9.x);\n            u_xlat45
            = min(u_xlat9.z, u_xlat45);\n            u_xlat9.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat8.xyz = u_xlat8.xyz
            * vec3(u_xlat45) + u_xlat9.xyz;\n        } else {\n            u_xlat8.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat8.xyz, u_xlat16_50);\n        u_xlat16_13.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_13.x = unity_SpecCube1_HDR.w * u_xlat16_13.x + 1.0;\n       
            u_xlat16_13.x = u_xlat16_13.x * unity_SpecCube1_HDR.x;\n        u_xlat16_13.xyz
            = u_xlat10_5.xyz * u_xlat16_13.xxx;\n        u_xlat8.xyz = u_xlat16_12.xxx
            * u_xlat10_6.xyz + (-u_xlat16_13.xyz);\n        u_xlat27.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat8.xyz + u_xlat16_13.xyz;\n        u_xlat16_27.xyz = u_xlat27.xyz;\n   
            }\n    u_xlat16_12.xyz = vec3(u_xlat16_47) * u_xlat16_27.xyz;\n    u_xlat1.xzw
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat45 = dot(u_xlat1.xzw, u_xlat1.xzw);\n    u_xlat45 = max(u_xlat45,
            0.00100000005);\n    u_xlat45 = inversesqrt(u_xlat45);\n    u_xlat1.xzw
            = vec3(u_xlat45) * u_xlat1.xzw;\n    u_xlat45 = dot(u_xlat0.xyz, (-u_xlat4.xyz));\n   
            u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat4.x
            = clamp(u_xlat4.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xzw);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat15 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat1.xzw);\n    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat16_57
            = u_xlat15 + u_xlat15;\n    u_xlat16_57 = u_xlat15 * u_xlat16_57;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16 + -0.5;\n    u_xlat16_13.x = (-u_xlat4.x)
            + 1.0;\n    u_xlat16_28 = u_xlat16_13.x * u_xlat16_13.x;\n    u_xlat16_28
            = u_xlat16_28 * u_xlat16_28;\n    u_xlat16_13.x = u_xlat16_13.x * u_xlat16_28;\n   
            u_xlat16_13.x = u_xlat16_57 * u_xlat16_13.x + 1.0;\n    u_xlat16_28 =
            -abs(u_xlat45) + 1.0;\n    u_xlat16_43 = u_xlat16_28 * u_xlat16_28;\n   
            u_xlat16_43 = u_xlat16_43 * u_xlat16_43;\n    u_xlat16_28 = u_xlat16_28
            * u_xlat16_43;\n    u_xlat16_57 = u_xlat16_57 * u_xlat16_28 + 1.0;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16_13.x;\n    u_xlat30 = u_xlat4.x
            * u_xlat16_57;\n    u_xlat1.x = u_xlat16 * u_xlat16;\n    u_xlat1.x =
            max(u_xlat1.x, 0.00200000009);\n    u_xlat31 = (-u_xlat1.x) + 1.0;\n   
            u_xlat46 = abs(u_xlat45) * u_xlat31 + u_xlat1.x;\n    u_xlat31 = u_xlat4.x
            * u_xlat31 + u_xlat1.x;\n    u_xlat45 = abs(u_xlat45) * u_xlat31;\n   
            u_xlat45 = u_xlat4.x * u_xlat46 + u_xlat45;\n    u_xlat45 = u_xlat45
            + 9.99999975e-06;\n    u_xlat45 = 0.5 / u_xlat45;\n    u_xlat31 = u_xlat1.x
            * u_xlat1.x;\n    u_xlat46 = u_xlat0.x * u_xlat31 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat46 * u_xlat0.x + 1.0;\n    u_xlat31 = u_xlat31 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat31 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat45;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat4.x * u_xlat0.x;\n   
            u_xlat45 = u_xlat1.x * u_xlat16;\n    u_xlat45 = (-u_xlat45) * 0.280000001
            + 1.0;\n    u_xlat16_57 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_57!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_48 = u_xlat16_48 + _Glossiness;\n   
            u_xlat16_48 = clamp(u_xlat16_48, 0.0, 1.0);\n    u_xlat16_13.xzw = vec3(u_xlat30)
            * _LightColor0.xyz;\n    u_xlat16_13.xzw = u_xlat7.xyz * vec3(u_xlat16_47)
            + u_xlat16_13.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_47 = (-u_xlat15) + 1.0;\n    u_xlat16_57 = u_xlat16_47 * u_xlat16_47;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16_57;\n    u_xlat16_47 = u_xlat16_47
            * u_xlat16_57;\n    u_xlat16_14.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(u_xlat16_47) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_14.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_13.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_12.xyz
            * vec3(u_xlat45);\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_48);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_28) * u_xlat16_12.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3
            u_xlat4;\nmediump vec4 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec3 u_xlat7;\nvec3
            u_xlat8;\nvec3 u_xlat9;\nvec3 u_xlat10;\nbvec3 u_xlatb11;\nmediump vec3
            u_xlat16_12;\nmediump vec4 u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat
            u_xlat15;\nfloat u_xlat16;\nmediump float u_xlat16_16;\nvec3 u_xlat27;\nmediump
            vec3 u_xlat16_27;\nmediump float u_xlat16_28;\nfloat u_xlat30;\nfloat
            u_xlat31;\nmediump float u_xlat16_43;\nfloat u_xlat45;\nbool u_xlatb45;\nfloat
            u_xlat46;\nmediump float u_xlat16_47;\nmediump float u_xlat16_48;\nmediump
            float u_xlat16_50;\nmediump float u_xlat16_57;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_0 * _Color;\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_47 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_47);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat4.xyz
            = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat16_3.xyz = u_xlat1.www *
            u_xlat16_3.xyz;\n    u_xlat16_48 = (-u_xlat16_47) + 1.0;\n    SV_Target0.w
            = u_xlat1.w * u_xlat16_47 + u_xlat16_48;\n    u_xlat16_16 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_47 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_47 = u_xlat16_16 * _OcclusionStrength + u_xlat16_47;\n    u_xlat16
            = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat4.xyz, u_xlat0.xyz);\n   
            u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz
            * (-u_xlat16_5.xxx) + u_xlat4.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat7.xyz = log2(u_xlat16_6.xyz);\n    u_xlat7.xyz
            = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat7.xyz
            = exp2(u_xlat7.xyz);\n    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat7.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb45 =
            0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb45){\n        u_xlat45
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat45 = inversesqrt(u_xlat45);\n       
            u_xlat8.xyz = vec3(u_xlat45) * u_xlat16_5.xyz;\n        u_xlat9.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat9.xyz
            = u_xlat9.xyz / u_xlat8.xyz;\n        u_xlat10.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat10.xyz = u_xlat10.xyz /
            u_xlat8.xyz;\n        u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0),
            u_xlat8.xyzx).xyz;\n        {\n            vec3 hlslcc_movcTemp = u_xlat9;\n           
            hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat9.x : u_xlat10.x;\n           
            hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat9.y : u_xlat10.y;\n           
            hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat9.z : u_xlat10.z;\n           
            u_xlat9 = hlslcc_movcTemp;\n        }\n        u_xlat45 = min(u_xlat9.y,
            u_xlat9.x);\n        u_xlat45 = min(u_xlat9.z, u_xlat45);\n        u_xlat9.xyz
            = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat8.xyz
            = u_xlat8.xyz * vec3(u_xlat45) + u_xlat9.xyz;\n    } else {\n       
            u_xlat8.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_50 = (-u_xlat16) *
            0.699999988 + 1.70000005;\n    u_xlat16_50 = u_xlat16 * u_xlat16_50;\n   
            u_xlat16_50 = u_xlat16_50 * 6.0;\n    u_xlat16_6 = textureLod(unity_SpecCube0,
            u_xlat8.xyz, u_xlat16_50);\n    u_xlat16_12.x = u_xlat16_6.w + -1.0;\n   
            u_xlat16_12.x = unity_SpecCube0_HDR.w * u_xlat16_12.x + 1.0;\n    u_xlat16_12.x
            = u_xlat16_12.x * unity_SpecCube0_HDR.x;\n    u_xlat16_27.xyz = u_xlat16_6.xyz
            * u_xlat16_12.xxx;\n    u_xlatb45 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb45){\n        u_xlatb45 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb45){\n            u_xlat45 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat45 = inversesqrt(u_xlat45);\n            u_xlat8.xyz = vec3(u_xlat45)
            * u_xlat16_5.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat9.xyz = u_xlat9.xyz / u_xlat8.xyz;\n            u_xlat10.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat10.xyz
            = u_xlat10.xyz / u_xlat8.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat8.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat9;\n                hlslcc_movcTemp.x = (u_xlatb11.x)
            ? u_xlat9.x : u_xlat10.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y)
            ? u_xlat9.y : u_xlat10.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z)
            ? u_xlat9.z : u_xlat10.z;\n                u_xlat9 = hlslcc_movcTemp;\n           
            }\n            u_xlat45 = min(u_xlat9.y, u_xlat9.x);\n            u_xlat45
            = min(u_xlat9.z, u_xlat45);\n            u_xlat9.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat8.xyz = u_xlat8.xyz
            * vec3(u_xlat45) + u_xlat9.xyz;\n        } else {\n            u_xlat8.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat8.xyz, u_xlat16_50);\n        u_xlat16_13.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_13.x = unity_SpecCube1_HDR.w * u_xlat16_13.x + 1.0;\n       
            u_xlat16_13.x = u_xlat16_13.x * unity_SpecCube1_HDR.x;\n        u_xlat16_13.xyz
            = u_xlat16_5.xyz * u_xlat16_13.xxx;\n        u_xlat8.xyz = u_xlat16_12.xxx
            * u_xlat16_6.xyz + (-u_xlat16_13.xyz);\n        u_xlat27.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat8.xyz + u_xlat16_13.xyz;\n        u_xlat16_27.xyz = u_xlat27.xyz;\n   
            }\n    u_xlat16_12.xyz = vec3(u_xlat16_47) * u_xlat16_27.xyz;\n    u_xlat1.xzw
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat45 = dot(u_xlat1.xzw, u_xlat1.xzw);\n    u_xlat45 = max(u_xlat45,
            0.00100000005);\n    u_xlat45 = inversesqrt(u_xlat45);\n    u_xlat1.xzw
            = vec3(u_xlat45) * u_xlat1.xzw;\n    u_xlat45 = dot(u_xlat0.xyz, (-u_xlat4.xyz));\n   
            u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat4.x
            = clamp(u_xlat4.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xzw);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat15 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat1.xzw);\n    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat16_57
            = u_xlat15 + u_xlat15;\n    u_xlat16_57 = u_xlat15 * u_xlat16_57;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16 + -0.5;\n    u_xlat16_13.x = (-u_xlat4.x)
            + 1.0;\n    u_xlat16_28 = u_xlat16_13.x * u_xlat16_13.x;\n    u_xlat16_28
            = u_xlat16_28 * u_xlat16_28;\n    u_xlat16_13.x = u_xlat16_13.x * u_xlat16_28;\n   
            u_xlat16_13.x = u_xlat16_57 * u_xlat16_13.x + 1.0;\n    u_xlat16_28 =
            -abs(u_xlat45) + 1.0;\n    u_xlat16_43 = u_xlat16_28 * u_xlat16_28;\n   
            u_xlat16_43 = u_xlat16_43 * u_xlat16_43;\n    u_xlat16_28 = u_xlat16_28
            * u_xlat16_43;\n    u_xlat16_57 = u_xlat16_57 * u_xlat16_28 + 1.0;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16_13.x;\n    u_xlat30 = u_xlat4.x
            * u_xlat16_57;\n    u_xlat1.x = u_xlat16 * u_xlat16;\n    u_xlat1.x =
            max(u_xlat1.x, 0.00200000009);\n    u_xlat31 = (-u_xlat1.x) + 1.0;\n   
            u_xlat46 = abs(u_xlat45) * u_xlat31 + u_xlat1.x;\n    u_xlat31 = u_xlat4.x
            * u_xlat31 + u_xlat1.x;\n    u_xlat45 = abs(u_xlat45) * u_xlat31;\n   
            u_xlat45 = u_xlat4.x * u_xlat46 + u_xlat45;\n    u_xlat45 = u_xlat45
            + 9.99999975e-06;\n    u_xlat45 = 0.5 / u_xlat45;\n    u_xlat31 = u_xlat1.x
            * u_xlat1.x;\n    u_xlat46 = u_xlat0.x * u_xlat31 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat46 * u_xlat0.x + 1.0;\n    u_xlat31 = u_xlat31 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat31 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat45;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat4.x * u_xlat0.x;\n   
            u_xlat45 = u_xlat1.x * u_xlat16;\n    u_xlat45 = (-u_xlat45) * 0.280000001
            + 1.0;\n    u_xlat16_57 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_57!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_48 = u_xlat16_48 + _Glossiness;\n   
            u_xlat16_48 = clamp(u_xlat16_48, 0.0, 1.0);\n    u_xlat16_13.xzw = vec3(u_xlat30)
            * _LightColor0.xyz;\n    u_xlat16_13.xzw = u_xlat7.xyz * vec3(u_xlat16_47)
            + u_xlat16_13.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_47 = (-u_xlat15) + 1.0;\n    u_xlat16_57 = u_xlat16_47 * u_xlat16_47;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16_57;\n    u_xlat16_47 = u_xlat16_47
            * u_xlat16_57;\n    u_xlat16_14.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(u_xlat16_47) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_14.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_13.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_12.xyz
            * vec3(u_xlat45);\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_48);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_28) * u_xlat16_12.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp
            sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat4;\nlowp float u_xlat10_4;\nmediump vec3
            u_xlat16_5;\nlowp vec4 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nlowp vec4
            u_xlat10_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb10;\nmediump
            vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3 u_xlat25;\nmediump vec3
            u_xlat16_25;\nmediump float u_xlat16_26;\nfloat u_xlat28;\nfloat u_xlat29;\nmediump
            float u_xlat16_40;\nfloat u_xlat42;\nbool u_xlatb42;\nfloat u_xlat43;\nmediump
            float u_xlat16_44;\nmediump float u_xlat16_45;\nmediump float u_xlat16_47;\nmediump
            float u_xlat16_53;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_44 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_44);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat15.xyz
            = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat10_4 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_45 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_45 = u_xlat10_4 * _OcclusionStrength + u_xlat16_45;\n    u_xlat4
            = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat15.xyz, u_xlat0.xyz);\n   
            u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz
            * (-u_xlat16_5.xxx) + u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat18.xyz = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz
            = u_xlat18.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat18.xyz
            = exp2(u_xlat18.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat18.xyz = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42
            = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb42){\n        u_xlat42
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat42 = inversesqrt(u_xlat42);\n       
            u_xlat7.xyz = vec3(u_xlat42) * u_xlat16_5.xyz;\n        u_xlat8.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat8.xyz
            = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat10_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat10_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat10_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat10_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat4;\nmediump float u_xlat16_4;\nmediump vec4 u_xlat16_5;\nmediump
            vec4 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3
            u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz
            * u_xlat16_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat16_4 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat16_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat16_6 = textureLod(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat16_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat16_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat16_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvec4 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec3
            u_xlat5;\nlowp vec4 u_xlat10_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat
            u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump
            vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat
            u_xlat40;\nlowp float u_xlat10_40;\nmediump float u_xlat16_41;\nmediump
            float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat u_xlat44;\nbool
            u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_0 * _Color;\n   
            u_xlat16_2.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_3.xyz = u_xlat1.www
            * u_xlat16_3.xyz;\n    u_xlat16_42 = (-u_xlat16_41) + 1.0;\n    SV_Target0.w
            = u_xlat1.w * u_xlat16_41 + u_xlat16_42;\n    u_xlat10_40 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_41 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_41 = u_xlat10_40 * _OcclusionStrength + u_xlat16_41;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_41) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_41
            = u_xlat13 + u_xlat13;\n    u_xlat16_41 = u_xlat13 * u_xlat16_41;\n   
            u_xlat16_41 = u_xlat16_41 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_41 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_41 = u_xlat16_41 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_41 = u_xlat16_41 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_41;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_41 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_41!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = u_xlat16_42 + _Glossiness;\n    u_xlat16_41 = clamp(u_xlat16_41, 0.0,
            1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26) * _LightColor0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_42 = (-u_xlat13)
            + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n    u_xlat16_48
            = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n   
            u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_12.xyz
            = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n    u_xlat0.xyz
            = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz *
            u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz *
            vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(3) uniform
            mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin highp vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nmediump vec4 u_xlat16_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat
            u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump
            vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat
            u_xlat40;\nmediump float u_xlat16_40;\nmediump float u_xlat16_41;\nmediump
            float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat u_xlat44;\nbool
            u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_0 * _Color;\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_3.xyz = u_xlat1.www
            * u_xlat16_3.xyz;\n    u_xlat16_42 = (-u_xlat16_41) + 1.0;\n    SV_Target0.w
            = u_xlat1.w * u_xlat16_41 + u_xlat16_42;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_41 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_41 = u_xlat16_40 * _OcclusionStrength + u_xlat16_41;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_41) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_41
            = u_xlat13 + u_xlat13;\n    u_xlat16_41 = u_xlat13 * u_xlat16_41;\n   
            u_xlat16_41 = u_xlat16_41 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_41 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_41 = u_xlat16_41 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_41 = u_xlat16_41 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_41;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_41 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_41!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = u_xlat16_42 + _Glossiness;\n    u_xlat16_41 = clamp(u_xlat16_41, 0.0,
            1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26) * _LightColor0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_42 = (-u_xlat13)
            + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n    u_xlat16_48
            = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n   
            u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_12.xyz
            = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n    u_xlat0.xyz
            = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz *
            u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz *
            vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp
            sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec4
            u_xlat1;\nlowp float u_xlat10_1;\nbool u_xlatb1;\nvec4 u_xlat2;\nlowp
            vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nvec3 u_xlat6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_9;\nmediump
            vec3 u_xlat16_10;\nfloat u_xlat12;\nfloat u_xlat13;\nmediump float u_xlat16_16;\nfloat
            u_xlat18;\nfloat u_xlat19;\nfloat u_xlat20;\nmediump float u_xlat16_22;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat6.xyz = (-vs_TEXCOORD1.xyz)
            * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx
            * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat6.xyz, u_xlat6.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat6.xyz;\n    u_xlat18 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2.xyz
            = vec3(u_xlat18) * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat6.x = (-_Glossiness) + 1.0;\n    u_xlat12 = u_xlat6.x
            * u_xlat6.x;\n    u_xlat12 = max(u_xlat12, 0.00200000009);\n    u_xlat19
            = u_xlat12 * u_xlat12;\n    u_xlat20 = u_xlat18 * u_xlat19 + (-u_xlat18);\n   
            u_xlat18 = u_xlat20 * u_xlat18 + 1.0;\n    u_xlat18 = u_xlat18 * u_xlat18
            + 1.00000001e-07;\n    u_xlat19 = u_xlat19 * 0.318309873;\n    u_xlat18
            = u_xlat19 / u_xlat18;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat7 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7 =
            clamp(u_xlat7, 0.0, 1.0);\n    u_xlat13 = (-u_xlat12) + 1.0;\n    u_xlat19
            = abs(u_xlat1.x) * u_xlat13 + u_xlat12;\n    u_xlat13 = u_xlat7 * u_xlat13
            + u_xlat12;\n    u_xlat12 = u_xlat12 * u_xlat6.x;\n    u_xlat12 = (-u_xlat12)
            * 0.280000001 + 1.0;\n    u_xlat13 = u_xlat13 * abs(u_xlat1.x);\n   
            u_xlat16_3.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat7 * u_xlat19
            + u_xlat13;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat18 = u_xlat18 * u_xlat1.x;\n    u_xlat18
            = u_xlat18 * 3.14159274;\n    u_xlat18 = max(u_xlat18, 9.99999975e-05);\n   
            u_xlat18 = sqrt(u_xlat18);\n    u_xlat18 = u_xlat7 * u_xlat18;\n    u_xlat10_2
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_9.xyz = u_xlat10_2.xyz
            * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat2
            = u_xlat10_2 * _Color;\n    u_xlat16_9.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_9.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.x = dot(u_xlat16_9.xyz, u_xlat16_9.xyz);\n    u_xlatb1 = u_xlat16_4.x!=0.0;\n   
            u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n    u_xlat18 = u_xlat18 * u_xlat1.x;\n   
            u_xlat1.xzw = vec3(u_xlat18) * _LightColor0.xyz;\n    u_xlat16_4.x =
            (-u_xlat0.x) + 1.0;\n    u_xlat16_10.x = u_xlat16_4.x * u_xlat16_4.x;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_4.x = u_xlat16_4.x
            * u_xlat16_10.x;\n    u_xlat16_10.xyz = (-u_xlat16_9.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat16_4.xyz = u_xlat16_10.xyz * u_xlat16_4.xxx + u_xlat16_9.xyz;\n   
            u_xlat1.xzw = u_xlat1.xzw * u_xlat16_4.xyz;\n    u_xlat16_4.x = u_xlat0.x
            + u_xlat0.x;\n    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat6.x + -0.5;\n    u_xlat16_10.x = u_xlat16_3.x
            * u_xlat16_3.x;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat16_10.x;\n   
            u_xlat16_3.x = u_xlat16_3.x * u_xlat16_10.x;\n    u_xlat16_10.x = u_xlat16_4.x
            * u_xlat16_3.x + 1.0;\n    u_xlat16_16 = (-u_xlat7) + 1.0;\n    u_xlat16_22
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_22 = u_xlat16_22 * u_xlat16_22;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_22;\n    u_xlat16_4.x = u_xlat16_4.x
            * u_xlat16_16 + 1.0;\n    u_xlat16_4.x = u_xlat16_10.x * u_xlat16_4.x;\n   
            u_xlat0.x = u_xlat7 * u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat16_22 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_5.xyz = u_xlat2.xyz * vec3(u_xlat16_22);\n    u_xlat16_5.xyz
            = u_xlat2.www * u_xlat16_5.xyz;\n    u_xlat0.xyw = u_xlat16_5.xyz * u_xlat16_4.xyz
            + u_xlat1.xzw;\n    u_xlat10_1 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_4.x = u_xlat10_1
            * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat16_4.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat12) *
            u_xlat16_4.xyz;\n    u_xlat16_5.x = (-u_xlat16_22) + 1.0;\n    SV_Target0.w
            = u_xlat2.w * u_xlat16_22 + u_xlat16_5.x;\n    u_xlat16_22 = u_xlat16_5.x
            + _Glossiness;\n    u_xlat16_22 = clamp(u_xlat16_22, 0.0, 1.0);\n   
            u_xlat16_5.xyz = (-u_xlat16_9.xyz) + vec3(u_xlat16_22);\n    u_xlat16_3.xyz
            = u_xlat16_3.xxx * u_xlat16_5.xyz + u_xlat16_9.xyz;\n    u_xlat0.xyz
            = u_xlat16_4.xyz * u_xlat16_3.xyz + u_xlat0.xyw;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump float
            u_xlat16_1;\nbool u_xlatb1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3
            u_xlat6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nfloat
            u_xlat12;\nfloat u_xlat13;\nmediump float u_xlat16_16;\nfloat u_xlat18;\nfloat
            u_xlat19;\nfloat u_xlat20;\nmediump float u_xlat16_22;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat6.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx
            + _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat0.x = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat0.x = max(u_xlat0.x,
            0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat6.xyz;\n    u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2.xyz = vec3(u_xlat18) *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat2.xyz, u_xlat0.xyz);\n   
            u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat6.x
            = (-_Glossiness) + 1.0;\n    u_xlat12 = u_xlat6.x * u_xlat6.x;\n    u_xlat12
            = max(u_xlat12, 0.00200000009);\n    u_xlat19 = u_xlat12 * u_xlat12;\n   
            u_xlat20 = u_xlat18 * u_xlat19 + (-u_xlat18);\n    u_xlat18 = u_xlat20
            * u_xlat18 + 1.0;\n    u_xlat18 = u_xlat18 * u_xlat18 + 1.00000001e-07;\n   
            u_xlat19 = u_xlat19 * 0.318309873;\n    u_xlat18 = u_xlat19 / u_xlat18;\n   
            u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n    u_xlat7 = dot(u_xlat2.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);\n   
            u_xlat13 = (-u_xlat12) + 1.0;\n    u_xlat19 = abs(u_xlat1.x) * u_xlat13
            + u_xlat12;\n    u_xlat13 = u_xlat7 * u_xlat13 + u_xlat12;\n    u_xlat12
            = u_xlat12 * u_xlat6.x;\n    u_xlat12 = (-u_xlat12) * 0.280000001 + 1.0;\n   
            u_xlat13 = u_xlat13 * abs(u_xlat1.x);\n    u_xlat16_3.x = -abs(u_xlat1.x)
            + 1.0;\n    u_xlat1.x = u_xlat7 * u_xlat19 + u_xlat13;\n    u_xlat1.x
            = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x = 0.5 / u_xlat1.x;\n   
            u_xlat18 = u_xlat18 * u_xlat1.x;\n    u_xlat18 = u_xlat18 * 3.14159274;\n   
            u_xlat18 = max(u_xlat18, 9.99999975e-05);\n    u_xlat18 = sqrt(u_xlat18);\n   
            u_xlat18 = u_xlat7 * u_xlat18;\n    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_9.xyz = u_xlat16_2.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2 = u_xlat16_2 * _Color;\n    u_xlat16_9.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_9.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_4.x = dot(u_xlat16_9.xyz, u_xlat16_9.xyz);\n   
            u_xlatb1 = u_xlat16_4.x!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat18 = u_xlat18 * u_xlat1.x;\n    u_xlat1.xzw = vec3(u_xlat18) *
            _LightColor0.xyz;\n    u_xlat16_4.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_10.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat16_10.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat16_10.xyz = (-u_xlat16_9.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_4.xyz = u_xlat16_10.xyz * u_xlat16_4.xxx
            + u_xlat16_9.xyz;\n    u_xlat1.xzw = u_xlat1.xzw * u_xlat16_4.xyz;\n   
            u_xlat16_4.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_4.x = u_xlat0.x *
            u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat6.x + -0.5;\n   
            u_xlat16_10.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_10.x = u_xlat16_10.x
            * u_xlat16_10.x;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat16_4.x * u_xlat16_3.x + 1.0;\n    u_xlat16_16 =
            (-u_xlat7) + 1.0;\n    u_xlat16_22 = u_xlat16_16 * u_xlat16_16;\n   
            u_xlat16_22 = u_xlat16_22 * u_xlat16_22;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_22;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_16 + 1.0;\n   
            u_xlat16_4.x = u_xlat16_10.x * u_xlat16_4.x;\n    u_xlat0.x = u_xlat7
            * u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_22 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz
            = u_xlat2.xyz * vec3(u_xlat16_22);\n    u_xlat16_5.xyz = u_xlat2.www
            * u_xlat16_5.xyz;\n    u_xlat0.xyw = u_xlat16_5.xyz * u_xlat16_4.xyz
            + u_xlat1.xzw;\n    u_xlat16_1 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_4.x = u_xlat16_1
            * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat16_4.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat12) *
            u_xlat16_4.xyz;\n    u_xlat16_5.x = (-u_xlat16_22) + 1.0;\n    SV_Target0.w
            = u_xlat2.w * u_xlat16_22 + u_xlat16_5.x;\n    u_xlat16_22 = u_xlat16_5.x
            + _Glossiness;\n    u_xlat16_22 = clamp(u_xlat16_22, 0.0, 1.0);\n   
            u_xlat16_5.xyz = (-u_xlat16_9.xyz) + vec3(u_xlat16_22);\n    u_xlat16_3.xyz
            = u_xlat16_3.xxx * u_xlat16_5.xyz + u_xlat16_9.xyz;\n    u_xlat0.xyz
            = u_xlat16_4.xyz * u_xlat16_3.xyz + u_xlat0.xyw;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec3
            u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nlowp vec4 u_xlat10_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nvec3 u_xlat8;\nfloat u_xlat9;\nmediump vec3 u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat16;\nfloat u_xlat17;\nmediump float u_xlat16_21;\nfloat
            u_xlat24;\nfloat u_xlat25;\nlowp float u_xlat10_25;\nmediump float u_xlat16_29;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat8.xyz = (-vs_TEXCOORD1.xyz)
            * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx
            * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat8.xyz, u_xlat8.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat8.xyz;\n    u_xlat24 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.xyz
            = vec3(u_xlat24) * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat8.x = (-_Glossiness) + 1.0;\n    u_xlat16 = u_xlat8.x
            * u_xlat8.x;\n    u_xlat16 = max(u_xlat16, 0.00200000009);\n    u_xlat25
            = u_xlat16 * u_xlat16;\n    u_xlat3.x = u_xlat24 * u_xlat25 + (-u_xlat24);\n   
            u_xlat24 = u_xlat3.x * u_xlat24 + 1.0;\n    u_xlat24 = u_xlat24 * u_xlat24
            + 1.00000001e-07;\n    u_xlat25 = u_xlat25 * 0.318309873;\n    u_xlat24
            = u_xlat25 / u_xlat24;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat9 = (-u_xlat16) + 1.0;\n    u_xlat17 = abs(u_xlat1.x) * u_xlat9
            + u_xlat16;\n    u_xlat25 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat25 = clamp(u_xlat25, 0.0, 1.0);\n    u_xlat9 = u_xlat25 * u_xlat9
            + u_xlat16;\n    u_xlat16 = u_xlat16 * u_xlat8.x;\n    u_xlat16 = (-u_xlat16)
            * 0.280000001 + 1.0;\n    u_xlat9 = u_xlat9 * abs(u_xlat1.x);\n    u_xlat16_4.x
            = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat25 * u_xlat17 + u_xlat9;\n   
            u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x = 0.5 / u_xlat1.x;\n   
            u_xlat24 = u_xlat24 * u_xlat1.x;\n    u_xlat24 = u_xlat24 * 3.14159274;\n   
            u_xlat24 = max(u_xlat24, 9.99999975e-05);\n    u_xlat24 = sqrt(u_xlat24);\n   
            u_xlat24 = u_xlat25 * u_xlat24;\n    u_xlat10_3 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_12.xyz = u_xlat10_3.xyz * _Color.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3 = u_xlat10_3
            * _Color;\n    u_xlat16_12.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic))
            * u_xlat16_12.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_5.x = dot(u_xlat16_12.xyz, u_xlat16_12.xyz);\n    u_xlatb1 =
            u_xlat16_5.x!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat24 = u_xlat24 * u_xlat1.x;\n    u_xlat1.xyz = vec3(u_xlat24) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_13.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_13.x = u_xlat16_13.x * u_xlat16_13.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_13.x;\n    u_xlat16_13.xyz = (-u_xlat16_12.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_13.xyz * u_xlat16_5.xxx
            + u_xlat16_12.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_5.x = u_xlat0.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat8.x + -0.5;\n   
            u_xlat16_13.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_13.x = u_xlat16_13.x
            * u_xlat16_13.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_13.x;\n   
            u_xlat16_13.x = u_xlat16_5.x * u_xlat16_4.x + 1.0;\n    u_xlat16_21 =
            (-u_xlat25) + 1.0;\n    u_xlat16_29 = u_xlat16_21 * u_xlat16_21;\n   
            u_xlat16_29 = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_21 = u_xlat16_21
            * u_xlat16_29;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_21 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_13.x * u_xlat16_5.x;\n    u_xlat0.x = u_xlat25
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat2.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat2);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat2);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyw = log2(u_xlat16_6.xyz);\n   
            u_xlat0.xyw = u_xlat0.xyw * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat0.xyw = exp2(u_xlat0.xyw);\n    u_xlat0.xyw = u_xlat0.xyw * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyw = max(u_xlat0.xyw, vec3(0.0, 0.0, 0.0));\n    u_xlat10_25
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_29 = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_29 = u_xlat10_25 * _OcclusionStrength + u_xlat16_29;\n   
            u_xlat16_5.xyz = u_xlat0.xyw * vec3(u_xlat16_29) + u_xlat16_5.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_29) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16) * u_xlat16_6.xyz;\n    u_xlat16_29 =
            (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat3.xyz
            * vec3(u_xlat16_29);\n    u_xlat16_7.xyz = u_xlat3.www * u_xlat16_7.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat1.xyz;\n    u_xlat16_5.x
            = (-u_xlat16_29) + 1.0;\n    SV_Target0.w = u_xlat3.w * u_xlat16_29 +
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n    u_xlat16_5.x
            = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_12.xyz)
            + u_xlat16_5.xxx;\n    u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_5.xyz
            + u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec3 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3
            u_xlat8;\nfloat u_xlat9;\nmediump vec3 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat16;\nfloat u_xlat17;\nmediump float u_xlat16_21;\nfloat u_xlat24;\nfloat
            u_xlat25;\nmediump float u_xlat16_25;\nmediump float u_xlat16_29;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat8.xyz = (-vs_TEXCOORD1.xyz)
            * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx
            * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat8.xyz, u_xlat8.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat8.xyz;\n    u_xlat24 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.xyz
            = vec3(u_xlat24) * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat8.x = (-_Glossiness) + 1.0;\n    u_xlat16 = u_xlat8.x
            * u_xlat8.x;\n    u_xlat16 = max(u_xlat16, 0.00200000009);\n    u_xlat25
            = u_xlat16 * u_xlat16;\n    u_xlat3.x = u_xlat24 * u_xlat25 + (-u_xlat24);\n   
            u_xlat24 = u_xlat3.x * u_xlat24 + 1.0;\n    u_xlat24 = u_xlat24 * u_xlat24
            + 1.00000001e-07;\n    u_xlat25 = u_xlat25 * 0.318309873;\n    u_xlat24
            = u_xlat25 / u_xlat24;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat9 = (-u_xlat16) + 1.0;\n    u_xlat17 = abs(u_xlat1.x) * u_xlat9
            + u_xlat16;\n    u_xlat25 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat25 = clamp(u_xlat25, 0.0, 1.0);\n    u_xlat9 = u_xlat25 * u_xlat9
            + u_xlat16;\n    u_xlat16 = u_xlat16 * u_xlat8.x;\n    u_xlat16 = (-u_xlat16)
            * 0.280000001 + 1.0;\n    u_xlat9 = u_xlat9 * abs(u_xlat1.x);\n    u_xlat16_4.x
            = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat25 * u_xlat17 + u_xlat9;\n   
            u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x = 0.5 / u_xlat1.x;\n   
            u_xlat24 = u_xlat24 * u_xlat1.x;\n    u_xlat24 = u_xlat24 * 3.14159274;\n   
            u_xlat24 = max(u_xlat24, 9.99999975e-05);\n    u_xlat24 = sqrt(u_xlat24);\n   
            u_xlat24 = u_xlat25 * u_xlat24;\n    u_xlat16_3 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_12.xyz = u_xlat16_3.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat3 = u_xlat16_3 * _Color;\n    u_xlat16_12.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_12.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_12.xyz, u_xlat16_12.xyz);\n   
            u_xlatb1 = u_xlat16_5.x!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat24 = u_xlat24 * u_xlat1.x;\n    u_xlat1.xyz = vec3(u_xlat24) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_13.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_13.x = u_xlat16_13.x * u_xlat16_13.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_13.x;\n    u_xlat16_13.xyz = (-u_xlat16_12.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_13.xyz * u_xlat16_5.xxx
            + u_xlat16_12.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_5.x = u_xlat0.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat8.x + -0.5;\n   
            u_xlat16_13.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_13.x = u_xlat16_13.x
            * u_xlat16_13.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_13.x;\n   
            u_xlat16_13.x = u_xlat16_5.x * u_xlat16_4.x + 1.0;\n    u_xlat16_21 =
            (-u_xlat25) + 1.0;\n    u_xlat16_29 = u_xlat16_21 * u_xlat16_21;\n   
            u_xlat16_29 = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_21 = u_xlat16_21
            * u_xlat16_29;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_21 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_13.x * u_xlat16_5.x;\n    u_xlat0.x = u_xlat25
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat2.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat2);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat2);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyw = log2(u_xlat16_6.xyz);\n   
            u_xlat0.xyw = u_xlat0.xyw * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat0.xyw = exp2(u_xlat0.xyw);\n    u_xlat0.xyw = u_xlat0.xyw * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyw = max(u_xlat0.xyw, vec3(0.0, 0.0, 0.0));\n    u_xlat16_25
            = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_29 = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_29 = u_xlat16_25 * _OcclusionStrength + u_xlat16_29;\n   
            u_xlat16_5.xyz = u_xlat0.xyw * vec3(u_xlat16_29) + u_xlat16_5.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_29) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16) * u_xlat16_6.xyz;\n    u_xlat16_29 =
            (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat3.xyz
            * vec3(u_xlat16_29);\n    u_xlat16_7.xyz = u_xlat3.www * u_xlat16_7.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat1.xyz;\n    u_xlat16_5.x
            = (-u_xlat16_29) + 1.0;\n    SV_Target0.w = u_xlat3.w * u_xlat16_29 +
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n    u_xlat16_5.x
            = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_12.xyz)
            + u_xlat16_5.xxx;\n    u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_5.xyz
            + u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp
            vec4 u_xlat10_4;\nvec3 u_xlat5;\nlowp vec4 u_xlat10_5;\nbool u_xlatb5;\nvec3
            u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3
            u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3
            u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nlowp float u_xlat10_40;\nmediump
            float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n   
            u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz
            = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat39 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n   
            u_xlat1.xyz = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat10_40 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat10_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(4)
            uniform mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin highp vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec4 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_5;\nbool u_xlatb5;\nvec3
            u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3
            u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3
            u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nmediump float u_xlat16_40;\nmediump
            float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat16_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat39 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n   
            u_xlat1.xyz = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp
            sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nuniform
            lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvec4 u_xlat1;\nlowp vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3
            u_xlat16_5;\nlowp vec4 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nlowp vec4
            u_xlat10_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nvec3 u_xlat10;\nbvec3
            u_xlatb11;\nmediump vec3 u_xlat16_12;\nmediump vec4 u_xlat16_13;\nmediump
            vec3 u_xlat16_14;\nfloat u_xlat15;\nfloat u_xlat16;\nlowp float u_xlat10_16;\nvec3
            u_xlat27;\nmediump vec3 u_xlat16_27;\nmediump float u_xlat16_28;\nfloat
            u_xlat30;\nfloat u_xlat31;\nmediump float u_xlat16_43;\nfloat u_xlat45;\nbool
            u_xlatb45;\nfloat u_xlat46;\nmediump float u_xlat16_47;\nmediump float
            u_xlat16_48;\nmediump float u_xlat16_50;\nmediump float u_xlat16_57;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1 = u_xlat10_0 * _Color;\n    u_xlat16_2.xyz = u_xlat10_0.xyz *
            _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_47 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_47);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat4.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat16_3.xyz = u_xlat1.www * u_xlat16_3.xyz;\n    u_xlat16_48 = (-u_xlat16_47)
            + 1.0;\n    SV_Target0.w = u_xlat1.w * u_xlat16_47 + u_xlat16_48;\n   
            u_xlat10_16 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_47
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_47 = u_xlat10_16 * _OcclusionStrength
            + u_xlat16_47;\n    u_xlat16 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat4.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n   
            u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) + u_xlat4.xyz;\n   
            u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat7.xyz = log2(u_xlat16_6.xyz);\n   
            u_xlat7.xyz = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat7.xyz = exp2(u_xlat7.xyz);\n    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat7.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb45 =
            0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb45){\n        u_xlat45
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat45 = inversesqrt(u_xlat45);\n       
            u_xlat8.xyz = vec3(u_xlat45) * u_xlat16_5.xyz;\n        u_xlat9.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat9.xyz
            = u_xlat9.xyz / u_xlat8.xyz;\n        u_xlat10.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat10.xyz = u_xlat10.xyz /
            u_xlat8.xyz;\n        u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0),
            u_xlat8.xyzx).xyz;\n        {\n            vec3 hlslcc_movcTemp = u_xlat9;\n           
            hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat9.x : u_xlat10.x;\n           
            hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat9.y : u_xlat10.y;\n           
            hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat9.z : u_xlat10.z;\n           
            u_xlat9 = hlslcc_movcTemp;\n        }\n        u_xlat45 = min(u_xlat9.y,
            u_xlat9.x);\n        u_xlat45 = min(u_xlat9.z, u_xlat45);\n        u_xlat9.xyz
            = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat8.xyz
            = u_xlat8.xyz * vec3(u_xlat45) + u_xlat9.xyz;\n    } else {\n       
            u_xlat8.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_50 = (-u_xlat16) *
            0.699999988 + 1.70000005;\n    u_xlat16_50 = u_xlat16 * u_xlat16_50;\n   
            u_xlat16_50 = u_xlat16_50 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat8.xyz, u_xlat16_50);\n    u_xlat16_12.x = u_xlat10_6.w + -1.0;\n   
            u_xlat16_12.x = unity_SpecCube0_HDR.w * u_xlat16_12.x + 1.0;\n    u_xlat16_12.x
            = u_xlat16_12.x * unity_SpecCube0_HDR.x;\n    u_xlat16_27.xyz = u_xlat10_6.xyz
            * u_xlat16_12.xxx;\n    u_xlatb45 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb45){\n        u_xlatb45 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb45){\n            u_xlat45 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat45 = inversesqrt(u_xlat45);\n            u_xlat8.xyz = vec3(u_xlat45)
            * u_xlat16_5.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat9.xyz = u_xlat9.xyz / u_xlat8.xyz;\n            u_xlat10.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat10.xyz
            = u_xlat10.xyz / u_xlat8.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat8.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat9;\n                hlslcc_movcTemp.x = (u_xlatb11.x)
            ? u_xlat9.x : u_xlat10.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y)
            ? u_xlat9.y : u_xlat10.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z)
            ? u_xlat9.z : u_xlat10.z;\n                u_xlat9 = hlslcc_movcTemp;\n           
            }\n            u_xlat45 = min(u_xlat9.y, u_xlat9.x);\n            u_xlat45
            = min(u_xlat9.z, u_xlat45);\n            u_xlat9.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat8.xyz = u_xlat8.xyz
            * vec3(u_xlat45) + u_xlat9.xyz;\n        } else {\n            u_xlat8.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat8.xyz, u_xlat16_50);\n        u_xlat16_13.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_13.x = unity_SpecCube1_HDR.w * u_xlat16_13.x + 1.0;\n       
            u_xlat16_13.x = u_xlat16_13.x * unity_SpecCube1_HDR.x;\n        u_xlat16_13.xyz
            = u_xlat10_5.xyz * u_xlat16_13.xxx;\n        u_xlat8.xyz = u_xlat16_12.xxx
            * u_xlat10_6.xyz + (-u_xlat16_13.xyz);\n        u_xlat27.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat8.xyz + u_xlat16_13.xyz;\n        u_xlat16_27.xyz = u_xlat27.xyz;\n   
            }\n    u_xlat16_12.xyz = vec3(u_xlat16_47) * u_xlat16_27.xyz;\n    u_xlat1.xzw
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat45 = dot(u_xlat1.xzw, u_xlat1.xzw);\n    u_xlat45 = max(u_xlat45,
            0.00100000005);\n    u_xlat45 = inversesqrt(u_xlat45);\n    u_xlat1.xzw
            = vec3(u_xlat45) * u_xlat1.xzw;\n    u_xlat45 = dot(u_xlat0.xyz, (-u_xlat4.xyz));\n   
            u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat4.x
            = clamp(u_xlat4.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xzw);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat15 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat1.xzw);\n    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat16_57
            = u_xlat15 + u_xlat15;\n    u_xlat16_57 = u_xlat15 * u_xlat16_57;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16 + -0.5;\n    u_xlat16_13.x = (-u_xlat4.x)
            + 1.0;\n    u_xlat16_28 = u_xlat16_13.x * u_xlat16_13.x;\n    u_xlat16_28
            = u_xlat16_28 * u_xlat16_28;\n    u_xlat16_13.x = u_xlat16_13.x * u_xlat16_28;\n   
            u_xlat16_13.x = u_xlat16_57 * u_xlat16_13.x + 1.0;\n    u_xlat16_28 =
            -abs(u_xlat45) + 1.0;\n    u_xlat16_43 = u_xlat16_28 * u_xlat16_28;\n   
            u_xlat16_43 = u_xlat16_43 * u_xlat16_43;\n    u_xlat16_28 = u_xlat16_28
            * u_xlat16_43;\n    u_xlat16_57 = u_xlat16_57 * u_xlat16_28 + 1.0;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16_13.x;\n    u_xlat30 = u_xlat4.x
            * u_xlat16_57;\n    u_xlat1.x = u_xlat16 * u_xlat16;\n    u_xlat1.x =
            max(u_xlat1.x, 0.00200000009);\n    u_xlat31 = (-u_xlat1.x) + 1.0;\n   
            u_xlat46 = abs(u_xlat45) * u_xlat31 + u_xlat1.x;\n    u_xlat31 = u_xlat4.x
            * u_xlat31 + u_xlat1.x;\n    u_xlat45 = abs(u_xlat45) * u_xlat31;\n   
            u_xlat45 = u_xlat4.x * u_xlat46 + u_xlat45;\n    u_xlat45 = u_xlat45
            + 9.99999975e-06;\n    u_xlat45 = 0.5 / u_xlat45;\n    u_xlat31 = u_xlat1.x
            * u_xlat1.x;\n    u_xlat46 = u_xlat0.x * u_xlat31 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat46 * u_xlat0.x + 1.0;\n    u_xlat31 = u_xlat31 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat31 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat45;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat4.x * u_xlat0.x;\n   
            u_xlat45 = u_xlat1.x * u_xlat16;\n    u_xlat45 = (-u_xlat45) * 0.280000001
            + 1.0;\n    u_xlat16_57 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_57!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_48 = u_xlat16_48 + _Glossiness;\n   
            u_xlat16_48 = clamp(u_xlat16_48, 0.0, 1.0);\n    u_xlat16_13.xzw = vec3(u_xlat30)
            * _LightColor0.xyz;\n    u_xlat16_13.xzw = u_xlat7.xyz * vec3(u_xlat16_47)
            + u_xlat16_13.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_47 = (-u_xlat15) + 1.0;\n    u_xlat16_57 = u_xlat16_47 * u_xlat16_47;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16_57;\n    u_xlat16_47 = u_xlat16_47
            * u_xlat16_57;\n    u_xlat16_14.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(u_xlat16_47) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_14.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_13.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_12.xyz
            * vec3(u_xlat45);\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_48);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_28) * u_xlat16_12.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(4) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec3 u_xlat16_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec4 u_xlat16_5;\nmediump vec4
            u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nvec3 u_xlat10;\nbvec3
            u_xlatb11;\nmediump vec3 u_xlat16_12;\nmediump vec4 u_xlat16_13;\nmediump
            vec3 u_xlat16_14;\nfloat u_xlat15;\nfloat u_xlat16;\nmediump float u_xlat16_16;\nvec3
            u_xlat27;\nmediump vec3 u_xlat16_27;\nmediump float u_xlat16_28;\nfloat
            u_xlat30;\nfloat u_xlat31;\nmediump float u_xlat16_43;\nfloat u_xlat45;\nbool
            u_xlatb45;\nfloat u_xlat46;\nmediump float u_xlat16_47;\nmediump float
            u_xlat16_48;\nmediump float u_xlat16_50;\nmediump float u_xlat16_57;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1 = u_xlat16_0 * _Color;\n    u_xlat16_2.xyz = u_xlat16_0.xyz *
            _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_47 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_47);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat4.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat16_3.xyz = u_xlat1.www * u_xlat16_3.xyz;\n    u_xlat16_48 = (-u_xlat16_47)
            + 1.0;\n    SV_Target0.w = u_xlat1.w * u_xlat16_47 + u_xlat16_48;\n   
            u_xlat16_16 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_47
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_47 = u_xlat16_16 * _OcclusionStrength
            + u_xlat16_47;\n    u_xlat16 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat4.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n   
            u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) + u_xlat4.xyz;\n   
            u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat7.xyz = log2(u_xlat16_6.xyz);\n   
            u_xlat7.xyz = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat7.xyz = exp2(u_xlat7.xyz);\n    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat7.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb45 =
            0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb45){\n        u_xlat45
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat45 = inversesqrt(u_xlat45);\n       
            u_xlat8.xyz = vec3(u_xlat45) * u_xlat16_5.xyz;\n        u_xlat9.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat9.xyz
            = u_xlat9.xyz / u_xlat8.xyz;\n        u_xlat10.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat10.xyz = u_xlat10.xyz /
            u_xlat8.xyz;\n        u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0),
            u_xlat8.xyzx).xyz;\n        {\n            vec3 hlslcc_movcTemp = u_xlat9;\n           
            hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat9.x : u_xlat10.x;\n           
            hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat9.y : u_xlat10.y;\n           
            hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat9.z : u_xlat10.z;\n           
            u_xlat9 = hlslcc_movcTemp;\n        }\n        u_xlat45 = min(u_xlat9.y,
            u_xlat9.x);\n        u_xlat45 = min(u_xlat9.z, u_xlat45);\n        u_xlat9.xyz
            = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat8.xyz
            = u_xlat8.xyz * vec3(u_xlat45) + u_xlat9.xyz;\n    } else {\n       
            u_xlat8.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_50 = (-u_xlat16) *
            0.699999988 + 1.70000005;\n    u_xlat16_50 = u_xlat16 * u_xlat16_50;\n   
            u_xlat16_50 = u_xlat16_50 * 6.0;\n    u_xlat16_6 = textureLod(unity_SpecCube0,
            u_xlat8.xyz, u_xlat16_50);\n    u_xlat16_12.x = u_xlat16_6.w + -1.0;\n   
            u_xlat16_12.x = unity_SpecCube0_HDR.w * u_xlat16_12.x + 1.0;\n    u_xlat16_12.x
            = u_xlat16_12.x * unity_SpecCube0_HDR.x;\n    u_xlat16_27.xyz = u_xlat16_6.xyz
            * u_xlat16_12.xxx;\n    u_xlatb45 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb45){\n        u_xlatb45 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb45){\n            u_xlat45 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat45 = inversesqrt(u_xlat45);\n            u_xlat8.xyz = vec3(u_xlat45)
            * u_xlat16_5.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat9.xyz = u_xlat9.xyz / u_xlat8.xyz;\n            u_xlat10.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat10.xyz
            = u_xlat10.xyz / u_xlat8.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat8.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat9;\n                hlslcc_movcTemp.x = (u_xlatb11.x)
            ? u_xlat9.x : u_xlat10.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y)
            ? u_xlat9.y : u_xlat10.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z)
            ? u_xlat9.z : u_xlat10.z;\n                u_xlat9 = hlslcc_movcTemp;\n           
            }\n            u_xlat45 = min(u_xlat9.y, u_xlat9.x);\n            u_xlat45
            = min(u_xlat9.z, u_xlat45);\n            u_xlat9.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat8.xyz = u_xlat8.xyz
            * vec3(u_xlat45) + u_xlat9.xyz;\n        } else {\n            u_xlat8.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat8.xyz, u_xlat16_50);\n        u_xlat16_13.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_13.x = unity_SpecCube1_HDR.w * u_xlat16_13.x + 1.0;\n       
            u_xlat16_13.x = u_xlat16_13.x * unity_SpecCube1_HDR.x;\n        u_xlat16_13.xyz
            = u_xlat16_5.xyz * u_xlat16_13.xxx;\n        u_xlat8.xyz = u_xlat16_12.xxx
            * u_xlat16_6.xyz + (-u_xlat16_13.xyz);\n        u_xlat27.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat8.xyz + u_xlat16_13.xyz;\n        u_xlat16_27.xyz = u_xlat27.xyz;\n   
            }\n    u_xlat16_12.xyz = vec3(u_xlat16_47) * u_xlat16_27.xyz;\n    u_xlat1.xzw
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat45 = dot(u_xlat1.xzw, u_xlat1.xzw);\n    u_xlat45 = max(u_xlat45,
            0.00100000005);\n    u_xlat45 = inversesqrt(u_xlat45);\n    u_xlat1.xzw
            = vec3(u_xlat45) * u_xlat1.xzw;\n    u_xlat45 = dot(u_xlat0.xyz, (-u_xlat4.xyz));\n   
            u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat4.x
            = clamp(u_xlat4.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xzw);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat15 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat1.xzw);\n    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat16_57
            = u_xlat15 + u_xlat15;\n    u_xlat16_57 = u_xlat15 * u_xlat16_57;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16 + -0.5;\n    u_xlat16_13.x = (-u_xlat4.x)
            + 1.0;\n    u_xlat16_28 = u_xlat16_13.x * u_xlat16_13.x;\n    u_xlat16_28
            = u_xlat16_28 * u_xlat16_28;\n    u_xlat16_13.x = u_xlat16_13.x * u_xlat16_28;\n   
            u_xlat16_13.x = u_xlat16_57 * u_xlat16_13.x + 1.0;\n    u_xlat16_28 =
            -abs(u_xlat45) + 1.0;\n    u_xlat16_43 = u_xlat16_28 * u_xlat16_28;\n   
            u_xlat16_43 = u_xlat16_43 * u_xlat16_43;\n    u_xlat16_28 = u_xlat16_28
            * u_xlat16_43;\n    u_xlat16_57 = u_xlat16_57 * u_xlat16_28 + 1.0;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16_13.x;\n    u_xlat30 = u_xlat4.x
            * u_xlat16_57;\n    u_xlat1.x = u_xlat16 * u_xlat16;\n    u_xlat1.x =
            max(u_xlat1.x, 0.00200000009);\n    u_xlat31 = (-u_xlat1.x) + 1.0;\n   
            u_xlat46 = abs(u_xlat45) * u_xlat31 + u_xlat1.x;\n    u_xlat31 = u_xlat4.x
            * u_xlat31 + u_xlat1.x;\n    u_xlat45 = abs(u_xlat45) * u_xlat31;\n   
            u_xlat45 = u_xlat4.x * u_xlat46 + u_xlat45;\n    u_xlat45 = u_xlat45
            + 9.99999975e-06;\n    u_xlat45 = 0.5 / u_xlat45;\n    u_xlat31 = u_xlat1.x
            * u_xlat1.x;\n    u_xlat46 = u_xlat0.x * u_xlat31 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat46 * u_xlat0.x + 1.0;\n    u_xlat31 = u_xlat31 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat31 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat45;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat4.x * u_xlat0.x;\n   
            u_xlat45 = u_xlat1.x * u_xlat16;\n    u_xlat45 = (-u_xlat45) * 0.280000001
            + 1.0;\n    u_xlat16_57 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_57!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_48 = u_xlat16_48 + _Glossiness;\n   
            u_xlat16_48 = clamp(u_xlat16_48, 0.0, 1.0);\n    u_xlat16_13.xzw = vec3(u_xlat30)
            * _LightColor0.xyz;\n    u_xlat16_13.xzw = u_xlat7.xyz * vec3(u_xlat16_47)
            + u_xlat16_13.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_47 = (-u_xlat15) + 1.0;\n    u_xlat16_57 = u_xlat16_47 * u_xlat16_47;\n   
            u_xlat16_57 = u_xlat16_57 * u_xlat16_57;\n    u_xlat16_47 = u_xlat16_47
            * u_xlat16_57;\n    u_xlat16_14.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(u_xlat16_47) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_14.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_13.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_12.xyz
            * vec3(u_xlat45);\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_48);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_28) * u_xlat16_12.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp
            sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nuniform
            lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nlowp float
            u_xlat10_4;\nmediump vec3 u_xlat16_5;\nlowp vec4 u_xlat10_5;\nmediump
            vec3 u_xlat16_6;\nlowp vec4 u_xlat10_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3
            u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz
            * u_xlat10_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat10_4 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat10_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat10_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat10_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat10_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat10_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(4) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat4;\nmediump float u_xlat16_4;\nmediump
            vec4 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3
            u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz
            * u_xlat16_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat16_4 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat16_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat16_6 = textureLod(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat16_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat16_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat16_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvec4 u_xlat1;\nlowp vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp
            vec4 u_xlat10_4;\nvec3 u_xlat5;\nlowp vec4 u_xlat10_5;\nbool u_xlatb5;\nvec3
            u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3
            u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3
            u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nlowp float u_xlat10_40;\nmediump
            float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_0
            * _Color;\n    u_xlat16_2.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_3.xyz = u_xlat1.www
            * u_xlat16_3.xyz;\n    u_xlat16_42 = (-u_xlat16_41) + 1.0;\n    SV_Target0.w
            = u_xlat1.w * u_xlat16_41 + u_xlat16_42;\n    u_xlat10_40 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_41 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_41 = u_xlat10_40 * _OcclusionStrength + u_xlat16_41;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_41) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_41
            = u_xlat13 + u_xlat13;\n    u_xlat16_41 = u_xlat13 * u_xlat16_41;\n   
            u_xlat16_41 = u_xlat16_41 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_41 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_41 = u_xlat16_41 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_41 = u_xlat16_41 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_41;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_41 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_41!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = u_xlat16_42 + _Glossiness;\n    u_xlat16_41 = clamp(u_xlat16_41, 0.0,
            1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26) * _LightColor0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_42 = (-u_xlat13)
            + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n    u_xlat16_48
            = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n   
            u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_12.xyz
            = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n    u_xlat0.xyz
            = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz *
            u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz *
            vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(4)
            uniform mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin highp vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec4 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_5;\nbool u_xlatb5;\nvec3
            u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3
            u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3
            u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nmediump float u_xlat16_40;\nmediump
            float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_0
            * _Color;\n    u_xlat16_2.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_3.xyz = u_xlat1.www
            * u_xlat16_3.xyz;\n    u_xlat16_42 = (-u_xlat16_41) + 1.0;\n    SV_Target0.w
            = u_xlat1.w * u_xlat16_41 + u_xlat16_42;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_41 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_41 = u_xlat16_40 * _OcclusionStrength + u_xlat16_41;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_41) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_41
            = u_xlat13 + u_xlat13;\n    u_xlat16_41 = u_xlat13 * u_xlat16_41;\n   
            u_xlat16_41 = u_xlat16_41 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_41 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_41 = u_xlat16_41 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_41 = u_xlat16_41 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_41;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_41 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_41!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = u_xlat16_42 + _Glossiness;\n    u_xlat16_41 = clamp(u_xlat16_41, 0.0,
            1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26) * _LightColor0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_42 = (-u_xlat13)
            + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n    u_xlat16_48
            = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n   
            u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_12.xyz
            = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n    u_xlat0.xyz
            = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz *
            u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz *
            vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp
            sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec4
            u_xlat1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nvec3 u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat14;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nfloat
            u_xlat21;\nfloat u_xlat22;\nfloat u_xlat23;\nmediump float u_xlat16_24;\nmediump
            float u_xlat16_25;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat7.xyz,
            u_xlat7.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat7.xyz;\n   
            u_xlat21 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat7.x = (-_Glossiness) + 1.0;\n    u_xlat14 = u_xlat7.x
            * u_xlat7.x;\n    u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat22
            = u_xlat14 * u_xlat14;\n    u_xlat23 = u_xlat21 * u_xlat22 + (-u_xlat21);\n   
            u_xlat21 = u_xlat23 * u_xlat21 + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21
            + 1.00000001e-07;\n    u_xlat22 = u_xlat22 * 0.318309873;\n    u_xlat21
            = u_xlat22 / u_xlat21;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat8 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 =
            clamp(u_xlat8, 0.0, 1.0);\n    u_xlat15 = (-u_xlat14) + 1.0;\n    u_xlat22
            = abs(u_xlat1.x) * u_xlat15 + u_xlat14;\n    u_xlat15 = u_xlat8 * u_xlat15
            + u_xlat14;\n    u_xlat14 = u_xlat14 * u_xlat7.x;\n    u_xlat14 = (-u_xlat14)
            * 0.280000001 + 1.0;\n    u_xlat15 = u_xlat15 * abs(u_xlat1.x);\n   
            u_xlat16_3.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat8 * u_xlat22
            + u_xlat15;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat21 = u_xlat21 * u_xlat1.x;\n    u_xlat21
            = u_xlat21 * 3.14159274;\n    u_xlat21 = max(u_xlat21, 9.99999975e-05);\n   
            u_xlat21 = sqrt(u_xlat21);\n    u_xlat21 = u_xlat8 * u_xlat21;\n    u_xlat10_1.xzw
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_10.xyz = _Color.xyz
            * u_xlat10_1.xzw + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xzw = u_xlat10_1.xzw * _Color.xyz;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb2 = u_xlat16_4.x!=0.0;\n    u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n   
            u_xlat21 = u_xlat21 * u_xlat2.x;\n    u_xlat2.xyz = vec3(u_xlat21) *
            _LightColor0.xyz;\n    u_xlat16_4.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_11.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_4.xyz = u_xlat16_11.xyz * u_xlat16_4.xxx
            + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_4.xyz;\n   
            u_xlat16_4.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_4.x = u_xlat0.x *
            u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat7.x + -0.5;\n   
            u_xlat16_11.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat16_11.x;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_11.x;\n   
            u_xlat16_11.x = u_xlat16_4.x * u_xlat16_3.x + 1.0;\n    u_xlat16_18 =
            (-u_xlat8) + 1.0;\n    u_xlat16_25 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_25 = u_xlat16_25 * u_xlat16_25;\n    u_xlat16_18 = u_xlat16_18
            * u_xlat16_25;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_18 + 1.0;\n   
            u_xlat16_4.x = u_xlat16_11.x * u_xlat16_4.x;\n    u_xlat0.x = u_xlat8
            * u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz
            = u_xlat1.xzw * vec3(u_xlat16_25);\n    u_xlat16_25 = (-u_xlat16_25)
            + 1.0;\n    u_xlat16_25 = u_xlat16_25 + _Glossiness;\n    u_xlat16_25
            = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_6.xyz = (-u_xlat16_10.xyz)
            + vec3(u_xlat16_25);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz
            + u_xlat16_10.xyz;\n    u_xlat0.xyw = u_xlat16_5.xyz * u_xlat16_4.xyz
            + u_xlat2.xyz;\n    u_xlat10_1.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_24 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_24 = u_xlat10_1.x
            * _OcclusionStrength + u_xlat16_24;\n    u_xlat16_4.xyz = vec3(u_xlat16_24)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat14) *
            u_xlat16_4.xyz;\n    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz +
            u_xlat0.xyw;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4
            u_xlat16_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3
            u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat
            u_xlat14;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nfloat u_xlat21;\nfloat
            u_xlat22;\nfloat u_xlat23;\nmediump float u_xlat16_24;\nmediump float
            u_xlat16_25;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat7.xyz = (-vs_TEXCOORD1.xyz)
            * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx
            * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat7.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat7.xyz;\n    u_xlat21 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz
            = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat7.x = (-_Glossiness) + 1.0;\n    u_xlat14 = u_xlat7.x
            * u_xlat7.x;\n    u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat22
            = u_xlat14 * u_xlat14;\n    u_xlat23 = u_xlat21 * u_xlat22 + (-u_xlat21);\n   
            u_xlat21 = u_xlat23 * u_xlat21 + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21
            + 1.00000001e-07;\n    u_xlat22 = u_xlat22 * 0.318309873;\n    u_xlat21
            = u_xlat22 / u_xlat21;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat8 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 =
            clamp(u_xlat8, 0.0, 1.0);\n    u_xlat15 = (-u_xlat14) + 1.0;\n    u_xlat22
            = abs(u_xlat1.x) * u_xlat15 + u_xlat14;\n    u_xlat15 = u_xlat8 * u_xlat15
            + u_xlat14;\n    u_xlat14 = u_xlat14 * u_xlat7.x;\n    u_xlat14 = (-u_xlat14)
            * 0.280000001 + 1.0;\n    u_xlat15 = u_xlat15 * abs(u_xlat1.x);\n   
            u_xlat16_3.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat8 * u_xlat22
            + u_xlat15;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat21 = u_xlat21 * u_xlat1.x;\n    u_xlat21
            = u_xlat21 * 3.14159274;\n    u_xlat21 = max(u_xlat21, 9.99999975e-05);\n   
            u_xlat21 = sqrt(u_xlat21);\n    u_xlat21 = u_xlat8 * u_xlat21;\n    u_xlat16_1.xzw
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_10.xyz = _Color.xyz
            * u_xlat16_1.xzw + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xzw = u_xlat16_1.xzw * _Color.xyz;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb2 = u_xlat16_4.x!=0.0;\n    u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n   
            u_xlat21 = u_xlat21 * u_xlat2.x;\n    u_xlat2.xyz = vec3(u_xlat21) *
            _LightColor0.xyz;\n    u_xlat16_4.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_11.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_4.xyz = u_xlat16_11.xyz * u_xlat16_4.xxx
            + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_4.xyz;\n   
            u_xlat16_4.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_4.x = u_xlat0.x *
            u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat7.x + -0.5;\n   
            u_xlat16_11.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat16_11.x;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_11.x;\n   
            u_xlat16_11.x = u_xlat16_4.x * u_xlat16_3.x + 1.0;\n    u_xlat16_18 =
            (-u_xlat8) + 1.0;\n    u_xlat16_25 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_25 = u_xlat16_25 * u_xlat16_25;\n    u_xlat16_18 = u_xlat16_18
            * u_xlat16_25;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_18 + 1.0;\n   
            u_xlat16_4.x = u_xlat16_11.x * u_xlat16_4.x;\n    u_xlat0.x = u_xlat8
            * u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz
            = u_xlat1.xzw * vec3(u_xlat16_25);\n    u_xlat16_25 = (-u_xlat16_25)
            + 1.0;\n    u_xlat16_25 = u_xlat16_25 + _Glossiness;\n    u_xlat16_25
            = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_6.xyz = (-u_xlat16_10.xyz)
            + vec3(u_xlat16_25);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz
            + u_xlat16_10.xyz;\n    u_xlat0.xyw = u_xlat16_5.xyz * u_xlat16_4.xyz
            + u_xlat2.xyz;\n    u_xlat16_1.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_24 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_24 = u_xlat16_1.x
            * _OcclusionStrength + u_xlat16_24;\n    u_xlat16_4.xyz = vec3(u_xlat16_24)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat14) *
            u_xlat16_4.xyz;\n    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz +
            u_xlat0.xyw;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec3
            u_xlat1;\nlowp vec3 u_xlat10_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nbool u_xlatb3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nfloat u_xlat10;\nmediump
            vec3 u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat u_xlat18;\nfloat
            u_xlat19;\nmediump float u_xlat16_23;\nfloat u_xlat27;\nfloat u_xlat28;\nlowp
            float u_xlat10_28;\nmediump float u_xlat16_32;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat9.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz,
            u_xlat9.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat9.xyz;\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat9.x = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat9.x
            * u_xlat9.x;\n    u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat28
            = u_xlat18 * u_xlat18;\n    u_xlat3.x = u_xlat27 * u_xlat28 + (-u_xlat27);\n   
            u_xlat27 = u_xlat3.x * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27
            + 1.00000001e-07;\n    u_xlat28 = u_xlat28 * 0.318309873;\n    u_xlat27
            = u_xlat28 / u_xlat27;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat10 = (-u_xlat18) + 1.0;\n    u_xlat19 = abs(u_xlat1.x) * u_xlat10
            + u_xlat18;\n    u_xlat28 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat28 = clamp(u_xlat28, 0.0, 1.0);\n    u_xlat10 = u_xlat28 * u_xlat10
            + u_xlat18;\n    u_xlat18 = u_xlat18 * u_xlat9.x;\n    u_xlat18 = (-u_xlat18)
            * 0.280000001 + 1.0;\n    u_xlat10 = u_xlat10 * abs(u_xlat1.x);\n   
            u_xlat16_4.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat28 * u_xlat19
            + u_xlat10;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat27 = u_xlat27 * u_xlat1.x;\n    u_xlat27
            = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 9.99999975e-05);\n   
            u_xlat27 = sqrt(u_xlat27);\n    u_xlat27 = u_xlat28 * u_xlat27;\n   
            u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz
            = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_13.xyz, u_xlat16_13.xyz);\n   
            u_xlatb3 = u_xlat16_5.x!=0.0;\n    u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n   
            u_xlat27 = u_xlat27 * u_xlat3.x;\n    u_xlat3.xyz = vec3(u_xlat27) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_14.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_14.x;\n    u_xlat16_14.xyz = (-u_xlat16_13.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_14.xyz * u_xlat16_5.xxx
            + u_xlat16_13.xyz;\n    u_xlat3.xyz = u_xlat3.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_5.x = u_xlat0.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat9.x + -0.5;\n   
            u_xlat16_14.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_14.x = u_xlat16_14.x
            * u_xlat16_14.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_14.x;\n   
            u_xlat16_14.x = u_xlat16_5.x * u_xlat16_4.x + 1.0;\n    u_xlat16_23 =
            (-u_xlat28) + 1.0;\n    u_xlat16_32 = u_xlat16_23 * u_xlat16_23;\n   
            u_xlat16_32 = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_23 = u_xlat16_23
            * u_xlat16_32;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_23 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_14.x * u_xlat16_5.x;\n    u_xlat0.x = u_xlat28
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat2.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat2);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat2);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyw = log2(u_xlat16_6.xyz);\n   
            u_xlat0.xyw = u_xlat0.xyw * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat0.xyw = exp2(u_xlat0.xyw);\n    u_xlat0.xyw = u_xlat0.xyw * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyw = max(u_xlat0.xyw, vec3(0.0, 0.0, 0.0));\n    u_xlat10_28
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32 = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_32 = u_xlat10_28 * _OcclusionStrength + u_xlat16_32;\n   
            u_xlat16_5.xyz = u_xlat0.xyw * vec3(u_xlat16_32) + u_xlat16_5.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz;\n    u_xlat16_32 =
            (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat1.xyz
            * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32
            = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_13.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat16_13.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat3.xyz;\n    u_xlat0.xyz
            = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec3 u_xlat1;\nmediump vec3
            u_xlat16_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nbool u_xlatb3;\nmediump vec3
            u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nfloat u_xlat10;\nmediump
            vec3 u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat u_xlat18;\nfloat
            u_xlat19;\nmediump float u_xlat16_23;\nfloat u_xlat27;\nfloat u_xlat28;\nmediump
            float u_xlat16_28;\nmediump float u_xlat16_32;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat9.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz,
            u_xlat9.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat9.xyz;\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat9.x = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat9.x
            * u_xlat9.x;\n    u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat28
            = u_xlat18 * u_xlat18;\n    u_xlat3.x = u_xlat27 * u_xlat28 + (-u_xlat27);\n   
            u_xlat27 = u_xlat3.x * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27
            + 1.00000001e-07;\n    u_xlat28 = u_xlat28 * 0.318309873;\n    u_xlat27
            = u_xlat28 / u_xlat27;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat10 = (-u_xlat18) + 1.0;\n    u_xlat19 = abs(u_xlat1.x) * u_xlat10
            + u_xlat18;\n    u_xlat28 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat28 = clamp(u_xlat28, 0.0, 1.0);\n    u_xlat10 = u_xlat28 * u_xlat10
            + u_xlat18;\n    u_xlat18 = u_xlat18 * u_xlat9.x;\n    u_xlat18 = (-u_xlat18)
            * 0.280000001 + 1.0;\n    u_xlat10 = u_xlat10 * abs(u_xlat1.x);\n   
            u_xlat16_4.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat28 * u_xlat19
            + u_xlat10;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat27 = u_xlat27 * u_xlat1.x;\n    u_xlat27
            = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 9.99999975e-05);\n   
            u_xlat27 = sqrt(u_xlat27);\n    u_xlat27 = u_xlat28 * u_xlat27;\n   
            u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz
            = _Color.xyz * u_xlat16_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_13.xyz, u_xlat16_13.xyz);\n   
            u_xlatb3 = u_xlat16_5.x!=0.0;\n    u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n   
            u_xlat27 = u_xlat27 * u_xlat3.x;\n    u_xlat3.xyz = vec3(u_xlat27) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_14.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_14.x;\n    u_xlat16_14.xyz = (-u_xlat16_13.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_14.xyz * u_xlat16_5.xxx
            + u_xlat16_13.xyz;\n    u_xlat3.xyz = u_xlat3.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_5.x = u_xlat0.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat9.x + -0.5;\n   
            u_xlat16_14.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_14.x = u_xlat16_14.x
            * u_xlat16_14.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_14.x;\n   
            u_xlat16_14.x = u_xlat16_5.x * u_xlat16_4.x + 1.0;\n    u_xlat16_23 =
            (-u_xlat28) + 1.0;\n    u_xlat16_32 = u_xlat16_23 * u_xlat16_23;\n   
            u_xlat16_32 = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_23 = u_xlat16_23
            * u_xlat16_32;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_23 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_14.x * u_xlat16_5.x;\n    u_xlat0.x = u_xlat28
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat2.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat2);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat2);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyw = log2(u_xlat16_6.xyz);\n   
            u_xlat0.xyw = u_xlat0.xyw * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat0.xyw = exp2(u_xlat0.xyw);\n    u_xlat0.xyw = u_xlat0.xyw * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyw = max(u_xlat0.xyw, vec3(0.0, 0.0, 0.0));\n    u_xlat16_28
            = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32 = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_32 = u_xlat16_28 * _OcclusionStrength + u_xlat16_32;\n   
            u_xlat16_5.xyz = u_xlat0.xyw * vec3(u_xlat16_32) + u_xlat16_5.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz;\n    u_xlat16_32 =
            (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat1.xyz
            * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32
            = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_13.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat16_13.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat3.xyz;\n    u_xlat0.xyz
            = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp
            sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump float u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nvec3 u_xlat8;\nlowp float u_xlat10_8;\nmediump vec3
            u_xlat16_11;\nmediump vec3 u_xlat16_13;\nmediump float u_xlat16_19;\nfloat
            u_xlat24;\nmediump float u_xlat16_27;\nmediump float u_xlat16_28;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat1.xyz = vec3(u_xlat24) *
            vs_TEXCOORD1.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat24)
            + _WorldSpaceLightPos0.xyz;\n    u_xlat24 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3 = -abs(u_xlat24) + 1.0;\n   
            u_xlat16_11.x = u_xlat16_3 * u_xlat16_3;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat16_11.x;\n    u_xlat16_3 = u_xlat16_3 * u_xlat16_11.x;\n    u_xlat8.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat8.x = max(u_xlat8.x, 0.00100000005);\n   
            u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat8.xyz = u_xlat8.xxx *
            u_xlat2.xyz;\n    u_xlat8.x = dot(_WorldSpaceLightPos0.xyz, u_xlat8.xyz);\n   
            u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_11.x = u_xlat8.x
            + u_xlat8.x;\n    u_xlat16_11.x = u_xlat8.x * u_xlat16_11.x;\n    u_xlat8.x
            = (-_Glossiness) + 1.0;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat8.x
            + -0.5;\n    u_xlat16_19 = u_xlat16_11.x * u_xlat16_3 + 1.0;\n    u_xlat16_27
            = (-u_xlat0.x) + 1.0;\n    u_xlat16_4.x = u_xlat16_27 * u_xlat16_27;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_27 = u_xlat16_27
            * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_27 + 1.0;\n   
            u_xlat16_11.x = u_xlat16_19 * u_xlat16_11.x;\n    u_xlat0.x = u_xlat0.x
            * u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat8.x * u_xlat8.x;\n    u_xlat0.x = max(u_xlat0.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat0.x * u_xlat8.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat10_8 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_4.x = u_xlat10_8
            * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat16_4.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x
            = (-u_xlat16_28) + 1.0;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n   
            u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz = _Color.xyz * u_xlat10_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_28)
            * u_xlat0.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_7.xyz = (-u_xlat16_13.xyz) + u_xlat16_5.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_3) * u_xlat16_7.xyz + u_xlat16_13.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xyz + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nvec3 u_xlat2;\nmediump float u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3
            u_xlat8;\nmediump float u_xlat16_8;\nmediump vec3 u_xlat16_11;\nmediump
            vec3 u_xlat16_13;\nmediump float u_xlat16_19;\nfloat u_xlat24;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat1.xyz
            = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n    u_xlat24 = dot(u_xlat0.xyz,
            (-u_xlat1.xyz));\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3 = -abs(u_xlat24)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_3 * u_xlat16_3;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_3 = u_xlat16_3 * u_xlat16_11.x;\n   
            u_xlat8.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat8.x = max(u_xlat8.x,
            0.00100000005);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat8.xyz
            = u_xlat8.xxx * u_xlat2.xyz;\n    u_xlat8.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat8.xyz);\n    u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_11.x
            = u_xlat8.x + u_xlat8.x;\n    u_xlat16_11.x = u_xlat8.x * u_xlat16_11.x;\n   
            u_xlat8.x = (-_Glossiness) + 1.0;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat8.x + -0.5;\n    u_xlat16_19 = u_xlat16_11.x * u_xlat16_3 + 1.0;\n   
            u_xlat16_27 = (-u_xlat0.x) + 1.0;\n    u_xlat16_4.x = u_xlat16_27 * u_xlat16_27;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_27 = u_xlat16_27
            * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_27 + 1.0;\n   
            u_xlat16_11.x = u_xlat16_19 * u_xlat16_11.x;\n    u_xlat0.x = u_xlat0.x
            * u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat8.x * u_xlat8.x;\n    u_xlat0.x = max(u_xlat0.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat0.x * u_xlat8.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat16_8 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_4.x = u_xlat16_8
            * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat16_4.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x
            = (-u_xlat16_28) + 1.0;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n   
            u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz = _Color.xyz * u_xlat16_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_28)
            * u_xlat0.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_7.xyz = (-u_xlat16_13.xyz) + u_xlat16_5.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_3) * u_xlat16_7.xyz + u_xlat16_13.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xyz + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvec3 u_xlat1;\nlowp float u_xlat10_1;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            float u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nmediump float
            u_xlat16_10;\nmediump vec3 u_xlat16_14;\nmediump float u_xlat16_18;\nmediump
            float u_xlat16_26;\nmediump float u_xlat16_28;\nmediump float u_xlat16_29;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat8.xyz = (-vs_TEXCOORD1.xyz)
            * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx
            * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat8.xyz, u_xlat8.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat8.xyz;\n    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.x
            = u_xlat0.x + u_xlat0.x;\n    u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;\n   
            u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x *
            u_xlat0.x + -0.5;\n    u_xlat8.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat3.xyz = u_xlat8.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat8.x = dot(u_xlat3.xyz, (-u_xlat1.xyz));\n   
            u_xlat16_10 = -abs(u_xlat8.x) + 1.0;\n    u_xlat16_18 = u_xlat16_10 *
            u_xlat16_10;\n    u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_10
            = u_xlat16_10 * u_xlat16_18;\n    u_xlat16_18 = u_xlat16_2.x * u_xlat16_10
            + 1.0;\n    u_xlat8.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_26 = (-u_xlat8.x)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_4.x;\n   
            u_xlat16_2.x = u_xlat16_2.x * u_xlat16_26 + 1.0;\n    u_xlat16_2.x =
            u_xlat16_18 * u_xlat16_2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat16_2.x;\n   
            u_xlat16_2.xzw = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat3.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat3);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat8.xyz = log2(u_xlat16_4.xyz);\n    u_xlat8.xyz
            = u_xlat8.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat8.xyz
            = exp2(u_xlat8.xyz);\n    u_xlat8.xyz = u_xlat8.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat10_1
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_4.x = u_xlat10_1 * _OcclusionStrength + u_xlat16_4.x;\n   
            u_xlat16_2.xzw = u_xlat8.xyz * u_xlat16_4.xxx + u_xlat16_2.xzw;\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat8.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat8.x = max(u_xlat8.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat8.x * u_xlat0.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat0.xxx;\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_5.xyz = u_xlat10_0.xyz
            * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0
            = u_xlat10_0 * _Color;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_29
            = (-u_xlat16_28) + 1.0;\n    u_xlat16_6 = u_xlat16_29 + _Glossiness;\n   
            u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);\n    SV_Target0.w = u_xlat0.w
            * u_xlat16_28 + u_xlat16_29;\n    u_xlat16_14.xyz = u_xlat0.xyz * vec3(u_xlat16_28);\n   
            u_xlat16_14.xyz = u_xlat0.www * u_xlat16_14.xyz;\n    u_xlat16_7.xyz
            = (-u_xlat16_5.xyz) + vec3(u_xlat16_6);\n    u_xlat16_5.xyz = vec3(u_xlat16_10)
            * u_xlat16_7.xyz + u_xlat16_5.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz
            * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_14.xyz * u_xlat16_2.xzw
            + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3
            u_xlat1;\nmediump float u_xlat16_1;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump float u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nvec3 u_xlat8;\nmediump float u_xlat16_10;\nmediump
            vec3 u_xlat16_14;\nmediump float u_xlat16_18;\nmediump float u_xlat16_26;\nmediump
            float u_xlat16_28;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat8.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat8.xyz,
            u_xlat8.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat8.xyz;\n   
            u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;\n    u_xlat0.x = (-_Glossiness)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * u_xlat0.x + -0.5;\n    u_xlat8.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n   
            u_xlat3.xyz = u_xlat8.xxx * vs_TEXCOORD4.xyz;\n    u_xlat8.x = dot(u_xlat3.xyz,
            (-u_xlat1.xyz));\n    u_xlat16_10 = -abs(u_xlat8.x) + 1.0;\n    u_xlat16_18
            = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_10 = u_xlat16_10 * u_xlat16_18;\n    u_xlat16_18 = u_xlat16_2.x
            * u_xlat16_10 + 1.0;\n    u_xlat8.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_26 = (-u_xlat8.x)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_4.x;\n   
            u_xlat16_2.x = u_xlat16_2.x * u_xlat16_26 + 1.0;\n    u_xlat16_2.x =
            u_xlat16_18 * u_xlat16_2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat16_2.x;\n   
            u_xlat16_2.xzw = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat3.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat3);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat8.xyz = log2(u_xlat16_4.xyz);\n    u_xlat8.xyz
            = u_xlat8.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat8.xyz
            = exp2(u_xlat8.xyz);\n    u_xlat8.xyz = u_xlat8.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_1
            = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_1 * _OcclusionStrength + u_xlat16_4.x;\n   
            u_xlat16_2.xzw = u_xlat8.xyz * u_xlat16_4.xxx + u_xlat16_2.xzw;\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat8.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat8.x = max(u_xlat8.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat8.x * u_xlat0.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat0.xxx;\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_5.xyz = u_xlat16_0.xyz
            * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0
            = u_xlat16_0 * _Color;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_29
            = (-u_xlat16_28) + 1.0;\n    u_xlat16_6 = u_xlat16_29 + _Glossiness;\n   
            u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);\n    SV_Target0.w = u_xlat0.w
            * u_xlat16_28 + u_xlat16_29;\n    u_xlat16_14.xyz = u_xlat0.xyz * vec3(u_xlat16_28);\n   
            u_xlat16_14.xyz = u_xlat0.www * u_xlat16_14.xyz;\n    u_xlat16_7.xyz
            = (-u_xlat16_5.xyz) + vec3(u_xlat16_6);\n    u_xlat16_5.xyz = vec3(u_xlat16_10)
            * u_xlat16_7.xyz + u_xlat16_5.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz
            * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_14.xyz * u_xlat16_2.xzw
            + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp float u_xlat10_1;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nmediump float
            u_xlat16_10;\nmediump vec3 u_xlat16_13;\nmediump float u_xlat16_18;\nmediump
            float u_xlat16_26;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat8.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat8.xyz,
            u_xlat8.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat8.xyz;\n   
            u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;\n    u_xlat0.x = (-_Glossiness)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * u_xlat0.x + -0.5;\n    u_xlat8.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n   
            u_xlat3.xyz = u_xlat8.xxx * vs_TEXCOORD4.xyz;\n    u_xlat8.x = dot(u_xlat3.xyz,
            (-u_xlat1.xyz));\n    u_xlat16_10 = -abs(u_xlat8.x) + 1.0;\n    u_xlat16_18
            = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_10 = u_xlat16_10 * u_xlat16_18;\n    u_xlat16_18 = u_xlat16_2.x
            * u_xlat16_10 + 1.0;\n    u_xlat8.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_26 = (-u_xlat8.x)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_4.x;\n   
            u_xlat16_2.x = u_xlat16_2.x * u_xlat16_26 + 1.0;\n    u_xlat16_2.x =
            u_xlat16_18 * u_xlat16_2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat16_2.x;\n   
            u_xlat16_2.xzw = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat3.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat3);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat8.xyz = log2(u_xlat16_4.xyz);\n    u_xlat8.xyz
            = u_xlat8.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat8.xyz
            = exp2(u_xlat8.xyz);\n    u_xlat8.xyz = u_xlat8.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat10_1
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_4.x = u_xlat10_1 * _OcclusionStrength + u_xlat16_4.x;\n   
            u_xlat16_2.xzw = u_xlat8.xyz * u_xlat16_4.xxx + u_xlat16_2.xzw;\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat8.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat8.x = max(u_xlat8.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat8.x * u_xlat0.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat0.xxx;\n    u_xlat16_28
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x = (-u_xlat16_28)
            + 1.0;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n    u_xlat16_5.x
            = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz = _Color.xyz * u_xlat10_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_28)
            * u_xlat0.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_7.xyz = (-u_xlat16_13.xyz) + u_xlat16_5.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_10) * u_xlat16_7.xyz + u_xlat16_13.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz
            * u_xlat16_2.xzw + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nmediump float u_xlat16_1;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nvec3 u_xlat8;\nmediump float u_xlat16_10;\nmediump
            vec3 u_xlat16_13;\nmediump float u_xlat16_18;\nmediump float u_xlat16_26;\nmediump
            float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat8.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat8.xyz,
            u_xlat8.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat8.xyz;\n   
            u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;\n    u_xlat0.x = (-_Glossiness)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * u_xlat0.x + -0.5;\n    u_xlat8.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n   
            u_xlat3.xyz = u_xlat8.xxx * vs_TEXCOORD4.xyz;\n    u_xlat8.x = dot(u_xlat3.xyz,
            (-u_xlat1.xyz));\n    u_xlat16_10 = -abs(u_xlat8.x) + 1.0;\n    u_xlat16_18
            = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_10 = u_xlat16_10 * u_xlat16_18;\n    u_xlat16_18 = u_xlat16_2.x
            * u_xlat16_10 + 1.0;\n    u_xlat8.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_26 = (-u_xlat8.x)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_4.x;\n   
            u_xlat16_2.x = u_xlat16_2.x * u_xlat16_26 + 1.0;\n    u_xlat16_2.x =
            u_xlat16_18 * u_xlat16_2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat16_2.x;\n   
            u_xlat16_2.xzw = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat3.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat3);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat8.xyz = log2(u_xlat16_4.xyz);\n    u_xlat8.xyz
            = u_xlat8.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat8.xyz
            = exp2(u_xlat8.xyz);\n    u_xlat8.xyz = u_xlat8.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_1
            = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_1 * _OcclusionStrength + u_xlat16_4.x;\n   
            u_xlat16_2.xzw = u_xlat8.xyz * u_xlat16_4.xxx + u_xlat16_2.xzw;\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat8.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat8.x = max(u_xlat8.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat8.x * u_xlat0.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat0.xxx;\n    u_xlat16_28
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x = (-u_xlat16_28)
            + 1.0;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n    u_xlat16_5.x
            = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz = _Color.xyz * u_xlat16_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_28)
            * u_xlat0.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_7.xyz = (-u_xlat16_13.xyz) + u_xlat16_5.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_10) * u_xlat16_7.xyz + u_xlat16_13.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz
            * u_xlat16_2.xzw + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp
            sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump float u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump float u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nvec3 u_xlat8;\nlowp float u_xlat10_8;\nmediump vec3
            u_xlat16_11;\nmediump vec3 u_xlat16_14;\nmediump float u_xlat16_19;\nfloat
            u_xlat24;\nmediump float u_xlat16_27;\nmediump float u_xlat16_28;\nmediump
            float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat1.xyz
            = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n    u_xlat24 = dot(u_xlat0.xyz,
            (-u_xlat1.xyz));\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3 = -abs(u_xlat24)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_3 * u_xlat16_3;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_3 = u_xlat16_3 * u_xlat16_11.x;\n   
            u_xlat8.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat8.x = max(u_xlat8.x,
            0.00100000005);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat8.xyz
            = u_xlat8.xxx * u_xlat2.xyz;\n    u_xlat8.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat8.xyz);\n    u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_11.x
            = u_xlat8.x + u_xlat8.x;\n    u_xlat16_11.x = u_xlat8.x * u_xlat16_11.x;\n   
            u_xlat8.x = (-_Glossiness) + 1.0;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat8.x + -0.5;\n    u_xlat16_19 = u_xlat16_11.x * u_xlat16_3 + 1.0;\n   
            u_xlat16_27 = (-u_xlat0.x) + 1.0;\n    u_xlat16_4.x = u_xlat16_27 * u_xlat16_27;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_27 = u_xlat16_27
            * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_27 + 1.0;\n   
            u_xlat16_11.x = u_xlat16_19 * u_xlat16_11.x;\n    u_xlat0.x = u_xlat0.x
            * u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat8.x * u_xlat8.x;\n    u_xlat0.x = max(u_xlat0.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat0.x * u_xlat8.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat10_8 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_4.x = u_xlat10_8
            * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat16_4.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_5.xyz
            = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat0 = u_xlat10_0 * _Color;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_29 = (-u_xlat16_28) + 1.0;\n    u_xlat16_6 = u_xlat16_29 + _Glossiness;\n   
            u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);\n    SV_Target0.w = u_xlat0.w
            * u_xlat16_28 + u_xlat16_29;\n    u_xlat16_14.xyz = u_xlat0.xyz * vec3(u_xlat16_28);\n   
            u_xlat16_14.xyz = u_xlat0.www * u_xlat16_14.xyz;\n    u_xlat16_7.xyz
            = (-u_xlat16_5.xyz) + vec3(u_xlat16_6);\n    u_xlat16_5.xyz = vec3(u_xlat16_3)
            * u_xlat16_7.xyz + u_xlat16_5.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz
            * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_14.xyz * u_xlat16_11.xyz
            + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3
            u_xlat1;\nvec3 u_xlat2;\nmediump float u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump float u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3
            u_xlat8;\nmediump float u_xlat16_8;\nmediump vec3 u_xlat16_11;\nmediump
            vec3 u_xlat16_14;\nmediump float u_xlat16_19;\nfloat u_xlat24;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_28;\nmediump float u_xlat16_29;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat1.xyz = vec3(u_xlat24) *
            vs_TEXCOORD1.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat24)
            + _WorldSpaceLightPos0.xyz;\n    u_xlat24 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3 = -abs(u_xlat24) + 1.0;\n   
            u_xlat16_11.x = u_xlat16_3 * u_xlat16_3;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat16_11.x;\n    u_xlat16_3 = u_xlat16_3 * u_xlat16_11.x;\n    u_xlat8.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat8.x = max(u_xlat8.x, 0.00100000005);\n   
            u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat8.xyz = u_xlat8.xxx *
            u_xlat2.xyz;\n    u_xlat8.x = dot(_WorldSpaceLightPos0.xyz, u_xlat8.xyz);\n   
            u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_11.x = u_xlat8.x
            + u_xlat8.x;\n    u_xlat16_11.x = u_xlat8.x * u_xlat16_11.x;\n    u_xlat8.x
            = (-_Glossiness) + 1.0;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat8.x
            + -0.5;\n    u_xlat16_19 = u_xlat16_11.x * u_xlat16_3 + 1.0;\n    u_xlat16_27
            = (-u_xlat0.x) + 1.0;\n    u_xlat16_4.x = u_xlat16_27 * u_xlat16_27;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_27 = u_xlat16_27
            * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_27 + 1.0;\n   
            u_xlat16_11.x = u_xlat16_19 * u_xlat16_11.x;\n    u_xlat0.x = u_xlat0.x
            * u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat8.x * u_xlat8.x;\n    u_xlat0.x = max(u_xlat0.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat0.x * u_xlat8.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat16_8 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_4.x = u_xlat16_8
            * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat16_4.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_5.xyz
            = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat0 = u_xlat16_0 * _Color;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_29 = (-u_xlat16_28) + 1.0;\n    u_xlat16_6 = u_xlat16_29 + _Glossiness;\n   
            u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);\n    SV_Target0.w = u_xlat0.w
            * u_xlat16_28 + u_xlat16_29;\n    u_xlat16_14.xyz = u_xlat0.xyz * vec3(u_xlat16_28);\n   
            u_xlat16_14.xyz = u_xlat0.www * u_xlat16_14.xyz;\n    u_xlat16_7.xyz
            = (-u_xlat16_5.xyz) + vec3(u_xlat16_6);\n    u_xlat16_5.xyz = vec3(u_xlat16_3)
            * u_xlat16_7.xyz + u_xlat16_5.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz
            * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_14.xyz * u_xlat16_11.xyz
            + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _EMISSION
        - _GLOSSYREFLECTIONS_OFF
        - _METALLICGLOSSMAP
        - _NORMALMAP
        - _PARALLAXMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _METALLICGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _PARALLAXMAP
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform
            lowp sampler2D _MainTex;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4
            vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat6;\nfloat
            u_xlat7;\nmediump vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat
            u_xlat12;\nfloat u_xlat13;\nmediump float u_xlat16_16;\nfloat u_xlat18;\nfloat
            u_xlat19;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.x
            = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat18) + u_xlat1.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat18) * vs_TEXCOORD1.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            (-u_xlat3.xyz));\n    u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat19 = max(u_xlat19, 0.00100000005);\n    u_xlat19 = inversesqrt(u_xlat19);\n   
            u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;\n    u_xlat19 = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat6 = clamp(u_xlat6,
            0.0, 1.0);\n    u_xlat12 = (-_Glossiness) + 1.0;\n    u_xlat1.x = u_xlat12
            * u_xlat12;\n    u_xlat1.x = max(u_xlat1.x, 0.00200000009);\n    u_xlat7
            = u_xlat1.x * u_xlat1.x;\n    u_xlat13 = u_xlat19 * u_xlat7 + (-u_xlat19);\n   
            u_xlat13 = u_xlat13 * u_xlat19 + 1.0;\n    u_xlat13 = u_xlat13 * u_xlat13
            + 1.00000001e-07;\n    u_xlat7 = u_xlat7 * 0.318309873;\n    u_xlat7
            = u_xlat7 / u_xlat13;\n    u_xlat13 = (-u_xlat1.x) + 1.0;\n    u_xlat19
            = abs(u_xlat18) * u_xlat13 + u_xlat1.x;\n    u_xlat1.x = u_xlat0.x *
            u_xlat13 + u_xlat1.x;\n    u_xlat1.x = abs(u_xlat18) * u_xlat1.x;\n   
            u_xlat16_4.x = -abs(u_xlat18) + 1.0;\n    u_xlat18 = u_xlat0.x * u_xlat19
            + u_xlat1.x;\n    u_xlat18 = u_xlat18 + 9.99999975e-06;\n    u_xlat18
            = 0.5 / u_xlat18;\n    u_xlat18 = u_xlat7 * u_xlat18;\n    u_xlat18 =
            u_xlat18 * 3.14159274;\n    u_xlat18 = max(u_xlat18, 9.99999975e-05);\n   
            u_xlat18 = sqrt(u_xlat18);\n    u_xlat18 = u_xlat0.x * u_xlat18;\n   
            u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_10.xyz
            = u_xlat10_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1 = u_xlat10_1 * _Color;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb2 = u_xlat16_5.x!=0.0;\n    u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n   
            u_xlat18 = u_xlat18 * u_xlat2.x;\n    u_xlat2.xyz = vec3(u_xlat18) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat6) + 1.0;\n    u_xlat16_11.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_11.xyz * u_xlat16_5.xxx
            + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_10.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x
            * u_xlat16_10.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat6 + u_xlat6;\n    u_xlat16_10.x = u_xlat6 * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat12 + -0.5;\n    u_xlat16_4.x =
            u_xlat16_10.x * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = (-u_xlat0.x) +
            1.0;\n    u_xlat16_22 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_22 =
            u_xlat16_22 * u_xlat16_22;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_22;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_16 + 1.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_22 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz = u_xlat1.xyz * vec3(u_xlat16_22);\n   
            u_xlat16_5.xyz = u_xlat1.www * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_5.xyz
            * u_xlat16_4.xyz + u_xlat2.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            u_xlat16_4.x = (-u_xlat16_22) + 1.0;\n    SV_Target0.w = u_xlat1.w *
            u_xlat16_22 + u_xlat16_4.x;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec4 u_xlat1;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat6;\nfloat u_xlat7;\nmediump
            vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat12;\nfloat
            u_xlat13;\nmediump float u_xlat16_16;\nfloat u_xlat18;\nfloat u_xlat19;\nmediump
            float u_xlat16_22;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.x
            = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat18) + u_xlat1.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat18) * vs_TEXCOORD1.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            (-u_xlat3.xyz));\n    u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat19 = max(u_xlat19, 0.00100000005);\n    u_xlat19 = inversesqrt(u_xlat19);\n   
            u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;\n    u_xlat19 = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat6 = clamp(u_xlat6,
            0.0, 1.0);\n    u_xlat12 = (-_Glossiness) + 1.0;\n    u_xlat1.x = u_xlat12
            * u_xlat12;\n    u_xlat1.x = max(u_xlat1.x, 0.00200000009);\n    u_xlat7
            = u_xlat1.x * u_xlat1.x;\n    u_xlat13 = u_xlat19 * u_xlat7 + (-u_xlat19);\n   
            u_xlat13 = u_xlat13 * u_xlat19 + 1.0;\n    u_xlat13 = u_xlat13 * u_xlat13
            + 1.00000001e-07;\n    u_xlat7 = u_xlat7 * 0.318309873;\n    u_xlat7
            = u_xlat7 / u_xlat13;\n    u_xlat13 = (-u_xlat1.x) + 1.0;\n    u_xlat19
            = abs(u_xlat18) * u_xlat13 + u_xlat1.x;\n    u_xlat1.x = u_xlat0.x *
            u_xlat13 + u_xlat1.x;\n    u_xlat1.x = abs(u_xlat18) * u_xlat1.x;\n   
            u_xlat16_4.x = -abs(u_xlat18) + 1.0;\n    u_xlat18 = u_xlat0.x * u_xlat19
            + u_xlat1.x;\n    u_xlat18 = u_xlat18 + 9.99999975e-06;\n    u_xlat18
            = 0.5 / u_xlat18;\n    u_xlat18 = u_xlat7 * u_xlat18;\n    u_xlat18 =
            u_xlat18 * 3.14159274;\n    u_xlat18 = max(u_xlat18, 9.99999975e-05);\n   
            u_xlat18 = sqrt(u_xlat18);\n    u_xlat18 = u_xlat0.x * u_xlat18;\n   
            u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_10.xyz
            = u_xlat16_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1 = u_xlat16_1 * _Color;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb2 = u_xlat16_5.x!=0.0;\n    u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n   
            u_xlat18 = u_xlat18 * u_xlat2.x;\n    u_xlat2.xyz = vec3(u_xlat18) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat6) + 1.0;\n    u_xlat16_11.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_11.xyz * u_xlat16_5.xxx
            + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_10.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x
            * u_xlat16_10.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat6 + u_xlat6;\n    u_xlat16_10.x = u_xlat6 * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat12 + -0.5;\n    u_xlat16_4.x =
            u_xlat16_10.x * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = (-u_xlat0.x) +
            1.0;\n    u_xlat16_22 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_22 =
            u_xlat16_22 * u_xlat16_22;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_22;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_16 + 1.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_22 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz = u_xlat1.xyz * vec3(u_xlat16_22);\n   
            u_xlat16_5.xyz = u_xlat1.www * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_5.xyz
            * u_xlat16_4.xyz + u_xlat2.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            u_xlat16_4.x = (-u_xlat16_22) + 1.0;\n    SV_Target0.w = u_xlat1.w *
            u_xlat16_22 + u_xlat16_4.x;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform
            lowp sampler2D _MainTex;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4
            vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat6;\nfloat u_xlat7;\nmediump
            vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat12;\nfloat
            u_xlat13;\nmediump float u_xlat16_16;\nfloat u_xlat18;\nfloat u_xlat19;\nbool
            u_xlatb19;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.x
            = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat18) + u_xlat1.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat18) * vs_TEXCOORD1.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            (-u_xlat3.xyz));\n    u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat19 = max(u_xlat19, 0.00100000005);\n    u_xlat19 = inversesqrt(u_xlat19);\n   
            u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;\n    u_xlat19 = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat6 = clamp(u_xlat6,
            0.0, 1.0);\n    u_xlat12 = (-_Glossiness) + 1.0;\n    u_xlat1.x = u_xlat12
            * u_xlat12;\n    u_xlat1.x = max(u_xlat1.x, 0.00200000009);\n    u_xlat7
            = u_xlat1.x * u_xlat1.x;\n    u_xlat13 = u_xlat19 * u_xlat7 + (-u_xlat19);\n   
            u_xlat13 = u_xlat13 * u_xlat19 + 1.0;\n    u_xlat13 = u_xlat13 * u_xlat13
            + 1.00000001e-07;\n    u_xlat7 = u_xlat7 * 0.318309873;\n    u_xlat7
            = u_xlat7 / u_xlat13;\n    u_xlat13 = (-u_xlat1.x) + 1.0;\n    u_xlat19
            = abs(u_xlat18) * u_xlat13 + u_xlat1.x;\n    u_xlat1.x = u_xlat0.x *
            u_xlat13 + u_xlat1.x;\n    u_xlat1.x = abs(u_xlat18) * u_xlat1.x;\n   
            u_xlat16_4.x = -abs(u_xlat18) + 1.0;\n    u_xlat18 = u_xlat0.x * u_xlat19
            + u_xlat1.x;\n    u_xlat18 = u_xlat18 + 9.99999975e-06;\n    u_xlat18
            = 0.5 / u_xlat18;\n    u_xlat18 = u_xlat7 * u_xlat18;\n    u_xlat18 =
            u_xlat18 * 3.14159274;\n    u_xlat18 = max(u_xlat18, 9.99999975e-05);\n   
            u_xlat18 = sqrt(u_xlat18);\n    u_xlat18 = u_xlat0.x * u_xlat18;\n   
            u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_10.xyz
            = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb19 = u_xlat16_5.x!=0.0;\n    u_xlat19 = u_xlatb19 ? 1.0 : float(0.0);\n   
            u_xlat18 = u_xlat18 * u_xlat19;\n    u_xlat2.xyz = vec3(u_xlat18) * _LightColor0.xyz;\n   
            u_xlat16_5.x = (-u_xlat6) + 1.0;\n    u_xlat16_11.x = u_xlat16_5.x *
            u_xlat16_5.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_11.xyz * u_xlat16_5.xxx
            + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_10.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x
            * u_xlat16_10.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat6 + u_xlat6;\n    u_xlat16_10.x = u_xlat6 * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat12 + -0.5;\n    u_xlat16_4.x =
            u_xlat16_10.x * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = (-u_xlat0.x) +
            1.0;\n    u_xlat16_22 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_22 =
            u_xlat16_22 * u_xlat16_22;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_22;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_16 + 1.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_22 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz = u_xlat1.xyz * vec3(u_xlat16_22);\n   
            u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat2.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nfloat u_xlat6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat12;\nfloat u_xlat13;\nmediump float u_xlat16_16;\nfloat
            u_xlat18;\nfloat u_xlat19;\nbool u_xlatb19;\nmediump float u_xlat16_22;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.x = vs_TEXCOORD2.w;\n   
            u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat2.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat18) + u_xlat1.xyz;\n    u_xlat3.xyz
            = vec3(u_xlat18) * vs_TEXCOORD1.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            (-u_xlat3.xyz));\n    u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat19 = max(u_xlat19, 0.00100000005);\n    u_xlat19 = inversesqrt(u_xlat19);\n   
            u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;\n    u_xlat19 = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat6 = clamp(u_xlat6,
            0.0, 1.0);\n    u_xlat12 = (-_Glossiness) + 1.0;\n    u_xlat1.x = u_xlat12
            * u_xlat12;\n    u_xlat1.x = max(u_xlat1.x, 0.00200000009);\n    u_xlat7
            = u_xlat1.x * u_xlat1.x;\n    u_xlat13 = u_xlat19 * u_xlat7 + (-u_xlat19);\n   
            u_xlat13 = u_xlat13 * u_xlat19 + 1.0;\n    u_xlat13 = u_xlat13 * u_xlat13
            + 1.00000001e-07;\n    u_xlat7 = u_xlat7 * 0.318309873;\n    u_xlat7
            = u_xlat7 / u_xlat13;\n    u_xlat13 = (-u_xlat1.x) + 1.0;\n    u_xlat19
            = abs(u_xlat18) * u_xlat13 + u_xlat1.x;\n    u_xlat1.x = u_xlat0.x *
            u_xlat13 + u_xlat1.x;\n    u_xlat1.x = abs(u_xlat18) * u_xlat1.x;\n   
            u_xlat16_4.x = -abs(u_xlat18) + 1.0;\n    u_xlat18 = u_xlat0.x * u_xlat19
            + u_xlat1.x;\n    u_xlat18 = u_xlat18 + 9.99999975e-06;\n    u_xlat18
            = 0.5 / u_xlat18;\n    u_xlat18 = u_xlat7 * u_xlat18;\n    u_xlat18 =
            u_xlat18 * 3.14159274;\n    u_xlat18 = max(u_xlat18, 9.99999975e-05);\n   
            u_xlat18 = sqrt(u_xlat18);\n    u_xlat18 = u_xlat0.x * u_xlat18;\n   
            u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_10.xyz
            = _Color.xyz * u_xlat16_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb19 = u_xlat16_5.x!=0.0;\n    u_xlat19 = u_xlatb19 ? 1.0 : float(0.0);\n   
            u_xlat18 = u_xlat18 * u_xlat19;\n    u_xlat2.xyz = vec3(u_xlat18) * _LightColor0.xyz;\n   
            u_xlat16_5.x = (-u_xlat6) + 1.0;\n    u_xlat16_11.x = u_xlat16_5.x *
            u_xlat16_5.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_11.xyz * u_xlat16_5.xxx
            + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_10.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x
            * u_xlat16_10.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat6 + u_xlat6;\n    u_xlat16_10.x = u_xlat6 * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat12 + -0.5;\n    u_xlat16_4.x =
            u_xlat16_10.x * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = (-u_xlat0.x) +
            1.0;\n    u_xlat16_22 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_22 =
            u_xlat16_22 * u_xlat16_22;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_22;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_16 + 1.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_22 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz = u_xlat1.xyz * vec3(u_xlat16_22);\n   
            u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat2.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform
            lowp sampler2D _MainTex;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4
            vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4
            u_xlat0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump float
            u_xlat16_8;\nmediump float u_xlat16_13;\nfloat u_xlat15;\nmediump float
            u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat1.x = vs_TEXCOORD2.w;\n   
            u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat2.xyz =
            u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.x
            = u_xlat0.x + u_xlat0.x;\n    u_xlat16_3.x = u_xlat0.x * u_xlat16_3.x;\n   
            u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x *
            u_xlat0.x + -0.5;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, u_xlat1.xyz);\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            (-u_xlat2.xyz));\n    u_xlat16_8 = -abs(u_xlat0.x) + 1.0;\n    u_xlat16_13
            = (-u_xlat15) + 1.0;\n    u_xlat16_18 = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_13
            * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_3.x * u_xlat16_13 + 1.0;\n   
            u_xlat16_18 = u_xlat16_8 * u_xlat16_8;\n    u_xlat16_18 = u_xlat16_18
            * u_xlat16_18;\n    u_xlat16_8 = u_xlat16_8 * u_xlat16_18;\n    u_xlat16_3.x
            = u_xlat16_3.x * u_xlat16_8 + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x *
            u_xlat16_13;\n    u_xlat0.x = u_xlat15 * u_xlat16_3.x;\n    u_xlat16_3.xyz
            = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 * _Color;\n    u_xlat16_18
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * vec3(u_xlat16_18);\n    u_xlat16_4.xyz = u_xlat0.www * u_xlat16_4.xyz;\n   
            SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    u_xlat16_3.x =
            (-u_xlat16_18) + 1.0;\n    SV_Target0.w = u_xlat0.w * u_xlat16_18 + u_xlat16_3.x;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3
            u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nmediump float u_xlat16_8;\nmediump float u_xlat16_13;\nfloat
            u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat1.x = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z
            = vs_TEXCOORD4.w;\n    u_xlat5.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx
            + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat0.x = max(u_xlat0.x,
            0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat5.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.x = u_xlat0.x
            + u_xlat0.x;\n    u_xlat16_3.x = u_xlat0.x * u_xlat16_3.x;\n    u_xlat0.x
            = (-_Glossiness) + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat0.x
            + -0.5;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, u_xlat1.xyz);\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            (-u_xlat2.xyz));\n    u_xlat16_8 = -abs(u_xlat0.x) + 1.0;\n    u_xlat16_13
            = (-u_xlat15) + 1.0;\n    u_xlat16_18 = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_13
            * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_3.x * u_xlat16_13 + 1.0;\n   
            u_xlat16_18 = u_xlat16_8 * u_xlat16_8;\n    u_xlat16_18 = u_xlat16_18
            * u_xlat16_18;\n    u_xlat16_8 = u_xlat16_8 * u_xlat16_18;\n    u_xlat16_3.x
            = u_xlat16_3.x * u_xlat16_8 + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x *
            u_xlat16_13;\n    u_xlat0.x = u_xlat15 * u_xlat16_3.x;\n    u_xlat16_3.xyz
            = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat16_0 * _Color;\n    u_xlat16_18
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * vec3(u_xlat16_18);\n    u_xlat16_4.xyz = u_xlat0.www * u_xlat16_4.xyz;\n   
            SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    u_xlat16_3.x =
            (-u_xlat16_18) + 1.0;\n    SV_Target0.w = u_xlat0.w * u_xlat16_18 + u_xlat16_3.x;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform
            lowp sampler2D _MainTex;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4
            vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump float
            u_xlat16_8;\nmediump float u_xlat16_13;\nfloat u_xlat15;\nmediump float
            u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat1.x = vs_TEXCOORD2.w;\n   
            u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat2.xyz =
            u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.x
            = u_xlat0.x + u_xlat0.x;\n    u_xlat16_3.x = u_xlat0.x * u_xlat16_3.x;\n   
            u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x *
            u_xlat0.x + -0.5;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, u_xlat1.xyz);\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            (-u_xlat2.xyz));\n    u_xlat16_8 = -abs(u_xlat0.x) + 1.0;\n    u_xlat16_13
            = (-u_xlat15) + 1.0;\n    u_xlat16_18 = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_13
            * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_3.x * u_xlat16_13 + 1.0;\n   
            u_xlat16_18 = u_xlat16_8 * u_xlat16_8;\n    u_xlat16_18 = u_xlat16_18
            * u_xlat16_18;\n    u_xlat16_8 = u_xlat16_8 * u_xlat16_18;\n    u_xlat16_3.x
            = u_xlat16_3.x * u_xlat16_8 + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x *
            u_xlat16_13;\n    u_xlat0.x = u_xlat15 * u_xlat16_3.x;\n    u_xlat16_3.xyz
            = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat0.xyz * vec3(u_xlat16_18);\n    SV_Target0.xyz = u_xlat16_3.xyz
            * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nmediump float u_xlat16_8;\nmediump float u_xlat16_13;\nfloat
            u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat1.x = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z
            = vs_TEXCOORD4.w;\n    u_xlat5.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx
            + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat0.x = max(u_xlat0.x,
            0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat5.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.x = u_xlat0.x
            + u_xlat0.x;\n    u_xlat16_3.x = u_xlat0.x * u_xlat16_3.x;\n    u_xlat0.x
            = (-_Glossiness) + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat0.x
            + -0.5;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, u_xlat1.xyz);\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            (-u_xlat2.xyz));\n    u_xlat16_8 = -abs(u_xlat0.x) + 1.0;\n    u_xlat16_13
            = (-u_xlat15) + 1.0;\n    u_xlat16_18 = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_13
            * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_3.x * u_xlat16_13 + 1.0;\n   
            u_xlat16_18 = u_xlat16_8 * u_xlat16_8;\n    u_xlat16_18 = u_xlat16_18
            * u_xlat16_18;\n    u_xlat16_8 = u_xlat16_8 * u_xlat16_18;\n    u_xlat16_3.x
            = u_xlat16_3.x * u_xlat16_8 + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x *
            u_xlat16_13;\n    u_xlat0.x = u_xlat15 * u_xlat16_3.x;\n    u_xlat16_3.xyz
            = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat0.xyz * vec3(u_xlat16_18);\n    SV_Target0.xyz = u_xlat16_3.xyz
            * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_SHADOW_MIXING
        - POINT
        - POINT_COOKIE
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - SHADOWS_SOFT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _METALLICGLOSSMAP
        - _NORMALMAP
        - _PARALLAXMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _METALLICGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _PARALLAXMAP
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 47
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _METALLICGLOSSMAP
        - _PARALLAXMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _METALLICGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _PARALLAXMAP
          hasDiscard: 1
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: PerformanceChecks
        Value: False
      - Key: RenderType
        Value: Opaque
    - Index: 1
      Passes:
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp float u_xlat10_0;\nmediump float
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump
            vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3
            u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat16;\nmediump float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid
            main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n   
            u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1
            = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1
            = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1);\n   
            u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;\n   
            u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) +
            (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    SV_Target0.xyz
            = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump float u_xlat16_0;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3
            u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump float u_xlat16_27;\nmediump
            float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x
            * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n   
            u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat2.xyz
            * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0,
            u_xlat16_9.xyz, u_xlat16_1.x);\n    u_xlat16_3.x = u_xlat16_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat16_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat16_0 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = vec3(u_xlat16_0) * u_xlat16_3.xyz;\n    u_xlat0.x =
            dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) +
            (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    SV_Target0.xyz
            = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            float u_xlat10_0;\nvec4 u_xlat1;\nmediump float u_xlat16_1;\nlowp vec4
            u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nfloat u_xlat9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat18;\nmediump
            float u_xlat16_30;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n   
            u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n   
            u_xlat16_10.xyz = u_xlat2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1);\n   
            u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;\n   
            u_xlat16_4.xyz = vec3(u_xlat10_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x
            = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat18 = u_xlat0.x;\n   
            u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_30 = (-u_xlat18) + 1.0;\n    u_xlat9
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat9 = u_xlat16_30 * u_xlat9;\n   
            u_xlat9 = u_xlat16_30 * u_xlat9;\n    u_xlat16_30 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_31 = (-u_xlat16_30) + 1.0;\n    u_xlat16_31
            = u_xlat16_31 + _Glossiness;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0,
            1.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_7.xyz
            = u_xlat10_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1 = u_xlat10_1.wxyz * _Color.wxyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_7.xyz);\n   
            u_xlat16_8.xyz = vec3(u_xlat9) * u_xlat16_8.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_8.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_30) * u_xlat1.yzw;\n    u_xlat16_8.xyz = u_xlat1.xxx
            * u_xlat16_8.xyz;\n    SV_Target0.w = u_xlat1.x;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    SV_Target0.xyz
            = u_xlat16_4.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump float u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3
            u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat9;\nmediump vec3 u_xlat16_10;\nfloat
            u_xlat18;\nmediump float u_xlat16_30;\nmediump float u_xlat16_31;\nvoid
            main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n   
            u_xlat16_1.x = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x * 6.0;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_10.x
            = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat2.xyz *
            (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0,
            u_xlat16_10.xyz, u_xlat16_1.x);\n    u_xlat16_3.x = u_xlat16_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat16_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat16_0 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = vec3(u_xlat16_0) * u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = vec3(u_xlat16_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat18 = u_xlat0.x;\n    u_xlat18 = clamp(u_xlat18,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat5.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_30 = (-u_xlat18) + 1.0;\n    u_xlat9
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat9 = u_xlat16_30 * u_xlat9;\n   
            u_xlat9 = u_xlat16_30 * u_xlat9;\n    u_xlat16_30 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_31 = (-u_xlat16_30) + 1.0;\n    u_xlat16_31
            = u_xlat16_31 + _Glossiness;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0,
            1.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_7.xyz
            = u_xlat16_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1 = u_xlat16_1.wxyz * _Color.wxyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_7.xyz);\n   
            u_xlat16_8.xyz = vec3(u_xlat9) * u_xlat16_8.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_8.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_30) * u_xlat1.yzw;\n    u_xlat16_8.xyz = u_xlat1.xxx
            * u_xlat16_8.xyz;\n    SV_Target0.w = u_xlat1.x;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    SV_Target0.xyz
            = u_xlat16_4.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            float u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3
            u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float u_xlat16_33;\nmediump
            float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat16_11.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_11.x
            = u_xlat16_11.x + u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat2.xyz *
            (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat16_11.xyz, u_xlat16_1);\n    u_xlat16_3.x = u_xlat10_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat10_0 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = vec3(u_xlat10_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n    u_xlat20 = clamp(u_xlat20,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat5.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n   
            u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    SV_Target0.xyz
            = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump float u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float
            u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n   
            u_xlat16_11.xyz = u_xlat2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_1.x);\n   
            u_xlat16_3.x = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat16_0) * u_xlat16_3.xyz;\n   
            u_xlat16_4.xyz = vec3(u_xlat16_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x
            = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n   
            u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n   
            u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    SV_Target0.xyz
            = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp float u_xlat10_0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3
            u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n   
            u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1
            = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1);\n   
            u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;\n   
            u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_6.xyz
            = u_xlat10_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1 = u_xlat10_1.wxyz * _Color.wxyz;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) + (-u_xlat16_6.xyz);\n   
            u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n    u_xlat16_3.xyz =
            u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_27)
            * u_xlat1.yzw;\n    u_xlat16_6.xyz = u_xlat16_7.xyz * u_xlat1.xxx + u_xlat16_6.xyz;\n   
            SV_Target0.w = u_xlat1.x;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump float u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec3
            u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3
            u_xlat16_9;\nfloat u_xlat16;\nmediump float u_xlat16_27;\nmediump float
            u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness)) +
            vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x
            * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n   
            u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat2.xyz
            * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0,
            u_xlat16_9.xyz, u_xlat16_1.x);\n    u_xlat16_3.x = u_xlat16_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat16_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat16_0 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = vec3(u_xlat16_0) * u_xlat16_3.xyz;\n    u_xlat0.x =
            dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_6.xyz
            = u_xlat16_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1 = u_xlat16_1.wxyz * _Color.wxyz;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) + (-u_xlat16_6.xyz);\n   
            u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n    u_xlat16_3.xyz =
            u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_27)
            * u_xlat1.yzw;\n    u_xlat16_6.xyz = u_xlat16_7.xyz * u_xlat1.xxx + u_xlat16_6.xyz;\n   
            SV_Target0.w = u_xlat1.x;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            float u_xlat10_0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nmediump float
            u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat21;\nmediump float u_xlat16_24;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat1.x = u_xlat21 + u_xlat21;\n    u_xlat21 = u_xlat21;\n   
            u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat16_2 = (-u_xlat21) +
            1.0;\n    u_xlat1.xyz = u_xlat0.xyz * (-u_xlat1.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_9.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = u_xlat10_1.xyz * _Color.xyz +
            vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1 = u_xlat10_1.wxyz
            * _Color.wxyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_24 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz = u_xlat1.yzw * vec3(u_xlat16_24);\n   
            u_xlat16_24 = (-u_xlat16_24) + 1.0;\n    u_xlat16_24 = u_xlat16_24 +
            _Glossiness;\n    u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);\n    u_xlat16_6.xyz
            = (-u_xlat16_3.xyz) + vec3(u_xlat16_24);\n    u_xlat16_4.xyz = u_xlat16_5.xyz
            * u_xlat1.xxx + u_xlat16_4.xyz;\n    SV_Target0.w = u_xlat1.x;\n    u_xlat0.x
            = u_xlat16_2 * u_xlat16_2;\n    u_xlat0.x = u_xlat16_2 * u_xlat0.x;\n   
            u_xlat0.x = u_xlat16_2 * u_xlat0.x;\n    u_xlat16_3.xyz = u_xlat0.xxx
            * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat10_0 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_5.xyz = vec3(u_xlat10_0) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz;\n    SV_Target0.xyz
            = u_xlat16_4.xyz * u_xlat16_9.xyz + u_xlat16_3.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin highp
            vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0)
            out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump float u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_9;\nfloat u_xlat21;\nmediump
            float u_xlat16_24;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat1.x = u_xlat21 + u_xlat21;\n    u_xlat21 = u_xlat21;\n   
            u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat16_2 = (-u_xlat21) +
            1.0;\n    u_xlat1.xyz = u_xlat0.xyz * (-u_xlat1.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_9.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = u_xlat16_1.xyz * _Color.xyz +
            vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1 = u_xlat16_1.wxyz
            * _Color.wxyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_24 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz = u_xlat1.yzw * vec3(u_xlat16_24);\n   
            u_xlat16_24 = (-u_xlat16_24) + 1.0;\n    u_xlat16_24 = u_xlat16_24 +
            _Glossiness;\n    u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);\n    u_xlat16_6.xyz
            = (-u_xlat16_3.xyz) + vec3(u_xlat16_24);\n    u_xlat16_4.xyz = u_xlat16_5.xyz
            * u_xlat1.xxx + u_xlat16_4.xyz;\n    SV_Target0.w = u_xlat1.x;\n    u_xlat0.x
            = u_xlat16_2 * u_xlat16_2;\n    u_xlat0.x = u_xlat16_2 * u_xlat0.x;\n   
            u_xlat0.x = u_xlat16_2 * u_xlat0.x;\n    u_xlat16_3.xyz = u_xlat0.xxx
            * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat16_0 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_5.xyz = vec3(u_xlat16_0) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz;\n    SV_Target0.xyz
            = u_xlat16_4.xyz * u_xlat16_9.xyz + u_xlat16_3.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat7;\nlowp float
            u_xlat10_7;\nvec3 u_xlat8;\nmediump vec3 u_xlat16_10;\nfloat u_xlat21;\nmediump
            float u_xlat16_23;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat1.x = u_xlat21;\n    u_xlat1.x = clamp(u_xlat1.x,
            0.0, 1.0);\n    u_xlat21 = u_xlat21 + u_xlat21;\n    u_xlat8.xyz = u_xlat0.xyz
            * (-vec3(u_xlat21)) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat8.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat16_23 = (-u_xlat1.x) +
            1.0;\n    u_xlat7 = u_xlat16_23 * u_xlat16_23;\n    u_xlat7 = u_xlat16_23
            * u_xlat7;\n    u_xlat7 = u_xlat16_23 * u_xlat7;\n    u_xlat16_23 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.x = (-u_xlat16_23) + 1.0;\n   
            u_xlat16_3.x = u_xlat16_3.x + _Glossiness;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_10.xyz = u_xlat10_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat1 = u_xlat10_1.wxyz * _Color.wxyz;\n    u_xlat16_10.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_4.xyz = (-u_xlat16_10.xyz) +
            u_xlat16_3.xxx;\n    u_xlat16_4.xyz = vec3(u_xlat7) * u_xlat16_4.xyz
            + u_xlat16_10.xyz;\n    u_xlat10_7 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.xyz = vec3(u_xlat10_7) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat10_7) * vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat16_23)
            * u_xlat1.yzw;\n    u_xlat16_5.xyz = u_xlat1.xxx * u_xlat16_5.xyz;\n   
            SV_Target0.w = u_xlat1.x;\n    u_xlat16_4.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_4.xyz;\n    u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x
            = texture2D(unity_NHxRoughness, u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_10.xyz + u_xlat16_5.xyz;\n   
            SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_4.xyz;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin highp
            vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec4 u_xlat1;\nmediump
            vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat7;\nmediump float u_xlat16_7;\nvec3 u_xlat8;\nmediump vec3 u_xlat16_10;\nfloat
            u_xlat21;\nmediump float u_xlat16_23;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat1.x = u_xlat21;\n    u_xlat1.x = clamp(u_xlat1.x,
            0.0, 1.0);\n    u_xlat21 = u_xlat21 + u_xlat21;\n    u_xlat8.xyz = u_xlat0.xyz
            * (-vec3(u_xlat21)) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat8.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat16_23 = (-u_xlat1.x) +
            1.0;\n    u_xlat7 = u_xlat16_23 * u_xlat16_23;\n    u_xlat7 = u_xlat16_23
            * u_xlat7;\n    u_xlat7 = u_xlat16_23 * u_xlat7;\n    u_xlat16_23 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.x = (-u_xlat16_23) + 1.0;\n   
            u_xlat16_3.x = u_xlat16_3.x + _Glossiness;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_10.xyz = u_xlat16_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat1 = u_xlat16_1.wxyz * _Color.wxyz;\n    u_xlat16_10.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_4.xyz = (-u_xlat16_10.xyz) +
            u_xlat16_3.xxx;\n    u_xlat16_4.xyz = vec3(u_xlat7) * u_xlat16_4.xyz
            + u_xlat16_10.xyz;\n    u_xlat16_7 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.xyz = vec3(u_xlat16_7) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_7) * vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat16_23)
            * u_xlat1.yzw;\n    u_xlat16_5.xyz = u_xlat1.xxx * u_xlat16_5.xyz;\n   
            SV_Target0.w = u_xlat1.x;\n    u_xlat16_4.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_4.xyz;\n    u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x
            = texture(unity_NHxRoughness, u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_10.xyz + u_xlat16_5.xyz;\n   
            SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_4.xyz;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3
            u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n   
            u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1
            = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1);\n   
            u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0.x =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_0.xxx
            * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n   
            u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx)
            + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) +
            (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump
            samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1
            = textureLod(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1.x);\n    u_xlat16_3.x
            = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x
            + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0.x =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat16_0.xxx
            * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n   
            u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx)
            + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) +
            (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    u_xlat16_0.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz
            * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec4 u_xlat1;\nmediump float u_xlat16_1;\nlowp vec4
            u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nfloat u_xlat9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat18;\nmediump
            float u_xlat16_30;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n   
            u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n   
            u_xlat16_10.xyz = u_xlat2.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1);\n   
            u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0.x =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_0.xxx
            * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = u_xlat10_0.xxx * vs_TEXCOORD5.xyz;\n   
            u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat18 = u_xlat0.x;\n   
            u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_30 = (-u_xlat18) + 1.0;\n    u_xlat9
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat9 = u_xlat16_30 * u_xlat9;\n   
            u_xlat9 = u_xlat16_30 * u_xlat9;\n    u_xlat16_30 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_31 = (-u_xlat16_30) + 1.0;\n    u_xlat16_31
            = u_xlat16_31 + _Glossiness;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0,
            1.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_7.xyz
            = u_xlat10_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1 = u_xlat10_1.wxyz * _Color.wxyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_7.xyz);\n   
            u_xlat16_8.xyz = vec3(u_xlat9) * u_xlat16_8.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_8.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_30) * u_xlat1.yzw;\n    u_xlat16_8.xyz = u_xlat1.xxx
            * u_xlat16_8.xyz;\n    SV_Target0.w = u_xlat1.x;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump
            samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3
            u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat9;\nmediump vec3 u_xlat16_10;\nfloat
            u_xlat18;\nmediump float u_xlat16_30;\nmediump float u_xlat16_31;\nvoid
            main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n   
            u_xlat16_1.x = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x * 6.0;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_10.x
            = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat2.xyz *
            (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0,
            u_xlat16_10.xyz, u_xlat16_1.x);\n    u_xlat16_3.x = u_xlat16_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat16_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat18 = u_xlat0.x;\n    u_xlat18 = clamp(u_xlat18,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat5.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_30 = (-u_xlat18) + 1.0;\n    u_xlat9
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat9 = u_xlat16_30 * u_xlat9;\n   
            u_xlat9 = u_xlat16_30 * u_xlat9;\n    u_xlat16_30 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_31 = (-u_xlat16_30) + 1.0;\n    u_xlat16_31
            = u_xlat16_31 + _Glossiness;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0,
            1.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_7.xyz
            = u_xlat16_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1 = u_xlat16_1.wxyz * _Color.wxyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_7.xyz);\n   
            u_xlat16_8.xyz = vec3(u_xlat9) * u_xlat16_8.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_8.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_30) * u_xlat1.yzw;\n    u_xlat16_8.xyz = u_xlat1.xxx
            * u_xlat16_8.xyz;\n    SV_Target0.w = u_xlat1.x;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat16_0.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz
            * _EmissionColor.xyz + u_xlat16_3.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3
            u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float u_xlat16_33;\nmediump
            float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat16_11.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_11.x
            = u_xlat16_11.x + u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat2.xyz *
            (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat16_11.xyz, u_xlat16_1);\n    u_xlat16_3.x = u_xlat10_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = u_xlat10_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n    u_xlat20 = clamp(u_xlat20,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat5.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n   
            u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump
            samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float
            u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n   
            u_xlat16_11.xyz = u_xlat2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_1.x);\n   
            u_xlat16_3.x = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0.x =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat16_0.xxx
            * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = u_xlat16_0.xxx * vs_TEXCOORD5.xyz;\n   
            u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n   
            u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n   
            u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat16_0.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz
            * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3
            u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n   
            u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1
            = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1);\n   
            u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0.x =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_0.xxx
            * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n   
            u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx)
            + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_6.xyz
            = u_xlat10_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1 = u_xlat10_1.wxyz * _Color.wxyz;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) + (-u_xlat16_6.xyz);\n   
            u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n    u_xlat16_3.xyz =
            u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_27)
            * u_xlat1.yzw;\n    u_xlat16_6.xyz = u_xlat16_7.xyz * u_xlat1.xxx + u_xlat16_6.xyz;\n   
            SV_Target0.w = u_xlat1.x;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump
            samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1
            = textureLod(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1.x);\n    u_xlat16_3.x
            = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x
            + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0.x =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat16_0.xxx
            * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n   
            u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx)
            + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_6.xyz
            = u_xlat16_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1 = u_xlat16_1.wxyz * _Color.wxyz;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) + (-u_xlat16_6.xyz);\n   
            u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n    u_xlat16_3.xyz =
            u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_27)
            * u_xlat1.yzw;\n    u_xlat16_6.xyz = u_xlat16_7.xyz * u_xlat1.xxx + u_xlat16_6.xyz;\n   
            SV_Target0.w = u_xlat1.x;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            float u_xlat10_0;\nvec3 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3
            u_xlat6;\nlowp vec3 u_xlat10_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump
            float u_xlat16_21;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat1.x = u_xlat18 + u_xlat18;\n    u_xlat18 = u_xlat18;\n   
            u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat16_2 = (-u_xlat18) +
            1.0;\n    u_xlat1.xyz = u_xlat0.xyz * (-u_xlat1.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_8.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_6.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz
            * u_xlat10_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat6.xyz = u_xlat10_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n   
            u_xlat16_21 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat6.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;\n    u_xlat16_21
            = (-u_xlat16_21) + 1.0;\n    u_xlat16_21 = u_xlat16_21 + _Glossiness;\n   
            u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_21);\n    u_xlat0.x = u_xlat16_2 * u_xlat16_2;\n    u_xlat0.x
            = u_xlat16_2 * u_xlat0.x;\n    u_xlat0.x = u_xlat16_2 * u_xlat0.x;\n   
            u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat16_3.xyz;\n   
            u_xlat10_0 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_5.xyz
            = vec3(u_xlat10_0) * unity_IndirectSpecColor.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz
            * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin highp
            vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0)
            out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump float u_xlat16_0;\nvec3
            u_xlat1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3
            u_xlat16_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump float
            u_xlat16_21;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n   
            u_xlat1.x = u_xlat18 + u_xlat18;\n    u_xlat18 = u_xlat18;\n    u_xlat18
            = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat16_2 = (-u_xlat18) + 1.0;\n   
            u_xlat1.xyz = u_xlat0.xyz * (-u_xlat1.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_8.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_6.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz
            * u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat6.xyz = u_xlat16_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n   
            u_xlat16_21 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat6.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;\n    u_xlat16_21
            = (-u_xlat16_21) + 1.0;\n    u_xlat16_21 = u_xlat16_21 + _Glossiness;\n   
            u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_21);\n    u_xlat0.x = u_xlat16_2 * u_xlat16_2;\n    u_xlat0.x
            = u_xlat16_2 * u_xlat0.x;\n    u_xlat0.x = u_xlat16_2 * u_xlat0.x;\n   
            u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_0 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_0) * unity_IndirectSpecColor.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz
            * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat8;\nlowp float u_xlat10_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_11;\nfloat
            u_xlat24;\nmediump float u_xlat16_26;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat1.x = u_xlat24;\n    u_xlat1.x = clamp(u_xlat1.x,
            0.0, 1.0);\n    u_xlat24 = u_xlat24 + u_xlat24;\n    u_xlat9.xyz = u_xlat0.xyz
            * (-vec3(u_xlat24)) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat16_26 = (-u_xlat1.x) +
            1.0;\n    u_xlat8 = u_xlat16_26 * u_xlat16_26;\n    u_xlat8 = u_xlat16_26
            * u_xlat8;\n    u_xlat8 = u_xlat16_26 * u_xlat8;\n    u_xlat16_26 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.x = (-u_xlat16_26) + 1.0;\n   
            u_xlat16_3.x = u_xlat16_3.x + _Glossiness;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_11.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_4.xyz
            = vec3(u_xlat16_26) * u_xlat1.xyz;\n    u_xlat16_11.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_11.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.xyz = (-u_xlat16_11.xyz) + u_xlat16_3.xxx;\n   
            u_xlat16_5.xyz = vec3(u_xlat8) * u_xlat16_5.xyz + u_xlat16_11.xyz;\n   
            u_xlat10_8 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.xyz
            = vec3(u_xlat10_8) * unity_IndirectSpecColor.xyz;\n    u_xlat16_7.xyz
            = vec3(u_xlat10_8) * vs_TEXCOORD5.xyz;\n    u_xlat16_5.xyz = u_xlat16_5.xyz
            * u_xlat16_6.xyz;\n    u_xlat16_5.xyz = u_xlat16_7.xyz * u_xlat16_4.xyz
            + u_xlat16_5.xyz;\n    u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x
            = texture2D(unity_NHxRoughness, u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_11.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_5.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin highp
            vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump float u_xlat16_8;\nvec3 u_xlat9;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat24;\nmediump float u_xlat16_26;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat24 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n   
            u_xlat1.x = u_xlat24;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n   
            u_xlat24 = u_xlat24 + u_xlat24;\n    u_xlat9.xyz = u_xlat0.xyz * (-vec3(u_xlat24))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat16_26 = (-u_xlat1.x) + 1.0;\n    u_xlat8 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat8 = u_xlat16_26 * u_xlat8;\n    u_xlat8 = u_xlat16_26 * u_xlat8;\n   
            u_xlat16_26 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.x
            = (-u_xlat16_26) + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x + _Glossiness;\n   
            u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat16_1.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_11.xyz = _Color.xyz * u_xlat16_1.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz =
            u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat16_26)
            * u_xlat1.xyz;\n    u_xlat16_11.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_11.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_5.xyz = (-u_xlat16_11.xyz) + u_xlat16_3.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat8) * u_xlat16_5.xyz + u_xlat16_11.xyz;\n    u_xlat16_8 =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.xyz = vec3(u_xlat16_8)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_8)
            * vs_TEXCOORD5.xyz;\n    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;\n   
            u_xlat16_5.xyz = u_xlat16_7.xyz * u_xlat16_4.xyz + u_xlat16_5.xyz;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_3.xyz
            = u_xlat0.xxx * u_xlat16_11.xyz + u_xlat16_4.xyz;\n    SV_Target0.xyz
            = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_5.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nlowp float u_xlat10_0;\nmediump vec3 u_xlat16_1;\nmediump vec3
            u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nlowp vec3 u_xlat10_5;\nmediump vec3 u_xlat16_7;\nfloat u_xlat15;\nmediump
            float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_16 = (-u_xlat15)
            + 1.0;\n    u_xlat0.x = u_xlat16_16 * u_xlat16_16;\n    u_xlat0.x = u_xlat16_16
            * u_xlat0.x;\n    u_xlat0.x = u_xlat16_16 * u_xlat0.x;\n    u_xlat16_16
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_16)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x
            = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat10_5.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_5.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat5.xyz =
            u_xlat10_5.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(u_xlat16_16)
            * u_xlat5.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_7.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_7.xyz;\n    u_xlat10_0 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_0) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_4.xyz;\n    SV_Target0.xyz
            = u_xlat16_3.xyz * u_xlat16_1.xyz + u_xlat16_2.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump float u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nmediump vec3
            u_xlat16_7;\nfloat u_xlat15;\nmediump float u_xlat16_16;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat15 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n    u_xlat15 = clamp(u_xlat15,
            0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat16_16 = (-u_xlat15) + 1.0;\n    u_xlat0.x
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat0.x = u_xlat16_16 * u_xlat0.x;\n   
            u_xlat0.x = u_xlat16_16 * u_xlat0.x;\n    u_xlat16_16 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_16) + 1.0;\n   
            u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x = clamp(u_xlat16_2.x,
            0.0, 1.0);\n    u_xlat16_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat16_5.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat5.xyz = u_xlat16_5.xyz * _Color.xyz;\n    u_xlat16_3.xyz
            = vec3(u_xlat16_16) * u_xlat5.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.xyz = (-u_xlat16_7.xyz) + u_xlat16_2.xxx;\n   
            u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_0 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz
            = vec3(u_xlat16_0) * unity_IndirectSpecColor.xyz;\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz
            * u_xlat16_1.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4
            vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            float u_xlat10_0;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec4
            u_xlat3;\nlowp vec4 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3
            u_xlat16_5;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump float
            u_xlat16_19;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n   
            u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_19 = (-u_xlat18)
            + 1.0;\n    u_xlat0.x = u_xlat16_19 * u_xlat16_19;\n    u_xlat0.x = u_xlat16_19
            * u_xlat0.x;\n    u_xlat0.x = u_xlat16_19 * u_xlat0.x;\n    u_xlat16_19
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_19)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x
            = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat10_3 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_8.xyz = u_xlat10_3.xyz * _Color.xyz +
            vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3 = u_xlat10_3.wxyz
            * _Color.wxyz;\n    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_8.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_8.xyz;\n    u_xlat10_0 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_0) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_5.xyz = vec3(u_xlat10_0) * vs_TEXCOORD5.xyz;\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz * u_xlat16_4.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat16_19)
            * u_xlat3.yzw;\n    u_xlat16_4.xyz = u_xlat3.xxx * u_xlat16_4.xyz;\n   
            SV_Target0.w = u_xlat3.x;\n    u_xlat16_2.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz
            + u_xlat16_2.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz
            + u_xlat16_2.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4
            vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_8;\nfloat
            u_xlat18;\nmediump float u_xlat16_19;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            (-vs_TEXCOORD1.xyz));\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_19 = (-u_xlat18) + 1.0;\n    u_xlat0.x = u_xlat16_19 * u_xlat16_19;\n   
            u_xlat0.x = u_xlat16_19 * u_xlat0.x;\n    u_xlat0.x = u_xlat16_19 * u_xlat0.x;\n   
            u_xlat16_19 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x
            = (-u_xlat16_19) + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n   
            u_xlat16_2.x = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat16_3 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_8.xyz = u_xlat16_3.xyz * _Color.xyz +
            vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3 = u_xlat16_3.wxyz
            * _Color.wxyz;\n    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_8.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_8.xyz;\n    u_xlat16_0 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat16_0) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_5.xyz = vec3(u_xlat16_0) * vs_TEXCOORD5.xyz;\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz * u_xlat16_4.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat16_19)
            * u_xlat3.yzw;\n    u_xlat16_4.xyz = u_xlat3.xxx * u_xlat16_4.xyz;\n   
            SV_Target0.w = u_xlat3.x;\n    u_xlat16_2.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz
            + u_xlat16_2.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz
            + u_xlat16_2.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4
            vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            float u_xlat10_0;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3
            u_xlat6;\nlowp vec3 u_xlat10_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump
            float u_xlat16_19;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n   
            u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_19 = (-u_xlat18)
            + 1.0;\n    u_xlat0.x = u_xlat16_19 * u_xlat16_19;\n    u_xlat0.x = u_xlat16_19
            * u_xlat0.x;\n    u_xlat0.x = u_xlat16_19 * u_xlat0.x;\n    u_xlat16_19
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_19)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x
            = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat10_6.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_8.xyz = _Color.xyz * u_xlat10_6.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat6.xyz =
            u_xlat10_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(u_xlat16_19)
            * u_xlat6.xyz;\n    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_8.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_8.xyz;\n    u_xlat10_0 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_0) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_5.xyz = vec3(u_xlat10_0) * vs_TEXCOORD5.xyz;\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz * u_xlat16_4.xyz;\n    u_xlat16_2.xyz = u_xlat16_5.xyz
            * u_xlat16_3.xyz + u_xlat16_2.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz
            * u_xlat16_1.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4
            vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_6;\nmediump vec3
            u_xlat16_8;\nfloat u_xlat18;\nmediump float u_xlat16_19;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat18 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n    u_xlat18 = clamp(u_xlat18,
            0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat16_19 = (-u_xlat18) + 1.0;\n    u_xlat0.x
            = u_xlat16_19 * u_xlat16_19;\n    u_xlat0.x = u_xlat16_19 * u_xlat0.x;\n   
            u_xlat0.x = u_xlat16_19 * u_xlat0.x;\n    u_xlat16_19 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_19) + 1.0;\n   
            u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x = clamp(u_xlat16_2.x,
            0.0, 1.0);\n    u_xlat16_6.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_8.xyz = _Color.xyz * u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat6.xyz = u_xlat16_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz
            = vec3(u_xlat16_19) * u_xlat6.xyz;\n    u_xlat16_8.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.xyz = (-u_xlat16_8.xyz) + u_xlat16_2.xxx;\n   
            u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_0 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz
            = vec3(u_xlat16_0) * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_0) * vs_TEXCOORD5.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz
            * u_xlat16_4.xyz;\n    u_xlat16_2.xyz = u_xlat16_5.xyz * u_xlat16_3.xyz
            + u_xlat16_2.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz
            + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nlowp float u_xlat10_0;\nmediump vec3 u_xlat16_1;\nmediump vec3
            u_xlat16_2;\nvec4 u_xlat3;\nlowp vec4 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat15;\nmediump float u_xlat16_16;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat15 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n    u_xlat15 = clamp(u_xlat15,
            0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat16_16 = (-u_xlat15) + 1.0;\n    u_xlat0.x
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat0.x = u_xlat16_16 * u_xlat0.x;\n   
            u_xlat0.x = u_xlat16_16 * u_xlat0.x;\n    u_xlat16_16 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_16) + 1.0;\n   
            u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x = clamp(u_xlat16_2.x,
            0.0, 1.0);\n    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_7.xyz = u_xlat10_3.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat3 = u_xlat10_3.wxyz * _Color.wxyz;\n    u_xlat16_7.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_4.xyz = (-u_xlat16_7.xyz) +
            u_xlat16_2.xxx;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_4.xyz +
            u_xlat16_7.xyz;\n    u_xlat10_0 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.xyz = vec3(u_xlat10_0) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_4.xyz;\n    u_xlat16_4.xyz
            = vec3(u_xlat16_16) * u_xlat3.yzw;\n    u_xlat16_4.xyz = u_xlat3.xxx
            * u_xlat16_4.xyz;\n    SV_Target0.w = u_xlat3.x;\n    SV_Target0.xyz
            = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat16_2.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump float u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat15;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz,
            (-vs_TEXCOORD1.xyz));\n    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_16 = (-u_xlat15) + 1.0;\n    u_xlat0.x = u_xlat16_16 * u_xlat16_16;\n   
            u_xlat0.x = u_xlat16_16 * u_xlat0.x;\n    u_xlat0.x = u_xlat16_16 * u_xlat0.x;\n   
            u_xlat16_16 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x
            = (-u_xlat16_16) + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n   
            u_xlat16_2.x = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat16_3 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_7.xyz = u_xlat16_3.xyz * _Color.xyz +
            vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3 = u_xlat16_3.wxyz
            * _Color.wxyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_7.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_7.xyz;\n    u_xlat16_0 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat16_0) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_4.xyz;\n    u_xlat16_4.xyz
            = vec3(u_xlat16_16) * u_xlat3.yzw;\n    u_xlat16_4.xyz = u_xlat3.xxx
            * u_xlat16_4.xyz;\n    SV_Target0.w = u_xlat3.x;\n    SV_Target0.xyz
            = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat16_2.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _EMISSION
        - _GLOSSYREFLECTIONS_OFF
        - _METALLICGLOSSMAP
        - _NORMALMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _METALLICGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 52
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 1
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform
            lowp sampler2D _MainTex;\nuniform highp sampler2D unity_NHxRoughness;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec4
            u_xlat1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat18;\nmediump
            float u_xlat16_21;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat18 = u_xlat18 + u_xlat18;\n    u_xlat1.xyz =
            u_xlat0.xyz * (-vec3(u_xlat18)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x
            = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n   
            u_xlat18 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.xyz
            = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = u_xlat18 * u_xlat18;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = (-_Glossiness) +
            1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n   
            u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_4.xyz = u_xlat10_1.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat1 = u_xlat10_1.wxyz * _Color.wxyz;\n    u_xlat16_4.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_21 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz
            = u_xlat1.yzw * vec3(u_xlat16_21);\n    u_xlat16_4.xyz = u_xlat16_5.xyz
            * u_xlat1.xxx + u_xlat16_4.xyz;\n    SV_Target0.w = u_xlat1.x;\n    SV_Target0.xyz
            = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform highp sampler2D unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec4 u_xlat1;\nmediump vec4
            u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nfloat u_xlat18;\nmediump float u_xlat16_21;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat18 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat18 = u_xlat18
            + u_xlat18;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat18)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z
            = vs_TEXCOORD4.w;\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat18 * u_xlat18;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.y = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_4.xyz = u_xlat16_1.xyz * _Color.xyz +
            vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1 = u_xlat16_1.wxyz
            * _Color.wxyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat16_21 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz = u_xlat1.yzw * vec3(u_xlat16_21);\n   
            u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat1.xxx + u_xlat16_4.xyz;\n   
            SV_Target0.w = u_xlat1.x;\n    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform
            lowp sampler2D _MainTex;\nuniform highp sampler2D unity_NHxRoughness;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec3
            u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nlowp vec3 u_xlat10_5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n   
            u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y
            = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat15 * u_xlat15;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.y = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness,
            u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_5.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz
            * u_xlat10_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat5.xyz = u_xlat10_5.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat5.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;\n    SV_Target0.xyz
            = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform highp sampler2D unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3
            u_xlat16_5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15
            + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z
            = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat15 * u_xlat15;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.y = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_5.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz
            * u_xlat16_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat5.xyz = u_xlat16_5.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat5.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;\n    SV_Target0.xyz
            = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform lowp sampler2D _MainTex;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump float u_xlat16_14;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat1.x = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n   
            u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat16_14 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0.wxyz
            * _Color.wxyz;\n    u_xlat16_3.xyz = vec3(u_xlat16_14) * u_xlat0.yzw;\n   
            u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    SV_Target0.w = u_xlat0.x;\n   
            SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4
            vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump float u_xlat16_14;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = vs_TEXCOORD2.w;\n   
            u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_14
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat16_0.wxyz * _Color.wxyz;\n   
            u_xlat16_3.xyz = vec3(u_xlat16_14) * u_xlat0.yzw;\n    u_xlat16_3.xyz
            = u_xlat0.xxx * u_xlat16_3.xyz;\n    SV_Target0.w = u_xlat0.x;\n    SV_Target0.xyz
            = u_xlat16_2.xyz * u_xlat16_3.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform lowp sampler2D _MainTex;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump float u_xlat16_14;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat1.x = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n   
            u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_14 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat0.xyz * vec3(u_xlat16_14);\n   
            SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4
            vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump float u_xlat16_14;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = vs_TEXCOORD2.w;\n   
            u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlat16_14 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_3.xyz = u_xlat0.xyz * vec3(u_xlat16_14);\n    SV_Target0.xyz
            = u_xlat16_2.xyz * u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_SHADOW_MIXING
        - POINT
        - POINT_COOKIE
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _METALLICGLOSSMAP
        - _NORMALMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _METALLICGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 35
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHAPREMULTIPLY_ON
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 1
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _METALLICGLOSSMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _
        KeywordGroups:
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _METALLICGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 1
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: PerformanceChecks
        Value: False
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - _ALPHABLEND_ON
    - _ALPHAPREMULTIPLY_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _METALLICGLOSSMAP
    - _NORMALMAP
    - _PARALLAXMAP
    - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
    - _SPECULARHIGHLIGHTS_OFF
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SHADOWS_DEPTH
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _DETAIL_MULX2
    - __
    - _
    - SHADOWS_CUBE
    - SHADOWS_SOFT
    fallbackShader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHAPREMULTIPLY_ON
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _SPECULARHIGHLIGHTS_OFF
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform
            \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump
            vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat
            _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform
            \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4
            _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform
            \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform
            \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp
            vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4
            vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat
            u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 =
            hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n   
            u_xlat16_1 = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_1
            = clamp(u_xlat16_1, 0.0, 1.0);\n    SV_Target0 = vec4(u_xlat16_1) * vs_COLOR0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat
            _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat
            _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform
            \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat
            _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat
            _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform
            \tfloat _Sharpness;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec4 vs_COLOR1;\nout highp vec4
            vs_TEXCOORD0;\nout mediump vec4 vs_TEXCOORD1;\nout mediump vec4 vs_TEXCOORD2;\nvec2
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump
            vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat
            u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n   
            u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nin mediump vec4
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            float u_xlat16_0;\nmediump float u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_1 = u_xlat16_0
            * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_1 = clamp(u_xlat16_1,
            0.0, 1.0);\n    SV_Target0 = vec4(u_xlat16_1) * vs_COLOR0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform
            \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump
            vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat
            _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform
            \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4
            _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform
            \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform
            \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp
            vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4
            vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat
            u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 =
            hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump
            vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp
            float u_xlat10_1;\nmediump vec2 u_xlat16_2;\nvoid main()\n{\n    u_xlat16_0
            = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n   
            u_xlat16_2.xy = vec2(u_xlat10_1) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n   
            u_xlat16_2.xy = clamp(u_xlat16_2.xy, 0.0, 1.0);\n    u_xlat16_0 = u_xlat16_2.xxxx
            * u_xlat16_0 + vs_COLOR1;\n    SV_Target0 = u_xlat16_2.yyyy * u_xlat16_0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat
            _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat
            _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform
            \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat
            _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat
            _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform
            \tfloat _Sharpness;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec4 vs_COLOR1;\nout highp vec4
            vs_TEXCOORD0;\nout mediump vec4 vs_TEXCOORD1;\nout mediump vec4 vs_TEXCOORD2;\nvec2
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump
            vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat
            u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n   
            u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec4 vs_COLOR1;\nin highp vec4 vs_TEXCOORD0;\nin
            mediump vec4 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nmediump float u_xlat16_1;\nmediump vec2 u_xlat16_2;\nvoid
            main()\n{\n    u_xlat16_0 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_2.xy = vec2(u_xlat16_1)
            * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_2.xy = clamp(u_xlat16_2.xy,
            0.0, 1.0);\n    u_xlat16_0 = u_xlat16_2.xxxx * u_xlat16_0 + vs_COLOR1;\n   
            SV_Target0 = u_xlat16_2.yyyy * u_xlat16_0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform
            \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump
            vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat
            _UnderlayOffsetX;\nuniform \tfloat _UnderlayOffsetY;\nuniform \tfloat
            _UnderlayDilate;\nuniform \tfloat _UnderlaySoftness;\nuniform \tfloat
            _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform
            \tfloat _ScaleRatioC;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat
            _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat
            _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform
            \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat
            _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3
            in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2
            in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4
            vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvarying
            highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump
            vec3 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec2 u_xlat7;\nvec3 u_xlat8;\nfloat
            u_xlat10;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nbool u_xlatb24;\nvoid
            main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0.w
            = _FaceColor.w;\n    u_xlat16_3.xyz = in_COLOR0.xyz;\n    u_xlat16_3.w
            = 1.0;\n    u_xlat16_4 = u_xlat16_3 * _FaceColor;\n    u_xlat16_5.xyz
            = u_xlat16_4.www * u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_5.xyz;\n   
            u_xlat5.xyz = (-u_xlat16_5.xyz);\n    u_xlat5.w = (-u_xlat16_4.w);\n   
            u_xlat16_6.xyz = _OutlineColor.www * _OutlineColor.xyz;\n    u_xlat16_6.w
            = _OutlineColor.w;\n    u_xlat5 = u_xlat5 + u_xlat16_6;\n    u_xlat16
            = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n   
            u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz
            = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat1.xyz);\n   
            u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat24 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat2.x =
            u_xlat10 * u_xlat2.x;\n    u_xlat10 = u_xlat24 * u_xlat2.x;\n    u_xlat18
            = (-_PerspectiveFilter) + 1.0;\n    u_xlat18 = u_xlat18 * abs(u_xlat10);\n   
            u_xlat24 = u_xlat24 * u_xlat2.x + (-u_xlat18);\n    u_xlat16 = abs(u_xlat16)
            * u_xlat24 + u_xlat18;\n    u_xlatb24 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat16 = (u_xlatb24) ? u_xlat16 : u_xlat10;\n    u_xlat24 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat24 = u_xlat24 * u_xlat16 + 1.0;\n    u_xlat2.x
            = u_xlat16 / u_xlat24;\n    u_xlat24 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat24 = u_xlat2.x * u_xlat24;\n    u_xlat7.x = min(u_xlat24, 1.0);\n   
            u_xlat7.x = sqrt(u_xlat7.x);\n    u_xlat5 = u_xlat5 * u_xlat7.xxxx;\n   
            u_xlat4.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat5.xyz;\n    u_xlat4.w
            = u_xlat16_3.w * _FaceColor.w + u_xlat5.w;\n    vs_COLOR1 = u_xlat4;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat7.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat7.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat8.x = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat8.x + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat24) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat24 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    vs_TEXCOORD3.z = in_COLOR0.w;\n    vs_TEXCOORD3.w
            = 0.0;\n    u_xlat1 = vec4(_UnderlaySoftness, _UnderlayDilate, _UnderlayOffsetX,
            _UnderlayOffsetY) * vec4(vec4(_ScaleRatioC, _ScaleRatioC, _ScaleRatioC,
            _ScaleRatioC));\n    u_xlat8.xz = (-u_xlat1.zw) * vec2(_GradientScale);\n   
            u_xlat8.xz = u_xlat8.xz / vec2(_TextureWidth, _TextureHeight);\n    vs_TEXCOORD3.xy
            = u_xlat8.xz + in_TEXCOORD0.xy;\n    u_xlat8.x = u_xlat1.x * u_xlat16
            + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat8.x;\n    u_xlat8.x = u_xlat1.y
            * u_xlat2.x;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat8.x) * 0.5 + u_xlat0.x;\n    vs_TEXCOORD4.xy = u_xlat2.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _UnderlayColor;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp
            float u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nlowp
            float u_xlat10_2;\nmediump vec2 u_xlat16_3;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD3.xy).w;\n    u_xlat16_1.x = u_xlat10_0
            * vs_TEXCOORD4.x + (-vs_TEXCOORD4.y);\n    u_xlat16_1.x = clamp(u_xlat16_1.x,
            0.0, 1.0);\n    u_xlat16_0.xyz = _UnderlayColor.www * _UnderlayColor.xyz;\n   
            u_xlat16_0.w = _UnderlayColor.w;\n    u_xlat0 = u_xlat16_1.xxxx * u_xlat16_0;\n   
            u_xlat16_1 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_2 = texture2D(_MainTex,
            vs_TEXCOORD0.xy).w;\n    u_xlat16_3.xy = vec2(u_xlat10_2) * vs_TEXCOORD1.xx
            + (-vs_TEXCOORD1.zy);\n    u_xlat16_3.xy = clamp(u_xlat16_3.xy, 0.0,
            1.0);\n    u_xlat16_1 = u_xlat16_3.xxxx * u_xlat16_1 + vs_COLOR1;\n   
            u_xlat16_2 = u_xlat16_3.yyyy * u_xlat16_1;\n    u_xlat16_1.x = (-u_xlat16_1.w)
            * u_xlat16_3.y + 1.0;\n    u_xlat0 = u_xlat0 * u_xlat16_1.xxxx + u_xlat16_2;\n   
            u_xlat0 = u_xlat0 * vs_TEXCOORD3.zzzz;\n    SV_Target0 = u_xlat0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat
            _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat
            _OutlineWidth;\nuniform \tfloat _UnderlayOffsetX;\nuniform \tfloat _UnderlayOffsetY;\nuniform
            \tfloat _UnderlayDilate;\nuniform \tfloat _UnderlaySoftness;\nuniform
            \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat
            _ScaleRatioA;\nuniform \tfloat _ScaleRatioC;\nuniform \tfloat _VertexOffsetX;\nuniform
            \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat
            _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform
            \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat
            _Sharpness;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec4 vs_COLOR1;\nout highp vec4
            vs_TEXCOORD0;\nout mediump vec4 vs_TEXCOORD1;\nout mediump vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout mediump vec2 vs_TEXCOORD4;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump
            vec3 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec2 u_xlat7;\nvec3 u_xlat8;\nfloat
            u_xlat10;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nbool u_xlatb24;\nvoid
            main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0.w
            = _FaceColor.w;\n    u_xlat16_3.xyz = in_COLOR0.xyz;\n    u_xlat16_3.w
            = 1.0;\n    u_xlat16_4 = u_xlat16_3 * _FaceColor;\n    u_xlat16_5.xyz
            = u_xlat16_4.www * u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_5.xyz;\n   
            u_xlat5.xyz = (-u_xlat16_5.xyz);\n    u_xlat5.w = (-u_xlat16_4.w);\n   
            u_xlat16_6.xyz = _OutlineColor.www * _OutlineColor.xyz;\n    u_xlat16_6.w
            = _OutlineColor.w;\n    u_xlat5 = u_xlat5 + u_xlat16_6;\n    u_xlat16
            = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n   
            u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz
            = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat1.xyz);\n   
            u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat24 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat2.x =
            u_xlat10 * u_xlat2.x;\n    u_xlat10 = u_xlat24 * u_xlat2.x;\n    u_xlat18
            = (-_PerspectiveFilter) + 1.0;\n    u_xlat18 = u_xlat18 * abs(u_xlat10);\n   
            u_xlat24 = u_xlat24 * u_xlat2.x + (-u_xlat18);\n    u_xlat16 = abs(u_xlat16)
            * u_xlat24 + u_xlat18;\n    u_xlatb24 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat16 = (u_xlatb24) ? u_xlat16 : u_xlat10;\n    u_xlat24 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat24 = u_xlat24 * u_xlat16 + 1.0;\n    u_xlat2.x
            = u_xlat16 / u_xlat24;\n    u_xlat24 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat24 = u_xlat2.x * u_xlat24;\n    u_xlat7.x = min(u_xlat24, 1.0);\n   
            u_xlat7.x = sqrt(u_xlat7.x);\n    u_xlat5 = u_xlat5 * u_xlat7.xxxx;\n   
            u_xlat4.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat5.xyz;\n    u_xlat4.w
            = u_xlat16_3.w * _FaceColor.w + u_xlat5.w;\n    vs_COLOR1 = u_xlat4;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat7.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat7.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat8.x = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat8.x + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat24) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat24 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    vs_TEXCOORD3.z = in_COLOR0.w;\n    vs_TEXCOORD3.w
            = 0.0;\n    u_xlat1 = vec4(_UnderlaySoftness, _UnderlayDilate, _UnderlayOffsetX,
            _UnderlayOffsetY) * vec4(vec4(_ScaleRatioC, _ScaleRatioC, _ScaleRatioC,
            _ScaleRatioC));\n    u_xlat8.xz = (-u_xlat1.zw) * vec2(_GradientScale);\n   
            u_xlat8.xz = u_xlat8.xz / vec2(_TextureWidth, _TextureHeight);\n    vs_TEXCOORD3.xy
            = u_xlat8.xz + in_TEXCOORD0.xy;\n    u_xlat8.x = u_xlat1.x * u_xlat16
            + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat8.x;\n    u_xlat8.x = u_xlat1.y
            * u_xlat2.x;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat8.x) * 0.5 + u_xlat0.x;\n    vs_TEXCOORD4.xy = u_xlat2.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _UnderlayColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin mediump
            vec4 vs_COLOR1;\nin highp vec4 vs_TEXCOORD0;\nin mediump vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD3;\nin mediump vec2 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec2 u_xlat16_3;\nvoid
            main()\n{\n    u_xlat16_0.x = texture(_MainTex, vs_TEXCOORD3.xy).w;\n   
            u_xlat16_1.x = u_xlat16_0.x * vs_TEXCOORD4.x + (-vs_TEXCOORD4.y);\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_0.xyz = _UnderlayColor.www
            * _UnderlayColor.xyz;\n    u_xlat16_0.w = _UnderlayColor.w;\n    u_xlat0
            = u_xlat16_1.xxxx * u_xlat16_0;\n    u_xlat16_1 = vs_COLOR0 + (-vs_COLOR1);\n   
            u_xlat16_2.x = texture(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3.xy
            = u_xlat16_2.xx * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_3.xy
            = clamp(u_xlat16_3.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat16_3.xxxx *
            u_xlat16_1 + vs_COLOR1;\n    u_xlat16_2 = u_xlat16_3.yyyy * u_xlat16_1;\n   
            u_xlat16_1.x = (-u_xlat16_1.w) * u_xlat16_3.y + 1.0;\n    u_xlat0 = u_xlat0
            * u_xlat16_1.xxxx + u_xlat16_2;\n    u_xlat0 = u_xlat0 * vs_TEXCOORD3.zzzz;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform
            \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump
            vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat
            _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform
            \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4
            _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform
            \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform
            \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp
            vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4
            vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat
            u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 =
            hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump
            float u_xlat16_1;\nbool u_xlatb2;\nmediump float u_xlat16_4;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_1
            = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_1 =
            clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_4 = vs_COLOR0.w * u_xlat16_1
            + -0.00100000005;\n    u_xlat16_0 = vec4(u_xlat16_1) * vs_COLOR0;\n   
            SV_Target0 = u_xlat16_0;\n    u_xlatb2 = u_xlat16_4<0.0;\n    if(u_xlatb2){discard;}\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat
            _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat
            _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform
            \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat
            _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat
            _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform
            \tfloat _Sharpness;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec4 vs_COLOR1;\nout highp vec4
            vs_TEXCOORD0;\nout mediump vec4 vs_TEXCOORD1;\nout mediump vec4 vs_TEXCOORD2;\nvec2
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump
            vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat
            u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n   
            u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nin mediump vec4
            vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nmediump float u_xlat16_1;\nbool u_xlatb2;\nmediump
            float u_xlat16_4;\nvoid main()\n{\n    u_xlat16_0.x = texture(_MainTex,
            vs_TEXCOORD0.xy).w;\n    u_xlat16_1 = u_xlat16_0.x * vs_TEXCOORD1.x +
            (-vs_TEXCOORD1.w);\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n   
            u_xlat16_4 = vs_COLOR0.w * u_xlat16_1 + -0.00100000005;\n    u_xlat16_0
            = vec4(u_xlat16_1) * vs_COLOR0;\n    SV_Target0 = u_xlat16_0;\n    u_xlatb2
            = u_xlat16_4<0.0;\n    if(u_xlatb2){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform
            \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump
            vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat
            _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform
            \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4
            _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform
            \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform
            \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp
            vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4
            vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat
            u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 =
            hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump
            vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp
            float u_xlat10_1;\nbool u_xlatb1;\nmediump vec2 u_xlat16_2;\nvoid main()\n{\n   
            u_xlat16_0 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy).w;\n    u_xlat16_2.xy = vec2(u_xlat10_1) * vs_TEXCOORD1.xx
            + (-vs_TEXCOORD1.zy);\n    u_xlat16_2.xy = clamp(u_xlat16_2.xy, 0.0,
            1.0);\n    u_xlat16_0 = u_xlat16_2.xxxx * u_xlat16_0 + vs_COLOR1;\n   
            u_xlat16_2.x = u_xlat16_0.w * u_xlat16_2.y + -0.00100000005;\n    u_xlat16_0
            = u_xlat16_2.yyyy * u_xlat16_0;\n    SV_Target0 = u_xlat16_0;\n    u_xlatb1
            = u_xlat16_2.x<0.0;\n    if(u_xlatb1){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat
            _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat
            _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform
            \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat
            _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat
            _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform
            \tfloat _Sharpness;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec4 vs_COLOR1;\nout highp vec4
            vs_TEXCOORD0;\nout mediump vec4 vs_TEXCOORD1;\nout mediump vec4 vs_TEXCOORD2;\nvec2
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump
            vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat
            u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n   
            u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec4 vs_COLOR1;\nin highp vec4 vs_TEXCOORD0;\nin
            mediump vec4 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nmediump float u_xlat16_1;\nbool u_xlatb1;\nmediump
            vec2 u_xlat16_2;\nvoid main()\n{\n    u_xlat16_0 = vs_COLOR0 + (-vs_COLOR1);\n   
            u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_2.xy
            = vec2(u_xlat16_1) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_2.xy
            = clamp(u_xlat16_2.xy, 0.0, 1.0);\n    u_xlat16_0 = u_xlat16_2.xxxx *
            u_xlat16_0 + vs_COLOR1;\n    u_xlat16_2.x = u_xlat16_0.w * u_xlat16_2.y
            + -0.00100000005;\n    u_xlat16_0 = u_xlat16_2.yyyy * u_xlat16_0;\n   
            SV_Target0 = u_xlat16_0;\n    u_xlatb1 = u_xlat16_2.x<0.0;\n    if(u_xlatb1){discard;}\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform
            \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump
            vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat
            _UnderlayOffsetX;\nuniform \tfloat _UnderlayOffsetY;\nuniform \tfloat
            _UnderlayDilate;\nuniform \tfloat _UnderlaySoftness;\nuniform \tfloat
            _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform
            \tfloat _ScaleRatioC;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat
            _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat
            _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform
            \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat
            _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3
            in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2
            in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4
            vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvarying
            highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump
            vec3 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec2 u_xlat7;\nvec3 u_xlat8;\nfloat
            u_xlat10;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nbool u_xlatb24;\nvoid
            main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0.w
            = _FaceColor.w;\n    u_xlat16_3.xyz = in_COLOR0.xyz;\n    u_xlat16_3.w
            = 1.0;\n    u_xlat16_4 = u_xlat16_3 * _FaceColor;\n    u_xlat16_5.xyz
            = u_xlat16_4.www * u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_5.xyz;\n   
            u_xlat5.xyz = (-u_xlat16_5.xyz);\n    u_xlat5.w = (-u_xlat16_4.w);\n   
            u_xlat16_6.xyz = _OutlineColor.www * _OutlineColor.xyz;\n    u_xlat16_6.w
            = _OutlineColor.w;\n    u_xlat5 = u_xlat5 + u_xlat16_6;\n    u_xlat16
            = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n   
            u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz
            = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat1.xyz);\n   
            u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat24 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat2.x =
            u_xlat10 * u_xlat2.x;\n    u_xlat10 = u_xlat24 * u_xlat2.x;\n    u_xlat18
            = (-_PerspectiveFilter) + 1.0;\n    u_xlat18 = u_xlat18 * abs(u_xlat10);\n   
            u_xlat24 = u_xlat24 * u_xlat2.x + (-u_xlat18);\n    u_xlat16 = abs(u_xlat16)
            * u_xlat24 + u_xlat18;\n    u_xlatb24 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat16 = (u_xlatb24) ? u_xlat16 : u_xlat10;\n    u_xlat24 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat24 = u_xlat24 * u_xlat16 + 1.0;\n    u_xlat2.x
            = u_xlat16 / u_xlat24;\n    u_xlat24 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat24 = u_xlat2.x * u_xlat24;\n    u_xlat7.x = min(u_xlat24, 1.0);\n   
            u_xlat7.x = sqrt(u_xlat7.x);\n    u_xlat5 = u_xlat5 * u_xlat7.xxxx;\n   
            u_xlat4.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat5.xyz;\n    u_xlat4.w
            = u_xlat16_3.w * _FaceColor.w + u_xlat5.w;\n    vs_COLOR1 = u_xlat4;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat7.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat7.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat8.x = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat8.x + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat24) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat24 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    vs_TEXCOORD3.z = in_COLOR0.w;\n    vs_TEXCOORD3.w
            = 0.0;\n    u_xlat1 = vec4(_UnderlaySoftness, _UnderlayDilate, _UnderlayOffsetX,
            _UnderlayOffsetY) * vec4(vec4(_ScaleRatioC, _ScaleRatioC, _ScaleRatioC,
            _ScaleRatioC));\n    u_xlat8.xz = (-u_xlat1.zw) * vec2(_GradientScale);\n   
            u_xlat8.xz = u_xlat8.xz / vec2(_TextureWidth, _TextureHeight);\n    vs_TEXCOORD3.xy
            = u_xlat8.xz + in_TEXCOORD0.xy;\n    u_xlat8.x = u_xlat1.x * u_xlat16
            + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat8.x;\n    u_xlat8.x = u_xlat1.y
            * u_xlat2.x;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat8.x) * 0.5 + u_xlat0.x;\n    vs_TEXCOORD4.xy = u_xlat2.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _UnderlayColor;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp
            float u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nlowp
            float u_xlat10_2;\nmediump vec2 u_xlat16_3;\nbool u_xlatb4;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD3.xy).w;\n    u_xlat16_1.x
            = u_xlat10_0 * vs_TEXCOORD4.x + (-vs_TEXCOORD4.y);\n    u_xlat16_1.x
            = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_0.xyz = _UnderlayColor.www
            * _UnderlayColor.xyz;\n    u_xlat16_0.w = _UnderlayColor.w;\n    u_xlat0
            = u_xlat16_1.xxxx * u_xlat16_0;\n    u_xlat16_1 = vs_COLOR0 + (-vs_COLOR1);\n   
            u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3.xy
            = vec2(u_xlat10_2) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_3.xy
            = clamp(u_xlat16_3.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat16_3.xxxx *
            u_xlat16_1 + vs_COLOR1;\n    u_xlat16_2 = u_xlat16_3.yyyy * u_xlat16_1;\n   
            u_xlat16_1.x = (-u_xlat16_1.w) * u_xlat16_3.y + 1.0;\n    u_xlat0 = u_xlat0
            * u_xlat16_1.xxxx + u_xlat16_2;\n    u_xlat16_1.x = u_xlat0.w * vs_TEXCOORD3.z
            + -0.00100000005;\n    u_xlat0 = u_xlat0 * vs_TEXCOORD3.zzzz;\n    SV_Target0
            = u_xlat0;\n    u_xlatb4 = u_xlat16_1.x<0.0;\n    if(u_xlatb4){discard;}\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat
            _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat
            _OutlineWidth;\nuniform \tfloat _UnderlayOffsetX;\nuniform \tfloat _UnderlayOffsetY;\nuniform
            \tfloat _UnderlayDilate;\nuniform \tfloat _UnderlaySoftness;\nuniform
            \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat
            _ScaleRatioA;\nuniform \tfloat _ScaleRatioC;\nuniform \tfloat _VertexOffsetX;\nuniform
            \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat
            _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform
            \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat
            _Sharpness;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec4 vs_COLOR1;\nout highp vec4
            vs_TEXCOORD0;\nout mediump vec4 vs_TEXCOORD1;\nout mediump vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout mediump vec2 vs_TEXCOORD4;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump
            vec3 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec2 u_xlat7;\nvec3 u_xlat8;\nfloat
            u_xlat10;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nbool u_xlatb24;\nvoid
            main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0.w
            = _FaceColor.w;\n    u_xlat16_3.xyz = in_COLOR0.xyz;\n    u_xlat16_3.w
            = 1.0;\n    u_xlat16_4 = u_xlat16_3 * _FaceColor;\n    u_xlat16_5.xyz
            = u_xlat16_4.www * u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_5.xyz;\n   
            u_xlat5.xyz = (-u_xlat16_5.xyz);\n    u_xlat5.w = (-u_xlat16_4.w);\n   
            u_xlat16_6.xyz = _OutlineColor.www * _OutlineColor.xyz;\n    u_xlat16_6.w
            = _OutlineColor.w;\n    u_xlat5 = u_xlat5 + u_xlat16_6;\n    u_xlat16
            = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n   
            u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz
            = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat1.xyz);\n   
            u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat24 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat2.x =
            u_xlat10 * u_xlat2.x;\n    u_xlat10 = u_xlat24 * u_xlat2.x;\n    u_xlat18
            = (-_PerspectiveFilter) + 1.0;\n    u_xlat18 = u_xlat18 * abs(u_xlat10);\n   
            u_xlat24 = u_xlat24 * u_xlat2.x + (-u_xlat18);\n    u_xlat16 = abs(u_xlat16)
            * u_xlat24 + u_xlat18;\n    u_xlatb24 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat16 = (u_xlatb24) ? u_xlat16 : u_xlat10;\n    u_xlat24 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat24 = u_xlat24 * u_xlat16 + 1.0;\n    u_xlat2.x
            = u_xlat16 / u_xlat24;\n    u_xlat24 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat24 = u_xlat2.x * u_xlat24;\n    u_xlat7.x = min(u_xlat24, 1.0);\n   
            u_xlat7.x = sqrt(u_xlat7.x);\n    u_xlat5 = u_xlat5 * u_xlat7.xxxx;\n   
            u_xlat4.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat5.xyz;\n    u_xlat4.w
            = u_xlat16_3.w * _FaceColor.w + u_xlat5.w;\n    vs_COLOR1 = u_xlat4;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat7.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat7.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat8.x = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat8.x + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat24) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat24 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    vs_TEXCOORD3.z = in_COLOR0.w;\n    vs_TEXCOORD3.w
            = 0.0;\n    u_xlat1 = vec4(_UnderlaySoftness, _UnderlayDilate, _UnderlayOffsetX,
            _UnderlayOffsetY) * vec4(vec4(_ScaleRatioC, _ScaleRatioC, _ScaleRatioC,
            _ScaleRatioC));\n    u_xlat8.xz = (-u_xlat1.zw) * vec2(_GradientScale);\n   
            u_xlat8.xz = u_xlat8.xz / vec2(_TextureWidth, _TextureHeight);\n    vs_TEXCOORD3.xy
            = u_xlat8.xz + in_TEXCOORD0.xy;\n    u_xlat8.x = u_xlat1.x * u_xlat16
            + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat8.x;\n    u_xlat8.x = u_xlat1.y
            * u_xlat2.x;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat8.x) * 0.5 + u_xlat0.x;\n    vs_TEXCOORD4.xy = u_xlat2.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _UnderlayColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin mediump
            vec4 vs_COLOR1;\nin highp vec4 vs_TEXCOORD0;\nin mediump vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD3;\nin mediump vec2 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec2 u_xlat16_3;\nbool
            u_xlatb4;\nvoid main()\n{\n    u_xlat16_0.x = texture(_MainTex, vs_TEXCOORD3.xy).w;\n   
            u_xlat16_1.x = u_xlat16_0.x * vs_TEXCOORD4.x + (-vs_TEXCOORD4.y);\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_0.xyz = _UnderlayColor.www
            * _UnderlayColor.xyz;\n    u_xlat16_0.w = _UnderlayColor.w;\n    u_xlat0
            = u_xlat16_1.xxxx * u_xlat16_0;\n    u_xlat16_1 = vs_COLOR0 + (-vs_COLOR1);\n   
            u_xlat16_2.x = texture(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3.xy
            = u_xlat16_2.xx * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_3.xy
            = clamp(u_xlat16_3.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat16_3.xxxx *
            u_xlat16_1 + vs_COLOR1;\n    u_xlat16_2 = u_xlat16_3.yyyy * u_xlat16_1;\n   
            u_xlat16_1.x = (-u_xlat16_1.w) * u_xlat16_3.y + 1.0;\n    u_xlat0 = u_xlat0
            * u_xlat16_1.xxxx + u_xlat16_2;\n    u_xlat16_1.x = u_xlat0.w * vs_TEXCOORD3.z
            + -0.00100000005;\n    u_xlat0 = u_xlat0 * vs_TEXCOORD3.zzzz;\n    SV_Target0
            = u_xlat0;\n    u_xlatb4 = u_xlat16_1.x<0.0;\n    if(u_xlatb4){discard;}\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform
            \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump
            vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat
            _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform
            \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4
            _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform
            \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform
            \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp
            vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4
            vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat
            u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 =
            hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying
            mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump
            vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump
            float u_xlat16_1;\nmediump float u_xlat16_3;\nvoid main()\n{\n    u_xlat0.xy
            = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n   
            u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy,
            0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat10_0 =
            texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3 = u_xlat10_0
            * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_3 = clamp(u_xlat16_3,
            0.0, 1.0);\n    u_xlat16_0 = vec4(u_xlat16_3) * vs_COLOR0;\n    SV_Target0
            = vec4(u_xlat16_1) * u_xlat16_0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat
            _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat
            _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform
            \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat
            _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat
            _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform
            \tfloat _Sharpness;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec4 vs_COLOR1;\nout highp vec4
            vs_TEXCOORD0;\nout mediump vec4 vs_TEXCOORD1;\nout mediump vec4 vs_TEXCOORD2;\nvec2
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump
            vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat
            u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n   
            u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _ClipRect;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec4 vs_TEXCOORD0;\nin mediump vec4 vs_TEXCOORD1;\nin mediump vec4 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            float u_xlat16_1;\nmediump float u_xlat16_3;\nvoid main()\n{\n    u_xlat0.xy
            = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n   
            u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy,
            0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat16_0.x
            = texture(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3 = u_xlat16_0.x
            * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_3 = clamp(u_xlat16_3,
            0.0, 1.0);\n    u_xlat16_0 = vec4(u_xlat16_3) * vs_COLOR0;\n    SV_Target0
            = vec4(u_xlat16_1) * u_xlat16_0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform
            \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump
            vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat
            _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform
            \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4
            _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform
            \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform
            \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp
            vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4
            vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat
            u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 =
            hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying
            mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump
            vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nvec2
            u_xlat1;\nlowp float u_xlat10_1;\nmediump vec2 u_xlat16_2;\nvoid main()\n{\n   
            u_xlat16_0 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy).w;\n    u_xlat16_2.xy = vec2(u_xlat10_1) * vs_TEXCOORD1.xx
            + (-vs_TEXCOORD1.zy);\n    u_xlat16_2.xy = clamp(u_xlat16_2.xy, 0.0,
            1.0);\n    u_xlat16_0 = u_xlat16_2.xxxx * u_xlat16_0 + vs_COLOR1;\n   
            u_xlat16_0 = u_xlat16_2.yyyy * u_xlat16_0;\n    u_xlat1.xy = (-_ClipRect.xy)
            + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n   
            u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n    u_xlat1.xy = clamp(u_xlat1.xy,
            0.0, 1.0);\n    u_xlat16_2.x = u_xlat1.y * u_xlat1.x;\n    SV_Target0
            = u_xlat16_0 * u_xlat16_2.xxxx;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat
            _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat
            _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform
            \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat
            _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat
            _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform
            \tfloat _Sharpness;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec4 vs_COLOR1;\nout highp vec4
            vs_TEXCOORD0;\nout mediump vec4 vs_TEXCOORD1;\nout mediump vec4 vs_TEXCOORD2;\nvec2
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump
            vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat
            u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n   
            u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _ClipRect;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin mediump
            vec4 vs_COLOR1;\nin highp vec4 vs_TEXCOORD0;\nin mediump vec4 vs_TEXCOORD1;\nin
            mediump vec4 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nvec2 u_xlat1;\nmediump float u_xlat16_1;\nmediump vec2
            u_xlat16_2;\nvoid main()\n{\n    u_xlat16_0 = vs_COLOR0 + (-vs_COLOR1);\n   
            u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_2.xy
            = vec2(u_xlat16_1) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_2.xy
            = clamp(u_xlat16_2.xy, 0.0, 1.0);\n    u_xlat16_0 = u_xlat16_2.xxxx *
            u_xlat16_0 + vs_COLOR1;\n    u_xlat16_0 = u_xlat16_2.yyyy * u_xlat16_0;\n   
            u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy
            + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n   
            u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n    u_xlat16_2.x = u_xlat1.y
            * u_xlat1.x;\n    SV_Target0 = u_xlat16_0 * u_xlat16_2.xxxx;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform
            \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump
            vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat
            _UnderlayOffsetX;\nuniform \tfloat _UnderlayOffsetY;\nuniform \tfloat
            _UnderlayDilate;\nuniform \tfloat _UnderlaySoftness;\nuniform \tfloat
            _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform
            \tfloat _ScaleRatioC;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat
            _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat
            _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform
            \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat
            _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3
            in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2
            in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4
            vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvarying
            highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump
            vec3 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec2 u_xlat7;\nvec3 u_xlat8;\nfloat
            u_xlat10;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nbool u_xlatb24;\nvoid
            main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0.w
            = _FaceColor.w;\n    u_xlat16_3.xyz = in_COLOR0.xyz;\n    u_xlat16_3.w
            = 1.0;\n    u_xlat16_4 = u_xlat16_3 * _FaceColor;\n    u_xlat16_5.xyz
            = u_xlat16_4.www * u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_5.xyz;\n   
            u_xlat5.xyz = (-u_xlat16_5.xyz);\n    u_xlat5.w = (-u_xlat16_4.w);\n   
            u_xlat16_6.xyz = _OutlineColor.www * _OutlineColor.xyz;\n    u_xlat16_6.w
            = _OutlineColor.w;\n    u_xlat5 = u_xlat5 + u_xlat16_6;\n    u_xlat16
            = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n   
            u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz
            = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat1.xyz);\n   
            u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat24 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat2.x =
            u_xlat10 * u_xlat2.x;\n    u_xlat10 = u_xlat24 * u_xlat2.x;\n    u_xlat18
            = (-_PerspectiveFilter) + 1.0;\n    u_xlat18 = u_xlat18 * abs(u_xlat10);\n   
            u_xlat24 = u_xlat24 * u_xlat2.x + (-u_xlat18);\n    u_xlat16 = abs(u_xlat16)
            * u_xlat24 + u_xlat18;\n    u_xlatb24 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat16 = (u_xlatb24) ? u_xlat16 : u_xlat10;\n    u_xlat24 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat24 = u_xlat24 * u_xlat16 + 1.0;\n    u_xlat2.x
            = u_xlat16 / u_xlat24;\n    u_xlat24 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat24 = u_xlat2.x * u_xlat24;\n    u_xlat7.x = min(u_xlat24, 1.0);\n   
            u_xlat7.x = sqrt(u_xlat7.x);\n    u_xlat5 = u_xlat5 * u_xlat7.xxxx;\n   
            u_xlat4.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat5.xyz;\n    u_xlat4.w
            = u_xlat16_3.w * _FaceColor.w + u_xlat5.w;\n    vs_COLOR1 = u_xlat4;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat7.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat7.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat8.x = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat8.x + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat24) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat24 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    vs_TEXCOORD3.z = in_COLOR0.w;\n    vs_TEXCOORD3.w
            = 0.0;\n    u_xlat1 = vec4(_UnderlaySoftness, _UnderlayDilate, _UnderlayOffsetX,
            _UnderlayOffsetY) * vec4(vec4(_ScaleRatioC, _ScaleRatioC, _ScaleRatioC,
            _ScaleRatioC));\n    u_xlat8.xz = (-u_xlat1.zw) * vec2(_GradientScale);\n   
            u_xlat8.xz = u_xlat8.xz / vec2(_TextureWidth, _TextureHeight);\n    vs_TEXCOORD3.xy
            = u_xlat8.xz + in_TEXCOORD0.xy;\n    u_xlat8.x = u_xlat1.x * u_xlat16
            + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat8.x;\n    u_xlat8.x = u_xlat1.y
            * u_xlat2.x;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat8.x) * 0.5 + u_xlat0.x;\n    vs_TEXCOORD4.xy = u_xlat2.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _UnderlayColor;\nuniform \tvec4 _ClipRect;\nuniform
            lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4
            vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvarying highp vec4
            vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nlowp float u_xlat10_2;\nmediump
            vec2 u_xlat16_3;\nvec2 u_xlat4;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD3.xy).w;\n    u_xlat16_1.x = u_xlat10_0 * vs_TEXCOORD4.x +
            (-vs_TEXCOORD4.y);\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_0.xyz = _UnderlayColor.www * _UnderlayColor.xyz;\n    u_xlat16_0.w
            = _UnderlayColor.w;\n    u_xlat0 = u_xlat16_1.xxxx * u_xlat16_0;\n   
            u_xlat16_1 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_2 = texture2D(_MainTex,
            vs_TEXCOORD0.xy).w;\n    u_xlat16_3.xy = vec2(u_xlat10_2) * vs_TEXCOORD1.xx
            + (-vs_TEXCOORD1.zy);\n    u_xlat16_3.xy = clamp(u_xlat16_3.xy, 0.0,
            1.0);\n    u_xlat16_1 = u_xlat16_3.xxxx * u_xlat16_1 + vs_COLOR1;\n   
            u_xlat16_2 = u_xlat16_3.yyyy * u_xlat16_1;\n    u_xlat16_1.x = (-u_xlat16_1.w)
            * u_xlat16_3.y + 1.0;\n    u_xlat0 = u_xlat0 * u_xlat16_1.xxxx + u_xlat16_2;\n   
            u_xlat4.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat4.xy = u_xlat4.xy
            + -abs(vs_TEXCOORD2.xy);\n    u_xlat4.xy = u_xlat4.xy * vs_TEXCOORD2.zw;\n   
            u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);\n    u_xlat16_1.x = u_xlat4.y
            * u_xlat4.x;\n    u_xlat16_0 = u_xlat0 * u_xlat16_1.xxxx;\n    u_xlat0
            = u_xlat16_0 * vs_TEXCOORD3.zzzz;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat
            _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat
            _OutlineWidth;\nuniform \tfloat _UnderlayOffsetX;\nuniform \tfloat _UnderlayOffsetY;\nuniform
            \tfloat _UnderlayDilate;\nuniform \tfloat _UnderlaySoftness;\nuniform
            \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat
            _ScaleRatioA;\nuniform \tfloat _ScaleRatioC;\nuniform \tfloat _VertexOffsetX;\nuniform
            \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat
            _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform
            \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat
            _Sharpness;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec4 vs_COLOR1;\nout highp vec4
            vs_TEXCOORD0;\nout mediump vec4 vs_TEXCOORD1;\nout mediump vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout mediump vec2 vs_TEXCOORD4;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump
            vec3 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec2 u_xlat7;\nvec3 u_xlat8;\nfloat
            u_xlat10;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nbool u_xlatb24;\nvoid
            main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0.w
            = _FaceColor.w;\n    u_xlat16_3.xyz = in_COLOR0.xyz;\n    u_xlat16_3.w
            = 1.0;\n    u_xlat16_4 = u_xlat16_3 * _FaceColor;\n    u_xlat16_5.xyz
            = u_xlat16_4.www * u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_5.xyz;\n   
            u_xlat5.xyz = (-u_xlat16_5.xyz);\n    u_xlat5.w = (-u_xlat16_4.w);\n   
            u_xlat16_6.xyz = _OutlineColor.www * _OutlineColor.xyz;\n    u_xlat16_6.w
            = _OutlineColor.w;\n    u_xlat5 = u_xlat5 + u_xlat16_6;\n    u_xlat16
            = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n   
            u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz
            = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat1.xyz);\n   
            u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat24 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat2.x =
            u_xlat10 * u_xlat2.x;\n    u_xlat10 = u_xlat24 * u_xlat2.x;\n    u_xlat18
            = (-_PerspectiveFilter) + 1.0;\n    u_xlat18 = u_xlat18 * abs(u_xlat10);\n   
            u_xlat24 = u_xlat24 * u_xlat2.x + (-u_xlat18);\n    u_xlat16 = abs(u_xlat16)
            * u_xlat24 + u_xlat18;\n    u_xlatb24 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat16 = (u_xlatb24) ? u_xlat16 : u_xlat10;\n    u_xlat24 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat24 = u_xlat24 * u_xlat16 + 1.0;\n    u_xlat2.x
            = u_xlat16 / u_xlat24;\n    u_xlat24 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat24 = u_xlat2.x * u_xlat24;\n    u_xlat7.x = min(u_xlat24, 1.0);\n   
            u_xlat7.x = sqrt(u_xlat7.x);\n    u_xlat5 = u_xlat5 * u_xlat7.xxxx;\n   
            u_xlat4.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat5.xyz;\n    u_xlat4.w
            = u_xlat16_3.w * _FaceColor.w + u_xlat5.w;\n    vs_COLOR1 = u_xlat4;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat7.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat7.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat8.x = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat8.x + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat24) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat24 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    vs_TEXCOORD3.z = in_COLOR0.w;\n    vs_TEXCOORD3.w
            = 0.0;\n    u_xlat1 = vec4(_UnderlaySoftness, _UnderlayDilate, _UnderlayOffsetX,
            _UnderlayOffsetY) * vec4(vec4(_ScaleRatioC, _ScaleRatioC, _ScaleRatioC,
            _ScaleRatioC));\n    u_xlat8.xz = (-u_xlat1.zw) * vec2(_GradientScale);\n   
            u_xlat8.xz = u_xlat8.xz / vec2(_TextureWidth, _TextureHeight);\n    vs_TEXCOORD3.xy
            = u_xlat8.xz + in_TEXCOORD0.xy;\n    u_xlat8.x = u_xlat1.x * u_xlat16
            + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat8.x;\n    u_xlat8.x = u_xlat1.y
            * u_xlat2.x;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat8.x) * 0.5 + u_xlat0.x;\n    vs_TEXCOORD4.xy = u_xlat2.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _UnderlayColor;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec4 vs_COLOR1;\nin highp vec4 vs_TEXCOORD0;\nin
            mediump vec4 vs_TEXCOORD1;\nin mediump vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin mediump vec2 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec2 u_xlat16_3;\nvec2
            u_xlat4;\nvoid main()\n{\n    u_xlat16_0.x = texture(_MainTex, vs_TEXCOORD3.xy).w;\n   
            u_xlat16_1.x = u_xlat16_0.x * vs_TEXCOORD4.x + (-vs_TEXCOORD4.y);\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_0.xyz = _UnderlayColor.www
            * _UnderlayColor.xyz;\n    u_xlat16_0.w = _UnderlayColor.w;\n    u_xlat0
            = u_xlat16_1.xxxx * u_xlat16_0;\n    u_xlat16_1 = vs_COLOR0 + (-vs_COLOR1);\n   
            u_xlat16_2.x = texture(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3.xy
            = u_xlat16_2.xx * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_3.xy
            = clamp(u_xlat16_3.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat16_3.xxxx *
            u_xlat16_1 + vs_COLOR1;\n    u_xlat16_2 = u_xlat16_3.yyyy * u_xlat16_1;\n   
            u_xlat16_1.x = (-u_xlat16_1.w) * u_xlat16_3.y + 1.0;\n    u_xlat0 = u_xlat0
            * u_xlat16_1.xxxx + u_xlat16_2;\n    u_xlat4.xy = (-_ClipRect.xy) + _ClipRect.zw;\n   
            u_xlat4.xy = u_xlat4.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat4.xy = u_xlat4.xy
            * vs_TEXCOORD2.zw;\n    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);\n   
            u_xlat16_1.x = u_xlat4.y * u_xlat4.x;\n    u_xlat16_0 = u_xlat0 * u_xlat16_1.xxxx;\n   
            u_xlat0 = u_xlat16_0 * vs_TEXCOORD3.zzzz;\n    SV_Target0 = u_xlat0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform
            \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump
            vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat
            _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform
            \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4
            _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform
            \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform
            \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp
            vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4
            vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat
            u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 =
            hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying
            mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump
            vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump
            float u_xlat16_1;\nbool u_xlatb2;\nmediump float u_xlat16_4;\nvoid main()\n{\n   
            u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy
            + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n   
            u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y
            * u_xlat0.x;\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n   
            u_xlat16_4 = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_4
            = clamp(u_xlat16_4, 0.0, 1.0);\n    u_xlat16_0 = vec4(u_xlat16_4) * vs_COLOR0;\n   
            u_xlat16_4 = u_xlat16_0.w * u_xlat16_1 + -0.00100000005;\n    u_xlat16_0
            = vec4(u_xlat16_1) * u_xlat16_0;\n    SV_Target0 = u_xlat16_0;\n    u_xlatb2
            = u_xlat16_4<0.0;\n    if(u_xlatb2){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat
            _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat
            _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform
            \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat
            _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat
            _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform
            \tfloat _Sharpness;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec4 vs_COLOR1;\nout highp vec4
            vs_TEXCOORD0;\nout mediump vec4 vs_TEXCOORD1;\nout mediump vec4 vs_TEXCOORD2;\nvec2
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump
            vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat
            u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n   
            u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _ClipRect;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec4 vs_TEXCOORD0;\nin mediump vec4 vs_TEXCOORD1;\nin mediump vec4 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            float u_xlat16_1;\nbool u_xlatb2;\nmediump float u_xlat16_4;\nvoid main()\n{\n   
            u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy
            + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n   
            u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y
            * u_xlat0.x;\n    u_xlat16_0.x = texture(_MainTex, vs_TEXCOORD0.xy).w;\n   
            u_xlat16_4 = u_xlat16_0.x * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n   
            u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);\n    u_xlat16_0 = vec4(u_xlat16_4)
            * vs_COLOR0;\n    u_xlat16_4 = u_xlat16_0.w * u_xlat16_1 + -0.00100000005;\n   
            u_xlat16_0 = vec4(u_xlat16_1) * u_xlat16_0;\n    SV_Target0 = u_xlat16_0;\n   
            u_xlatb2 = u_xlat16_4<0.0;\n    if(u_xlatb2){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform
            \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump
            vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat
            _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform
            \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4
            _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform
            \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform
            \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp
            vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4
            vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat
            u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 =
            hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying
            mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump
            vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nvec2
            u_xlat1;\nlowp float u_xlat10_1;\nbool u_xlatb1;\nmediump vec2 u_xlat16_2;\nmediump
            float u_xlat16_5;\nvoid main()\n{\n    u_xlat16_0 = vs_COLOR0 + (-vs_COLOR1);\n   
            u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_2.xy
            = vec2(u_xlat10_1) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_2.xy
            = clamp(u_xlat16_2.xy, 0.0, 1.0);\n    u_xlat16_0 = u_xlat16_2.xxxx *
            u_xlat16_0 + vs_COLOR1;\n    u_xlat16_0 = u_xlat16_2.yyyy * u_xlat16_0;\n   
            u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy
            + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n   
            u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n    u_xlat16_2.x = u_xlat1.y
            * u_xlat1.x;\n    u_xlat16_5 = u_xlat16_0.w * u_xlat16_2.x + -0.00100000005;\n   
            u_xlat16_0 = u_xlat16_0 * u_xlat16_2.xxxx;\n    SV_Target0 = u_xlat16_0;\n   
            u_xlatb1 = u_xlat16_5<0.0;\n    if(u_xlatb1){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat
            _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat
            _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform
            \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat
            _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat
            _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform
            \tfloat _Sharpness;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec4 vs_COLOR1;\nout highp vec4
            vs_TEXCOORD0;\nout mediump vec4 vs_TEXCOORD1;\nout mediump vec4 vs_TEXCOORD2;\nvec2
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump
            vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat
            u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n   
            u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3
            = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n   
            vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7
            * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter)
            + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15
            * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 +
            u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x
            = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n   
            u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n   
            u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n   
            u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3
            = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _ClipRect;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin mediump
            vec4 vs_COLOR1;\nin highp vec4 vs_TEXCOORD0;\nin mediump vec4 vs_TEXCOORD1;\nin
            mediump vec4 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nvec2 u_xlat1;\nmediump float u_xlat16_1;\nbool u_xlatb1;\nmediump
            vec2 u_xlat16_2;\nmediump float u_xlat16_5;\nvoid main()\n{\n    u_xlat16_0
            = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy).w;\n   
            u_xlat16_2.xy = vec2(u_xlat16_1) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n   
            u_xlat16_2.xy = clamp(u_xlat16_2.xy, 0.0, 1.0);\n    u_xlat16_0 = u_xlat16_2.xxxx
            * u_xlat16_0 + vs_COLOR1;\n    u_xlat16_0 = u_xlat16_2.yyyy * u_xlat16_0;\n   
            u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy
            + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n   
            u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n    u_xlat16_2.x = u_xlat1.y
            * u_xlat1.x;\n    u_xlat16_5 = u_xlat16_0.w * u_xlat16_2.x + -0.00100000005;\n   
            u_xlat16_0 = u_xlat16_0 * u_xlat16_2.xxxx;\n    SV_Target0 = u_xlat16_0;\n   
            u_xlatb1 = u_xlat16_5<0.0;\n    if(u_xlatb1){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform
            \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump
            vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat
            _UnderlayOffsetX;\nuniform \tfloat _UnderlayOffsetY;\nuniform \tfloat
            _UnderlayDilate;\nuniform \tfloat _UnderlaySoftness;\nuniform \tfloat
            _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform
            \tfloat _ScaleRatioC;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat
            _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat
            _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform
            \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat
            _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3
            in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2
            in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4
            vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvarying
            highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump
            vec3 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec2 u_xlat7;\nvec3 u_xlat8;\nfloat
            u_xlat10;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nbool u_xlatb24;\nvoid
            main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0.w
            = _FaceColor.w;\n    u_xlat16_3.xyz = in_COLOR0.xyz;\n    u_xlat16_3.w
            = 1.0;\n    u_xlat16_4 = u_xlat16_3 * _FaceColor;\n    u_xlat16_5.xyz
            = u_xlat16_4.www * u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_5.xyz;\n   
            u_xlat5.xyz = (-u_xlat16_5.xyz);\n    u_xlat5.w = (-u_xlat16_4.w);\n   
            u_xlat16_6.xyz = _OutlineColor.www * _OutlineColor.xyz;\n    u_xlat16_6.w
            = _OutlineColor.w;\n    u_xlat5 = u_xlat5 + u_xlat16_6;\n    u_xlat16
            = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n   
            u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz
            = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat1.xyz);\n   
            u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat24 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat2.x =
            u_xlat10 * u_xlat2.x;\n    u_xlat10 = u_xlat24 * u_xlat2.x;\n    u_xlat18
            = (-_PerspectiveFilter) + 1.0;\n    u_xlat18 = u_xlat18 * abs(u_xlat10);\n   
            u_xlat24 = u_xlat24 * u_xlat2.x + (-u_xlat18);\n    u_xlat16 = abs(u_xlat16)
            * u_xlat24 + u_xlat18;\n    u_xlatb24 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat16 = (u_xlatb24) ? u_xlat16 : u_xlat10;\n    u_xlat24 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat24 = u_xlat24 * u_xlat16 + 1.0;\n    u_xlat2.x
            = u_xlat16 / u_xlat24;\n    u_xlat24 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat24 = u_xlat2.x * u_xlat24;\n    u_xlat7.x = min(u_xlat24, 1.0);\n   
            u_xlat7.x = sqrt(u_xlat7.x);\n    u_xlat5 = u_xlat5 * u_xlat7.xxxx;\n   
            u_xlat4.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat5.xyz;\n    u_xlat4.w
            = u_xlat16_3.w * _FaceColor.w + u_xlat5.w;\n    vs_COLOR1 = u_xlat4;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat7.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat7.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat8.x = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat8.x + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat24) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat24 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    vs_TEXCOORD3.z = in_COLOR0.w;\n    vs_TEXCOORD3.w
            = 0.0;\n    u_xlat1 = vec4(_UnderlaySoftness, _UnderlayDilate, _UnderlayOffsetX,
            _UnderlayOffsetY) * vec4(vec4(_ScaleRatioC, _ScaleRatioC, _ScaleRatioC,
            _ScaleRatioC));\n    u_xlat8.xz = (-u_xlat1.zw) * vec2(_GradientScale);\n   
            u_xlat8.xz = u_xlat8.xz / vec2(_TextureWidth, _TextureHeight);\n    vs_TEXCOORD3.xy
            = u_xlat8.xz + in_TEXCOORD0.xy;\n    u_xlat8.x = u_xlat1.x * u_xlat16
            + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat8.x;\n    u_xlat8.x = u_xlat1.y
            * u_xlat2.x;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat8.x) * 0.5 + u_xlat0.x;\n    vs_TEXCOORD4.xy = u_xlat2.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _UnderlayColor;\nuniform \tvec4 _ClipRect;\nuniform
            lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4
            vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvarying highp vec4
            vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nlowp float u_xlat10_2;\nmediump
            vec2 u_xlat16_3;\nvec2 u_xlat4;\nbool u_xlatb4;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD3.xy).w;\n    u_xlat16_1.x
            = u_xlat10_0 * vs_TEXCOORD4.x + (-vs_TEXCOORD4.y);\n    u_xlat16_1.x
            = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_0.xyz = _UnderlayColor.www
            * _UnderlayColor.xyz;\n    u_xlat16_0.w = _UnderlayColor.w;\n    u_xlat0
            = u_xlat16_1.xxxx * u_xlat16_0;\n    u_xlat16_1 = vs_COLOR0 + (-vs_COLOR1);\n   
            u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3.xy
            = vec2(u_xlat10_2) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_3.xy
            = clamp(u_xlat16_3.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat16_3.xxxx *
            u_xlat16_1 + vs_COLOR1;\n    u_xlat16_2 = u_xlat16_3.yyyy * u_xlat16_1;\n   
            u_xlat16_1.x = (-u_xlat16_1.w) * u_xlat16_3.y + 1.0;\n    u_xlat0 = u_xlat0
            * u_xlat16_1.xxxx + u_xlat16_2;\n    u_xlat4.xy = (-_ClipRect.xy) + _ClipRect.zw;\n   
            u_xlat4.xy = u_xlat4.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat4.xy = u_xlat4.xy
            * vs_TEXCOORD2.zw;\n    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);\n   
            u_xlat16_1.x = u_xlat4.y * u_xlat4.x;\n    u_xlat16_0 = u_xlat0 * u_xlat16_1.xxxx;\n   
            u_xlat16_1.x = u_xlat16_0.w * vs_TEXCOORD3.z + -0.00100000005;\n    u_xlat0
            = u_xlat16_0 * vs_TEXCOORD3.zzzz;\n    SV_Target0 = u_xlat0;\n    u_xlatb4
            = u_xlat16_1.x<0.0;\n    if(u_xlatb4){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat
            _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat
            _OutlineWidth;\nuniform \tfloat _UnderlayOffsetX;\nuniform \tfloat _UnderlayOffsetY;\nuniform
            \tfloat _UnderlayDilate;\nuniform \tfloat _UnderlaySoftness;\nuniform
            \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat
            _ScaleRatioA;\nuniform \tfloat _ScaleRatioC;\nuniform \tfloat _VertexOffsetX;\nuniform
            \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform
            \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat
            _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform
            \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat
            _Sharpness;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec4 vs_COLOR1;\nout highp vec4
            vs_TEXCOORD0;\nout mediump vec4 vs_TEXCOORD1;\nout mediump vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout mediump vec2 vs_TEXCOORD4;\nvec2 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4
            u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump
            vec3 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec2 u_xlat7;\nvec3 u_xlat8;\nfloat
            u_xlat10;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nbool u_xlatb24;\nvoid
            main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n   
            u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3
            = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0.w
            = _FaceColor.w;\n    u_xlat16_3.xyz = in_COLOR0.xyz;\n    u_xlat16_3.w
            = 1.0;\n    u_xlat16_4 = u_xlat16_3 * _FaceColor;\n    u_xlat16_5.xyz
            = u_xlat16_4.www * u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_5.xyz;\n   
            u_xlat5.xyz = (-u_xlat16_5.xyz);\n    u_xlat5.w = (-u_xlat16_4.w);\n   
            u_xlat16_6.xyz = _OutlineColor.www * _OutlineColor.xyz;\n    u_xlat16_6.w
            = _OutlineColor.w;\n    u_xlat5 = u_xlat5 + u_xlat16_6;\n    u_xlat16
            = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n   
            u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz
            = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat1.xyz);\n   
            u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n   
            u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat24 = dot(u_xlat1.xy,
            u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) *
            vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = abs(in_TEXCOORD1.y)
            * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat2.x =
            u_xlat10 * u_xlat2.x;\n    u_xlat10 = u_xlat24 * u_xlat2.x;\n    u_xlat18
            = (-_PerspectiveFilter) + 1.0;\n    u_xlat18 = u_xlat18 * abs(u_xlat10);\n   
            u_xlat24 = u_xlat24 * u_xlat2.x + (-u_xlat18);\n    u_xlat16 = abs(u_xlat16)
            * u_xlat24 + u_xlat18;\n    u_xlatb24 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n   
            u_xlat16 = (u_xlatb24) ? u_xlat16 : u_xlat10;\n    u_xlat24 = _OutlineSoftness
            * _ScaleRatioA;\n    u_xlat24 = u_xlat24 * u_xlat16 + 1.0;\n    u_xlat2.x
            = u_xlat16 / u_xlat24;\n    u_xlat24 = _OutlineWidth * _ScaleRatioA;\n   
            u_xlat24 = u_xlat2.x * u_xlat24;\n    u_xlat7.x = min(u_xlat24, 1.0);\n   
            u_xlat7.x = sqrt(u_xlat7.x);\n    u_xlat5 = u_xlat5 * u_xlat7.xxxx;\n   
            u_xlat4.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat5.xyz;\n    u_xlat4.w
            = u_xlat16_3.w * _FaceColor.w + u_xlat5.w;\n    vs_COLOR1 = u_xlat4;\n   
            u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat7.xy
            = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0,
            2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n   
            u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat7.xy
            / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n   
            u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n   
            u_xlat8.x = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x
            * u_xlat8.x + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n   
            u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) *
            0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat24) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat24 * 0.5 + u_xlat2.w;\n   
            vs_TEXCOORD1 = u_xlat2;\n    vs_TEXCOORD3.z = in_COLOR0.w;\n    vs_TEXCOORD3.w
            = 0.0;\n    u_xlat1 = vec4(_UnderlaySoftness, _UnderlayDilate, _UnderlayOffsetX,
            _UnderlayOffsetY) * vec4(vec4(_ScaleRatioC, _ScaleRatioC, _ScaleRatioC,
            _ScaleRatioC));\n    u_xlat8.xz = (-u_xlat1.zw) * vec2(_GradientScale);\n   
            u_xlat8.xz = u_xlat8.xz / vec2(_TextureWidth, _TextureHeight);\n    vs_TEXCOORD3.xy
            = u_xlat8.xz + in_TEXCOORD0.xy;\n    u_xlat8.x = u_xlat1.x * u_xlat16
            + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat8.x;\n    u_xlat8.x = u_xlat1.y
            * u_xlat2.x;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y
            = (-u_xlat8.x) * 0.5 + u_xlat0.x;\n    vs_TEXCOORD4.xy = u_xlat2.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _UnderlayColor;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec4 vs_COLOR1;\nin highp vec4 vs_TEXCOORD0;\nin
            mediump vec4 vs_TEXCOORD1;\nin mediump vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin mediump vec2 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec2 u_xlat16_3;\nvec2
            u_xlat4;\nbool u_xlatb4;\nvoid main()\n{\n    u_xlat16_0.x = texture(_MainTex,
            vs_TEXCOORD3.xy).w;\n    u_xlat16_1.x = u_xlat16_0.x * vs_TEXCOORD4.x
            + (-vs_TEXCOORD4.y);\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_0.xyz = _UnderlayColor.www * _UnderlayColor.xyz;\n    u_xlat16_0.w
            = _UnderlayColor.w;\n    u_xlat0 = u_xlat16_1.xxxx * u_xlat16_0;\n   
            u_xlat16_1 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat16_2.x = texture(_MainTex,
            vs_TEXCOORD0.xy).w;\n    u_xlat16_3.xy = u_xlat16_2.xx * vs_TEXCOORD1.xx
            + (-vs_TEXCOORD1.zy);\n    u_xlat16_3.xy = clamp(u_xlat16_3.xy, 0.0,
            1.0);\n    u_xlat16_1 = u_xlat16_3.xxxx * u_xlat16_1 + vs_COLOR1;\n   
            u_xlat16_2 = u_xlat16_3.yyyy * u_xlat16_1;\n    u_xlat16_1.x = (-u_xlat16_1.w)
            * u_xlat16_3.y + 1.0;\n    u_xlat0 = u_xlat0 * u_xlat16_1.xxxx + u_xlat16_2;\n   
            u_xlat4.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat4.xy = u_xlat4.xy
            + -abs(vs_TEXCOORD2.xy);\n    u_xlat4.xy = u_xlat4.xy * vs_TEXCOORD2.zw;\n   
            u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);\n    u_xlat16_1.x = u_xlat4.y
            * u_xlat4.x;\n    u_xlat16_0 = u_xlat0 * u_xlat16_1.xxxx;\n    u_xlat16_1.x
            = u_xlat16_0.w * vs_TEXCOORD3.z + -0.00100000005;\n    u_xlat0 = u_xlat16_0
            * vs_TEXCOORD3.zzzz;\n    SV_Target0 = u_xlat0;\n    u_xlatb4 = u_xlat16_1.x<0.0;\n   
            if(u_xlatb4){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - OUTLINE_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNDERLAY_INNER
        - UNDERLAY_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - UNITY_UI_CLIP_RECT
        - __
        KeywordGroups:
        - Keywords:
          - __
          - OUTLINE_ON
          hasDiscard: 1
        - Keywords:
          - __
          - UNDERLAY_ON
          - UNDERLAY_INNER
          hasDiscard: 1
        - Keywords:
          - __
          - UNITY_UI_CLIP_RECT
          hasDiscard: 1
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - OUTLINE_ON
          - UNDERLAY_ON
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
    ShaderPath: Assets/TextMesh Pro/Shaders/TMP_SDF-Mobile.shader
    ShaderDefinedKeywords:
    - OUTLINE_ON
    - UNDERLAY_INNER
    - UNDERLAY_ON
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNDERLAY_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNDERLAY_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNDERLAY_ON
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNDERLAY_ON
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNDERLAY_ON
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNDERLAY_ON
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNDERLAY_ON
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fe393ace9b354375a9cb14cdbbc28be4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - OUTLINE_ON
      - UNDERLAY_ON
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy +
            _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat10_0 + _TextureSampleAdd;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout mediump vec4
            vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat0
            = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n    u_xlat16_0 =
            texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat16_0 + _TextureSampleAdd;\n   
            u_xlat0 = u_xlat0 * vs_COLOR0;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy +
            _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nbool
            u_xlatb0;\nmediump float u_xlat16_1;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 + _TextureSampleAdd;\n   
            u_xlat16_1 = u_xlat0.w * vs_COLOR0.w + -0.00100000005;\n    u_xlat0 =
            u_xlat0 * vs_COLOR0;\n    SV_Target0 = u_xlat0;\n    u_xlatb0 = u_xlat16_1<0.0;\n   
            if(u_xlatb0){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout mediump vec4
            vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat0
            = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nmediump float u_xlat16_1;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat16_0 + _TextureSampleAdd;\n    u_xlat16_1 = u_xlat0.w
            * vs_COLOR0.w + -0.00100000005;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n   
            SV_Target0 = u_xlat0;\n    u_xlatb0 = u_xlat16_1<0.0;\n    if(u_xlatb0){discard;}\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy +
            _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nvec4 u_xlat1;\nlowp vec4
            u_xlat10_1;\nvoid main()\n{\n    u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx,
            _ClipRect.xyxx).xy;\n    u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw,
            vs_TEXCOORD1.xxxy).zw;\n    u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n   
            u_xlat0.y = u_xlatb0.y ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z
            ? float(1.0) : 0.0;\n    u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n   
            u_xlat0.xy = u_xlat0.zw * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n   
            u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1
            + _TextureSampleAdd;\n    u_xlat1 = u_xlat1 * vs_COLOR0;\n    u_xlat1.w
            = u_xlat0.x * u_xlat1.w;\n    SV_Target0 = u_xlat1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout mediump vec4
            vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat0
            = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvoid main()\n{\n    u_xlatb0.xy =
            greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n    u_xlatb0.zw
            = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n    u_xlat0.x
            = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y ? float(1.0)
            : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n    u_xlat0.w
            = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw * u_xlat0.xy;\n   
            u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 + _TextureSampleAdd;\n   
            u_xlat1 = u_xlat1 * vs_COLOR0;\n    u_xlat1.w = u_xlat0.x * u_xlat1.w;\n   
            SV_Target0 = u_xlat1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy +
            _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nvec4 u_xlat1;\nlowp vec4
            u_xlat10_1;\nmediump float u_xlat16_2;\nvoid main()\n{\n    u_xlatb0.xy
            = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n    u_xlatb0.zw
            = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n    u_xlat0.x
            = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y ? float(1.0)
            : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n    u_xlat0.w
            = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw * u_xlat0.xy;\n   
            u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n   
            u_xlat1 = u_xlat1 * vs_COLOR0;\n    u_xlat16_2 = u_xlat1.w * u_xlat0.x
            + -0.00100000005;\n    u_xlat1.w = u_xlat0.x * u_xlat1.w;\n    SV_Target0
            = u_xlat1;\n    u_xlatb0.x = u_xlat16_2<0.0;\n    if(u_xlatb0.x){discard;}\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout mediump vec4
            vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat0
            = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump float u_xlat16_2;\nvoid main()\n{\n   
            u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 + _TextureSampleAdd;\n   
            u_xlat1 = u_xlat1 * vs_COLOR0;\n    u_xlat16_2 = u_xlat1.w * u_xlat0.x
            + -0.00100000005;\n    u_xlat1.w = u_xlat0.x * u_xlat1.w;\n    SV_Target0
            = u_xlat1;\n    u_xlatb0.x = u_xlat16_2<0.0;\n    if(u_xlatb0.x){discard;}\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - UNITY_UI_CLIP_RECT
        - __
        KeywordGroups:
        - Keywords:
          - __
          - UNITY_UI_CLIP_RECT
          hasDiscard: 1
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
    ShaderPath: Assets/TextMesh Pro/Shaders/TMP_Sprite.shader
    ShaderDefinedKeywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: cf81c85f95fe47e1a27f6ae460cf182c, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TintColor;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nfloat u_xlat2;\nmediump float u_xlat16_10;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.xyz
            = u_xlat10_0.xyz * _TintColor.xyz;\n    u_xlat16_10 = (-u_xlat10_0.w)
            + 1.0;\n    u_xlat16_1.xyz = u_xlat16_1.xyz * vs_COLOR0.xyz;\n    u_xlat0.xyz
            = u_xlat16_1.xyz + u_xlat16_1.xyz;\n    u_xlat2 = dot(_TintColor.ww,
            vs_COLOR0.ww);\n    u_xlat0.w = u_xlat16_10 * u_xlat2;\n    SV_Target0
            = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TintColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nfloat u_xlat2;\nmediump
            float u_xlat16_10;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * _TintColor.xyz;\n   
            u_xlat16_10 = (-u_xlat16_0.w) + 1.0;\n    u_xlat16_1.xyz = u_xlat16_1.xyz
            * vs_COLOR0.xyz;\n    u_xlat0.xyz = u_xlat16_1.xyz + u_xlat16_1.xyz;\n   
            u_xlat2 = dot(_TintColor.ww, vs_COLOR0.ww);\n    u_xlat0.w = u_xlat16_10
            * u_xlat2;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TintColor;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nfloat u_xlat2;\nmediump float u_xlat16_10;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.xyz
            = u_xlat10_0.xyz * _TintColor.xyz;\n    u_xlat16_10 = (-u_xlat10_0.w)
            + 1.0;\n    u_xlat16_1.xyz = u_xlat16_1.xyz * vs_COLOR0.xyz;\n    u_xlat0.xyz
            = u_xlat16_1.xyz + u_xlat16_1.xyz;\n    u_xlat2 = dot(_TintColor.ww,
            vs_COLOR0.ww);\n    u_xlat0.w = u_xlat16_10 * u_xlat2;\n    SV_Target0
            = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TintColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nfloat u_xlat2;\nmediump
            float u_xlat16_10;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * _TintColor.xyz;\n   
            u_xlat16_10 = (-u_xlat16_0.w) + 1.0;\n    u_xlat16_1.xyz = u_xlat16_1.xyz
            * vs_COLOR0.xyz;\n    u_xlat0.xyz = u_xlat16_1.xyz + u_xlat16_1.xyz;\n   
            u_xlat2 = dot(_TintColor.ww, vs_COLOR0.ww);\n    u_xlat0.w = u_xlat16_10
            * u_xlat2;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - __
        KeywordGroups:
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UI Particle
      AddMultiply.shader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - UNITY_UI_ALPHACLIP
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 088bbfd9222ee044cb4e4699336e9ff1, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TintColor;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_1;\nvoid
            main()\n{\n    u_xlat0 = vs_COLOR0 + vs_COLOR0;\n    u_xlat0 = u_xlat0
            * _TintColor;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat0 * u_xlat10_1;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TintColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_1;\nvoid main()\n{\n    u_xlat0 = vs_COLOR0
            + vs_COLOR0;\n    u_xlat0 = u_xlat0 * _TintColor;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0 * u_xlat16_1;\n    SV_Target0
            = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TintColor;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_1;\nvoid
            main()\n{\n    u_xlat0 = vs_COLOR0 + vs_COLOR0;\n    u_xlat0 = u_xlat0
            * _TintColor;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat0 * u_xlat10_1;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TintColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_1;\nvoid main()\n{\n    u_xlat0 = vs_COLOR0
            + vs_COLOR0;\n    u_xlat0 = u_xlat0 * _TintColor;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0 * u_xlat16_1;\n    SV_Target0
            = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - __
        KeywordGroups:
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UI Particle
      Add.shader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - UNITY_UI_ALPHACLIP
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: e064104788d94b349ab13141a30b5660, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 * vs_COLOR0;\n    SV_Target0.xyz
            = u_xlat0.www * u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat16_0 * vs_COLOR0;\n    SV_Target0.xyz = u_xlat0.www *
            u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 * vs_COLOR0;\n    SV_Target0.xyz
            = u_xlat0.www * u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat16_0 * vs_COLOR0;\n    SV_Target0.xyz = u_xlat0.www *
            u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - __
        KeywordGroups:
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UI Particle
      AddSmooth.shader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - UNITY_UI_ALPHACLIP
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 4c2211b120168e44db4a3a8417013615, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TintColor;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_1;\nvoid
            main()\n{\n    u_xlat0 = vs_COLOR0 + vs_COLOR0;\n    u_xlat0 = u_xlat0
            * _TintColor;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat0 * u_xlat10_1;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TintColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_1;\nvoid main()\n{\n    u_xlat0 = vs_COLOR0
            + vs_COLOR0;\n    u_xlat0 = u_xlat0 * _TintColor;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0 * u_xlat16_1;\n    SV_Target0
            = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TintColor;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_1;\nvoid
            main()\n{\n    u_xlat0 = vs_COLOR0 + vs_COLOR0;\n    u_xlat0 = u_xlat0
            * _TintColor;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat0 * u_xlat10_1;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TintColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_1;\nvoid main()\n{\n    u_xlat0 = vs_COLOR0
            + vs_COLOR0;\n    u_xlat0 = u_xlat0 * _TintColor;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0 * u_xlat16_1;\n    SV_Target0
            = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - __
        KeywordGroups:
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UI Particle
      Alpha Blend.shader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - UNITY_UI_ALPHACLIP
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: c3d7d8d71a91071469ad7019e77864d6, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 * vs_COLOR0;\n    u_xlat0
            = u_xlat0 * vs_COLOR0.wwww;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat16_0 * vs_COLOR0;\n    u_xlat0 = u_xlat0 * vs_COLOR0.wwww;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 * vs_COLOR0;\n    u_xlat0
            = u_xlat0 * vs_COLOR0.wwww;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat16_0 * vs_COLOR0;\n    u_xlat0 = u_xlat0 * vs_COLOR0.wwww;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - __
        KeywordGroups:
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UI Particle
      Premultiply Blend.shader
    ShaderDefinedKeywords:
    - UNITY_UI_ALPHACLIP
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 0596a6838d78f624397b642817cf20bc, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 * vs_COLOR0;\n    SV_Target0
            = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat16_0 * vs_COLOR0;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 * vs_COLOR0;\n    SV_Target0
            = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat16_0 * vs_COLOR0;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - __
        KeywordGroups:
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UI Particle
      Blend.shader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - UNITY_UI_ALPHACLIP
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 98fed5ba500a9a04a80325266b9911bb, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump
            vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nfloat u_xlat1;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_0.w
            * vs_COLOR0.w;\n    u_xlat16_0 = vs_COLOR0 * u_xlat10_0 + vec4(-1.0,
            -1.0, -1.0, -1.0);\n    SV_Target0 = vec4(u_xlat1) * u_xlat16_0 + vec4(1.0,
            1.0, 1.0, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nfloat u_xlat1;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1 = u_xlat16_0.w * vs_COLOR0.w;\n    u_xlat16_0 = vs_COLOR0 * u_xlat16_0
            + vec4(-1.0, -1.0, -1.0, -1.0);\n    SV_Target0 = vec4(u_xlat1) * u_xlat16_0
            + vec4(1.0, 1.0, 1.0, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump
            vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nfloat u_xlat1;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_0.w
            * vs_COLOR0.w;\n    u_xlat16_0 = vs_COLOR0 * u_xlat10_0 + vec4(-1.0,
            -1.0, -1.0, -1.0);\n    SV_Target0 = vec4(u_xlat1) * u_xlat16_0 + vec4(1.0,
            1.0, 1.0, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nfloat u_xlat1;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1 = u_xlat16_0.w * vs_COLOR0.w;\n    u_xlat16_0 = vs_COLOR0 * u_xlat16_0
            + vec4(-1.0, -1.0, -1.0, -1.0);\n    SV_Target0 = vec4(u_xlat1) * u_xlat16_0
            + vec4(1.0, 1.0, 1.0, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - __
        KeywordGroups:
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UI Particle
      Multiply.shader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - UNITY_UI_ALPHACLIP
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 320f6bb7bde369b4a85c9d89a9ba5268, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump
            vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_0 = u_xlat10_0 * vs_COLOR0;\n    u_xlat16_1 = u_xlat16_0 * vec4(2.0,
            2.0, 2.0, 1.0) + vec4(-0.5, -0.5, -0.5, -0.5);\n    SV_Target0 = u_xlat16_0.wwww
            * u_xlat16_1 + vec4(0.5, 0.5, 0.5, 0.5);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat16_0 * vs_COLOR0;\n    u_xlat16_1
            = u_xlat16_0 * vec4(2.0, 2.0, 2.0, 1.0) + vec4(-0.5, -0.5, -0.5, -0.5);\n   
            SV_Target0 = u_xlat16_0.wwww * u_xlat16_1 + vec4(0.5, 0.5, 0.5, 0.5);\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump
            vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_0 = u_xlat10_0 * vs_COLOR0;\n    u_xlat16_1 = u_xlat16_0 * vec4(2.0,
            2.0, 2.0, 1.0) + vec4(-0.5, -0.5, -0.5, -0.5);\n    SV_Target0 = u_xlat16_0.wwww
            * u_xlat16_1 + vec4(0.5, 0.5, 0.5, 0.5);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat16_0 * vs_COLOR0;\n    u_xlat16_1
            = u_xlat16_0 * vec4(2.0, 2.0, 2.0, 1.0) + vec4(-0.5, -0.5, -0.5, -0.5);\n   
            SV_Target0 = u_xlat16_0.wwww * u_xlat16_1 + vec4(0.5, 0.5, 0.5, 0.5);\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - __
        KeywordGroups:
        - Keywords:
          - __
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UI Particle
      MultiplyDouble.shader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - UNITY_UI_ALPHACLIP
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 0765ecef58833c3429346a1fee45e4e0, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 65bbb789ada58ab44aaedbe09687f089, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tvec4 unity_LightPosition[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 glstate_lightmodel_ambient;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _EmisColor;\nuniform \tvec4 _MainTex_ST;\nattribute highp
            vec3 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump
            vec4 in_COLOR0;\nattribute highp vec3 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nfloat u_xlat15;\nmediump float u_xlat16_17;\nvoid main()\n{\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].zzz + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].www
            + u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat1.xyz;\n    u_xlat0.y = dot(u_xlat1.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].www
            + u_xlat1.xyz;\n    u_xlat0.z = dot(u_xlat1.xyz, in_NORMAL0.xyz);\n   
            u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat16_2.x = dot(u_xlat0.xyz,
            unity_LightPosition[0].xyz);\n    u_xlat16_2.x = max(u_xlat16_2.x, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_2.xxx * in_COLOR0.xyz;\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz * unity_LightColor[0].xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz
            * vec3(0.5, 0.5, 0.5);\n    u_xlat16_2.xyz = min(u_xlat16_2.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlat16_3.xyz = in_COLOR0.xyz * glstate_lightmodel_ambient.xyz
            + _EmisColor.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_17 = dot(u_xlat0.xyz, unity_LightPosition[1].xyz);\n    u_xlat16_17
            = max(u_xlat16_17, 0.0);\n    u_xlat16_3.xyz = vec3(u_xlat16_17) * in_COLOR0.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * unity_LightColor[1].xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_3.xyz = min(u_xlat16_3.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_17 = dot(u_xlat0.xyz, unity_LightPosition[2].xyz);\n    u_xlat16_17
            = max(u_xlat16_17, 0.0);\n    u_xlat16_3.xyz = vec3(u_xlat16_17) * in_COLOR0.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * unity_LightColor[2].xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_3.xyz = min(u_xlat16_3.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_17 = dot(u_xlat0.xyz, unity_LightPosition[3].xyz);\n    u_xlat16_17
            = max(u_xlat16_17, 0.0);\n    u_xlat16_3.xyz = vec3(u_xlat16_17) * in_COLOR0.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * unity_LightColor[3].xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_3.xyz = min(u_xlat16_3.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_17 = dot(u_xlat0.xyz, unity_LightPosition[4].xyz);\n    u_xlat16_17
            = max(u_xlat16_17, 0.0);\n    u_xlat16_3.xyz = vec3(u_xlat16_17) * in_COLOR0.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * unity_LightColor[4].xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_3.xyz = min(u_xlat16_3.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_17 = dot(u_xlat0.xyz, unity_LightPosition[5].xyz);\n    u_xlat16_17
            = max(u_xlat16_17, 0.0);\n    u_xlat16_3.xyz = vec3(u_xlat16_17) * in_COLOR0.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * unity_LightColor[5].xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_3.xyz = min(u_xlat16_3.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_17 = dot(u_xlat0.xyz, unity_LightPosition[6].xyz);\n    u_xlat16_3.x
            = dot(u_xlat0.xyz, unity_LightPosition[7].xyz);\n    u_xlat16_3.x = max(u_xlat16_3.x,
            0.0);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * in_COLOR0.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * unity_LightColor[7].xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz
            * vec3(0.5, 0.5, 0.5);\n    u_xlat16_3.xyz = min(u_xlat16_3.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlat16_17 = max(u_xlat16_17, 0.0);\n    u_xlat16_4.xyz
            = vec3(u_xlat16_17) * in_COLOR0.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz
            * unity_LightColor[6].xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.5,
            0.5, 0.5);\n    u_xlat16_4.xyz = min(u_xlat16_4.xyz, vec3(1.0, 1.0, 1.0));\n   
            u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_4.xyz;\n    vs_COLOR0.xyz
            = u_xlat16_3.xyz + u_xlat16_2.xyz;\n    vs_COLOR0.xyz = clamp(vs_COLOR0.xyz,
            0.0, 1.0);\n    vs_COLOR0.w = in_COLOR0.w;\n    vs_COLOR0.w = clamp(vs_COLOR0.w,
            0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy +
            _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nlowp vec4
            u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            SV_Target0 = u_xlat10_0 * vs_COLOR0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: Vertex
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _EmisColor;\nuniform
            \tivec4 unity_VertexLightParams;\nuniform \tvec4 _MainTex_ST;\nin highp
            vec3 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin mediump vec4 in_COLOR0;\nin
            highp vec3 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec3
            u_xlat2;\nbool u_xlatb2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nfloat
            u_xlat15;\nint u_xlati15;\nmediump float u_xlat16_18;\nvoid main()\n{\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].zzz + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].www
            + u_xlat0.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].xxx + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].zzz
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].www + u_xlat1.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].xxx
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].zzz + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].www
            + u_xlat2.xyz;\n    u_xlat0.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);\n   
            u_xlat0.y = dot(u_xlat1.xyz, in_NORMAL0.xyz);\n    u_xlat0.z = dot(u_xlat2.xyz,
            in_NORMAL0.xyz);\n    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz = vec3(u_xlat15) *
            u_xlat0.xyz;\n    u_xlat16_3.xyz = in_COLOR0.xyz * glstate_lightmodel_ambient.xyz
            + _EmisColor.xyz;\n    u_xlat16_1.xyz = u_xlat16_3.xyz;\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<unity_VertexLightParams.x ; u_xlati_loop_1++)\n   
            {\n        u_xlat16_18 = dot(u_xlat0.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_18 = max(u_xlat16_18, 0.0);\n        u_xlat16_4.xyz = vec3(u_xlat16_18)
            * in_COLOR0.xyz;\n        u_xlat16_4.xyz = u_xlat16_4.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.5, 0.5, 0.5);\n        u_xlat16_4.xyz
            = min(u_xlat16_4.xyz, vec3(1.0, 1.0, 1.0));\n        u_xlat16_1.xyz =
            u_xlat16_1.xyz + u_xlat16_4.xyz;\n    }\n    u_xlat16_1.w = in_COLOR0.w;\n   
            vs_COLOR0 = u_xlat16_1;\n    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    SV_Target0 = u_xlat16_0
            * vs_COLOR0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: Vertex
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        KeywordGroups:
        - Keywords:
          - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - POINT
          - SPOT
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 65bbb789ada58ab44aaedbe09687f089, type: 3}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 65bbb789ada58ab44aaedbe09687f089, type: 3}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: Vertex
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 65bbb789ada58ab44aaedbe09687f089, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: LIGHTMODE
        Value: Vertex
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: 65bbb789ada58ab44aaedbe09687f089, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UI Particle
      VertexLit Blended.shader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - POINT
    - SPOT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 65bbb789ada58ab44aaedbe09687f089, type: 3}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 65bbb789ada58ab44aaedbe09687f089, type: 3}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 947afae4d36f1274ea2e4098262ceef6, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _AlphaMask_ST;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xy
            = in_POSITION0.xy * _AlphaMask_ST.xy + _AlphaMask_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tint
            _UseAlphaClip;\nuniform \tint _FlipAlphaMask;\nuniform \tfloat _CutOff;\nuniform
            \tint _HardBlend;\nuniform \tint _NoOuterClip;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _AlphaMask;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec4
            u_xlat1;\nint u_xlati1;\nbvec4 u_xlatb1;\nint u_xlati2;\nbool u_xlatb2;\nfloat
            u_xlat3;\nmediump float u_xlat16_3;\nbool u_xlatb5;\nmediump float u_xlat16_7;\nfloat
            u_xlat9;\nbool u_xlatb12;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 + _TextureSampleAdd;\n   
            u_xlat0 = u_xlat0 * vs_COLOR0;\n    u_xlatb1.xy = greaterThanEqual(vs_TEXCOORD1.xyxx,
            vec4(0.0, 0.0, 0.0, 0.0)).xy;\n    u_xlatb1.zw = greaterThanEqual(vec4(0.0,
            0.0, 1.0, 1.0), vs_TEXCOORD1.xxxy).zw;\n    u_xlat1.x = u_xlatb1.x ?
            float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n   
            u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w
            ? float(1.0) : 0.0;\n;\n    u_xlati2 = int((_NoOuterClip!=0) ? -1 : 0);\n   
            u_xlatb2 = u_xlati2==0;\n    u_xlat1.xy = u_xlat1.zw * u_xlat1.xy;\n   
            u_xlat1.x = u_xlat1.y * u_xlat1.x;\n    u_xlati1 = int((u_xlat1.x!=0.0)
            ? -1 : 0);\n    u_xlatb1.x = u_xlati1==0;\n    u_xlatb1.x = u_xlatb1.x
            && u_xlatb2;\n    if(u_xlatb1.x){\n        u_xlat16_3 = 0.0;\n    } else
            {\n        u_xlat1.x = texture2D(_AlphaMask, vs_TEXCOORD1.xy).w;\n       
            u_xlatb5 = _CutOff>=u_xlat1.x;\n        u_xlat1.x = (_HardBlend != 0)
            ? 1.0 : u_xlat1.x;\n        u_xlat1.x = (u_xlatb5) ? 0.0 : u_xlat1.x;\n       
            u_xlatb5 = _FlipAlphaMask==1;\n        u_xlat9 = (-u_xlat1.x) + 1.0;\n       
            u_xlat1.x = (u_xlatb5) ? u_xlat9 : u_xlat1.x;\n        u_xlat3 = u_xlat0.w
            * u_xlat1.x;\n        u_xlat16_3 = u_xlat3;\n    }\n    u_xlatb12 = _UseAlphaClip!=0;\n   
            u_xlat16_7 = u_xlat16_3 + -0.00100000005;\n    u_xlatb1.x = u_xlat16_7<0.0;\n   
            u_xlatb12 = u_xlatb12 && u_xlatb1.x;\n    if(u_xlatb12){discard;}\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = u_xlat16_3;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _AlphaMask_ST;\nin highp vec4
            in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec2 vs_TEXCOORD0;\nout highp vec2
            vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xy
            = in_POSITION0.xy * _AlphaMask_ST.xy + _AlphaMask_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tint _UseAlphaClip;\nuniform \tint _FlipAlphaMask;\nuniform \tfloat
            _CutOff;\nuniform \tint _HardBlend;\nuniform \tint _NoOuterClip;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _AlphaMask;\nin mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nin
            highp vec2 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nint u_xlati1;\nbvec4
            u_xlatb1;\nint u_xlati2;\nbool u_xlatb2;\nfloat u_xlat3;\nmediump float
            u_xlat16_3;\nbool u_xlatb5;\nmediump float u_xlat16_7;\nfloat u_xlat9;\nbool
            u_xlatb12;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat16_0 + _TextureSampleAdd;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n   
            u_xlatb1.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, vec4(0.0, 0.0, 0.0,
            0.0)).xy;\n    u_xlatb1.zw = greaterThanEqual(vec4(0.0, 0.0, 1.0, 1.0),
            vs_TEXCOORD1.xxxy).zw;\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n   
            u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z
            ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n   
            u_xlati2 = int((_NoOuterClip!=0) ? 0xFFFFFFFFu : uint(0));\n    u_xlatb2
            = u_xlati2==0;\n    u_xlat1.xy = u_xlat1.zw * u_xlat1.xy;\n    u_xlat1.x
            = u_xlat1.y * u_xlat1.x;\n    u_xlati1 = int((u_xlat1.x!=0.0) ? 0xFFFFFFFFu
            : uint(0));\n    u_xlatb1.x = u_xlati1==0;\n    u_xlatb1.x = u_xlatb1.x
            && u_xlatb2;\n    if(u_xlatb1.x){\n        u_xlat16_3 = 0.0;\n    } else
            {\n        u_xlat1.x = texture(_AlphaMask, vs_TEXCOORD1.xy).w;\n       
            u_xlatb5 = _CutOff>=u_xlat1.x;\n        u_xlat1.x = (_HardBlend != 0)
            ? 1.0 : u_xlat1.x;\n        u_xlat1.x = (u_xlatb5) ? 0.0 : u_xlat1.x;\n       
            u_xlatb5 = _FlipAlphaMask==1;\n        u_xlat9 = (-u_xlat1.x) + 1.0;\n       
            u_xlat1.x = (u_xlatb5) ? u_xlat9 : u_xlat1.x;\n        u_xlat3 = u_xlat0.w
            * u_xlat1.x;\n        u_xlat16_3 = u_xlat3;\n    }\n    u_xlatb12 = _UseAlphaClip!=0;\n   
            u_xlat16_7 = u_xlat16_3 + -0.00100000005;\n    u_xlatb1.x = u_xlat16_7<0.0;\n   
            u_xlatb12 = u_xlatb12 && u_xlatb1.x;\n    if(u_xlatb12){discard;}\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = u_xlat16_3;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 947afae4d36f1274ea2e4098262ceef6, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 947afae4d36f1274ea2e4098262ceef6, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 947afae4d36f1274ea2e4098262ceef6, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: 947afae4d36f1274ea2e4098262ceef6, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/SoftMaskShader.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 947afae4d36f1274ea2e4098262ceef6, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 947afae4d36f1274ea2e4098262ceef6, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: ccf5a0c8f87d3c547aff3daecb3164a4, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0.xyz = in_COLOR0.xyz;\n    vs_COLOR0.w
            = 0.100000001;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tfloat _XCrop;\nuniform \tfloat _YCrop;\nuniform
            lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec2
            u_xlatb0;\nlowp vec4 u_xlat10_1;\nvoid main()\n{\n    u_xlat0.x = (-vs_TEXCOORD0.y)
            + 1.0;\n    u_xlatb0.x = _YCrop>=u_xlat0.x;\n    u_xlatb0.y = _XCrop>=vs_TEXCOORD0.x;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n;\n    u_xlat0.x = u_xlat0.x * u_xlat0.y;\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.w = u_xlat0.x *
            u_xlat10_1.w;\n    u_xlat0.xyz = u_xlat10_1.xyz * vs_COLOR0.xyz;\n   
            SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0.xyz = in_COLOR0.xyz;\n    vs_COLOR0.w
            = 0.100000001;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tfloat _XCrop;\nuniform \tfloat _YCrop;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nbvec2 u_xlatb0;\nmediump vec4 u_xlat16_1;\nvoid main()\n{\n   
            u_xlat0.x = (-vs_TEXCOORD0.y) + 1.0;\n    u_xlatb0.x = _YCrop>=u_xlat0.x;\n   
            u_xlatb0.y = _XCrop>=vs_TEXCOORD0.x;\n    u_xlat0.x = u_xlatb0.x ? float(1.0)
            : 0.0;\n    u_xlat0.y = u_xlatb0.y ? float(1.0) : 0.0;\n;\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.y;\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.w = u_xlat0.x * u_xlat16_1.w;\n    u_xlat0.xyz = u_xlat16_1.xyz
            * vs_COLOR0.xyz;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: ccf5a0c8f87d3c547aff3daecb3164a4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: ccf5a0c8f87d3c547aff3daecb3164a4, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: ccf5a0c8f87d3c547aff3daecb3164a4, type: 3}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: ccf5a0c8f87d3c547aff3daecb3164a4, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UIImageCrop.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: ccf5a0c8f87d3c547aff3daecb3164a4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: ccf5a0c8f87d3c547aff3daecb3164a4, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 20fb5fa09d4675a4e94314a228763c23, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nbool u_xlatb2;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 =
            u_xlat10_0.w * vs_COLOR0.w + -0.00999999978;\n    u_xlat0 = u_xlat10_0
            * vs_COLOR0;\n    u_xlatb2 = u_xlat16_1<0.0;\n    if(u_xlatb2){discard;}\n   
            SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            float u_xlat16_1;\nbool u_xlatb2;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_0.w * vs_COLOR0.w + -0.00999999978;\n   
            u_xlat0 = u_xlat16_0 * vs_COLOR0;\n    u_xlatb2 = u_xlat16_1<0.0;\n   
            if(u_xlatb2){discard;}\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 20fb5fa09d4675a4e94314a228763c23, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 20fb5fa09d4675a4e94314a228763c23, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 20fb5fa09d4675a4e94314a228763c23, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: 20fb5fa09d4675a4e94314a228763c23, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UIAdditive.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 20fb5fa09d4675a4e94314a228763c23, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 20fb5fa09d4675a4e94314a228763c23, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: c3c3af59790cf3749ba49fe1c838c94e, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nbool u_xlatb2;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 =
            u_xlat10_0.w * vs_COLOR0.w + -0.00999999978;\n    u_xlat0 = u_xlat10_0
            * vs_COLOR0;\n    u_xlatb2 = u_xlat16_1<0.0;\n    if(u_xlatb2){discard;}\n   
            SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            float u_xlat16_1;\nbool u_xlatb2;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_0.w * vs_COLOR0.w + -0.00999999978;\n   
            u_xlat0 = u_xlat16_0 * vs_COLOR0;\n    u_xlatb2 = u_xlat16_1<0.0;\n   
            if(u_xlatb2){discard;}\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: c3c3af59790cf3749ba49fe1c838c94e, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: c3c3af59790cf3749ba49fe1c838c94e, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: c3c3af59790cf3749ba49fe1c838c94e, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: c3c3af59790cf3749ba49fe1c838c94e, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UILinearDodge.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: c3c3af59790cf3749ba49fe1c838c94e, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: c3c3af59790cf3749ba49fe1c838c94e, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: d287872ca8fd776418c28d332df585c3, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nbool u_xlatb0;\nmediump float u_xlat16_1;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 =
            u_xlat10_0.w * vs_COLOR0.w + -0.00999999978;\n    u_xlat0 = u_xlat10_0
            * vs_COLOR0;\n    SV_Target0 = u_xlat0;\n    u_xlatb0 = u_xlat16_1<0.0;\n   
            if(u_xlatb0){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool
            u_xlatb0;\nmediump float u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_0.w
            * vs_COLOR0.w + -0.00999999978;\n    u_xlat0 = u_xlat16_0 * vs_COLOR0;\n   
            SV_Target0 = u_xlat0;\n    u_xlatb0 = u_xlat16_1<0.0;\n    if(u_xlatb0){discard;}\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: d287872ca8fd776418c28d332df585c3, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: d287872ca8fd776418c28d332df585c3, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: d287872ca8fd776418c28d332df585c3, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: d287872ca8fd776418c28d332df585c3, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UIMultiply.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: d287872ca8fd776418c28d332df585c3, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: d287872ca8fd776418c28d332df585c3, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 227ac21f7763c00489cc458e3938e326, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nbool u_xlatb2;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 =
            u_xlat10_0.w * vs_COLOR0.w + -0.00999999978;\n    u_xlat0 = u_xlat10_0
            * vs_COLOR0;\n    u_xlatb2 = u_xlat16_1<0.0;\n    if(u_xlatb2){discard;}\n   
            SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            float u_xlat16_1;\nbool u_xlatb2;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_0.w * vs_COLOR0.w + -0.00999999978;\n   
            u_xlat0 = u_xlat16_0 * vs_COLOR0;\n    u_xlatb2 = u_xlat16_1<0.0;\n   
            if(u_xlatb2){discard;}\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 227ac21f7763c00489cc458e3938e326, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 227ac21f7763c00489cc458e3938e326, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 227ac21f7763c00489cc458e3938e326, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: 227ac21f7763c00489cc458e3938e326, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UIScreen.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 227ac21f7763c00489cc458e3938e326, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 227ac21f7763c00489cc458e3938e326, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: fb2e16a3d1280334a9e05394e1890f09, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nbool u_xlatb2;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 =
            u_xlat10_0.w * vs_COLOR0.w + -0.00999999978;\n    u_xlat0 = u_xlat10_0
            * vs_COLOR0;\n    u_xlatb2 = u_xlat16_1<0.0;\n    if(u_xlatb2){discard;}\n   
            SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            float u_xlat16_1;\nbool u_xlatb2;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_0.w * vs_COLOR0.w + -0.00999999978;\n   
            u_xlat0 = u_xlat16_0 * vs_COLOR0;\n    u_xlatb2 = u_xlat16_1<0.0;\n   
            if(u_xlatb2){discard;}\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fb2e16a3d1280334a9e05394e1890f09, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fb2e16a3d1280334a9e05394e1890f09, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: fb2e16a3d1280334a9e05394e1890f09, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: fb2e16a3d1280334a9e05394e1890f09, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UISoftAdditive.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fb2e16a3d1280334a9e05394e1890f09, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fb2e16a3d1280334a9e05394e1890f09, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nlowp vec4 u_xlat10_1;\nfloat unity_roundEven(float x) { float
            y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2
            unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x);
            a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4
            unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid
            main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x
            = unity_roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n   
            u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1
            + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0
            = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x
            = roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n   
            u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1
            + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0
            = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nbool u_xlatb3;\nfloat
            unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x ==
            0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x
            = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3
            unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a)
            { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z);
            a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat16_0.x
            = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = unity_roundEven(u_xlat16_0.x);\n   
            u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n   
            u_xlat16_2 = u_xlat16_0.w * u_xlat1.w + -0.00100000005;\n    u_xlatb3
            = u_xlat16_2<0.0;\n    if(u_xlatb3){discard;}\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump
            float u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n    u_xlat16_0.x =
            vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = roundEven(u_xlat16_0.x);\n   
            u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 + _TextureSampleAdd;\n   
            u_xlat16_2 = u_xlat16_0.w * u_xlat1.w + -0.00100000005;\n    u_xlatb3
            = u_xlat16_2<0.0;\n    if(u_xlatb3){discard;}\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump float
            u_xlat16_1;\nvec4 u_xlat2;\nlowp vec4 u_xlat10_2;\nmediump float u_xlat16_4;\nfloat
            unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x ==
            0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x
            = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3
            unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a)
            { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z);
            a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.xy
            = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n   
            u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy,
            0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat16_4 =
            vs_COLOR0.w * 255.0;\n    u_xlat16_4 = unity_roundEven(u_xlat16_4);\n   
            u_xlat16_0.w = u_xlat16_4 * 0.00392156886;\n    u_xlat10_2 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat2 = u_xlat10_2 + _TextureSampleAdd;\n   
            u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0 = u_xlat16_0 * u_xlat2;\n   
            u_xlat16_1 = u_xlat16_1 * u_xlat0.w;\n    SV_Target0.xyz = u_xlat0.xyz
            * vec3(u_xlat16_1);\n    SV_Target0.w = u_xlat16_1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            float u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump float
            u_xlat16_4;\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n   
            u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy
            * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n   
            u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat16_4 = vs_COLOR0.w * 255.0;\n   
            u_xlat16_4 = roundEven(u_xlat16_4);\n    u_xlat16_0.w = u_xlat16_4 *
            0.00392156886;\n    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat2 = u_xlat16_2 + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat2;\n    u_xlat16_1 = u_xlat16_1 * u_xlat0.w;\n   
            SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat16_1);\n    SV_Target0.w =
            u_xlat16_1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nlowp
            vec4 u_xlat10_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump
            float u_xlat16_5;\nfloat unity_roundEven(float x) { float y = floor(x
            + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2
            a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a;
            }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a)
            { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z);
            a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat16_0.x
            = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = unity_roundEven(u_xlat16_0.x);\n   
            u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n   
            u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0 = u_xlat16_0 * u_xlat1;\n   
            u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy
            + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n   
            u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n    u_xlat16_2 = u_xlat1.y
            * u_xlat1.x;\n    u_xlat16_5 = u_xlat0.w * u_xlat16_2 + -0.00100000005;\n   
            u_xlat16_2 = u_xlat0.w * u_xlat16_2;\n    SV_Target0.xyz = u_xlat0.xyz
            * vec3(u_xlat16_2);\n    SV_Target0.w = u_xlat16_2;\n    u_xlatb1 = u_xlat16_5<0.0;\n   
            if(u_xlatb1){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump
            float u_xlat16_5;\nvoid main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n   
            u_xlat16_0.x = roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x
            * 0.00392156886;\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1 = u_xlat16_1 + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat1;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n   
            u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy
            * vs_TEXCOORD2.zw;\n    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n   
            u_xlat16_2 = u_xlat1.y * u_xlat1.x;\n    u_xlat16_5 = u_xlat0.w * u_xlat16_2
            + -0.00100000005;\n    u_xlat16_2 = u_xlat0.w * u_xlat16_2;\n    SV_Target0.xyz
            = u_xlat0.xyz * vec3(u_xlat16_2);\n    SV_Target0.w = u_xlat16_2;\n   
            u_xlatb1 = u_xlat16_5<0.0;\n    if(u_xlatb1){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - UNITY_UI_CLIP_RECT
        - _
        KeywordGroups:
        - Keywords:
          - _
          - UNITY_UI_CLIP_RECT
          hasDiscard: 1
        - Keywords:
          - _
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: eb6605f85df3a8149a1db68382da2c36, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1
            = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tint
            _UseClipRect;\nuniform \tvec4 _ClipRect;\nuniform \tint _UseAlphaClip;\nuniform
            \tfloat _EffectAmount;\nuniform \tfloat _BrightnessAmount;\nuniform lowp
            sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nbvec4 u_xlatb0;\nvec4
            u_xlat1;\nlowp vec4 u_xlat10_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nvec3
            u_xlat3;\nbool u_xlatb5;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlatb0.xy
            = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n    u_xlatb0.zw
            = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n    u_xlat0.x
            = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y ? float(1.0)
            : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n    u_xlat0.w
            = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw * u_xlat0.xy;\n   
            u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n   
            u_xlat1 = u_xlat1 * vs_COLOR0;\n    u_xlat0 = u_xlat0.xxxx * u_xlat1;\n   
            u_xlat16_0 = (_UseClipRect != 0) ? u_xlat0 : u_xlat1;\n    u_xlat16_2
            = u_xlat16_0.w + -0.00100000005;\n    u_xlatb1 = u_xlat16_2<0.0;\n   
            u_xlatb5 = _UseAlphaClip!=0;\n    u_xlatb1 = u_xlatb5 && u_xlatb1;\n   
            if(u_xlatb1){discard;}\n    u_xlat1.xyz = u_xlat16_0.xyz * vec3(vec3(_BrightnessAmount,
            _BrightnessAmount, _BrightnessAmount));\n    u_xlat13 = dot(u_xlat1.xyz,
            vec3(0.300000012, 0.589999974, 0.109999999));\n    u_xlat3.xyz = (-u_xlat16_0.xyz)
            * vec3(vec3(_BrightnessAmount, _BrightnessAmount, _BrightnessAmount))
            + vec3(u_xlat13);\n    SV_Target0.w = u_xlat16_0.w;\n    u_xlat1.xyz
            = vec3(vec3(_EffectAmount, _EffectAmount, _EffectAmount)) * u_xlat3.xyz
            + u_xlat1.xyz;\n    SV_Target0.xyz = u_xlat1.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec2
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0
            = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1
            = in_POSITION0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tint _UseClipRect;\nuniform \tvec4 _ClipRect;\nuniform \tint _UseAlphaClip;\nuniform
            \tfloat _EffectAmount;\nuniform \tfloat _BrightnessAmount;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin mediump
            vec2 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nlayout(location = 0)
            out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nbvec4
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbool u_xlatb1;\nmediump
            float u_xlat16_2;\nvec3 u_xlat3;\nbool u_xlatb5;\nfloat u_xlat13;\nvoid
            main()\n{\n    u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n   
            u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n   
            u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y
            ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n   
            u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw
            * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 + _TextureSampleAdd;\n   
            u_xlat1 = u_xlat1 * vs_COLOR0;\n    u_xlat0 = u_xlat0.xxxx * u_xlat1;\n   
            u_xlat16_0 = (_UseClipRect != 0) ? u_xlat0 : u_xlat1;\n    u_xlat16_2
            = u_xlat16_0.w + -0.00100000005;\n    u_xlatb1 = u_xlat16_2<0.0;\n   
            u_xlatb5 = _UseAlphaClip!=0;\n    u_xlatb1 = u_xlatb5 && u_xlatb1;\n   
            if(u_xlatb1){discard;}\n    u_xlat1.xyz = u_xlat16_0.xyz * vec3(vec3(_BrightnessAmount,
            _BrightnessAmount, _BrightnessAmount));\n    u_xlat13 = dot(u_xlat1.xyz,
            vec3(0.300000012, 0.589999974, 0.109999999));\n    u_xlat3.xyz = (-u_xlat16_0.xyz)
            * vec3(vec3(_BrightnessAmount, _BrightnessAmount, _BrightnessAmount))
            + vec3(u_xlat13);\n    SV_Target0.w = u_xlat16_0.w;\n    u_xlat1.xyz
            = vec3(vec3(_EffectAmount, _EffectAmount, _EffectAmount)) * u_xlat3.xyz
            + u_xlat1.xyz;\n    SV_Target0.xyz = u_xlat1.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: eb6605f85df3a8149a1db68382da2c36, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: eb6605f85df3a8149a1db68382da2c36, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: eb6605f85df3a8149a1db68382da2c36, type: 3}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: eb6605f85df3a8149a1db68382da2c36, type: 3}
    ShaderPath: Assets/unity-ui-extensions/Shaders/UI GrayScale.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: eb6605f85df3a8149a1db68382da2c36, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: eb6605f85df3a8149a1db68382da2c36, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: cf73a0a4b5ea8994f916cd18a97c564b, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nvoid main()\n{\n    gl_Position = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\n#define SV_Target0 gl_FragData[0]\nvoid main()\n{\n    if((-1)!=0){discard;}\n   
            SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: QUEUE
            Value: Geometry
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\nvoid main()\n{\n    gl_Position =
            vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvoid main()\n{\n   
            if((int(0xFFFFFFFFu))!=0){discard;}\n    SV_Target0 = vec4(0.0, 0.0,
            0.0, 0.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: QUEUE
            Value: Geometry
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: cf73a0a4b5ea8994f916cd18a97c564b, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: cf73a0a4b5ea8994f916cd18a97c564b, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: QUEUE
          Value: Geometry
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: cf73a0a4b5ea8994f916cd18a97c564b, type: 3}
      Tags:
      - Key: QUEUE
        Value: Geometry
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 4800000, guid: cf73a0a4b5ea8994f916cd18a97c564b, type: 3}
    ShaderPath: Packages/com.unity.uiextensions/Runtime/Resources/Shaders/UIParticleHidden.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: cf73a0a4b5ea8994f916cd18a97c564b, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: cf73a0a4b5ea8994f916cd18a97c564b, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 10752, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nlowp vec3 u_xlat10_0;\nvoid main()\n{\n   
            u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat10_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec3 u_xlat16_0;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 10752, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 10752, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 10752, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 10752, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 10752, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 10752, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  _modifiedShaders: []
  invalidShaders: 0
  _sceneLightData:
    PointLightCount: 0
    SpotLightCount: 0
    DirectionalLightCount: 1
    LightmapOn: 1
    DirlightmapCombined: 1
    DirectionalCookieExists: 0
    PointCookieExists: 0
    SpotCookieExists: 0
    AddiitonalLightsKeywordRequired: 0
